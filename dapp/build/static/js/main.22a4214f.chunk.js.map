{"version":3,"sources":["assets/lock.svg","utils/helpers.js","components/ErrorBoundary.jsx","assets/calendar-red.svg","assets/calendar.svg","theme.js","context/Web3Context.jsx","shared/Container.jsx","utils/compatibilityHelpers.js","pages/Contracts.jsx","utils/invoice.js","context/CreateContext.jsx","utils/3box.js","shared/AccountLink.jsx","components/FormConfirmation.jsx","components/PaymentChunksForm.jsx","icons/QuestionIcon.jsx","shared/OrderedInput.jsx","components/PaymentDetailsForm.jsx","components/ProjectDetailsForm.jsx","graphql/client.js","graphql/fragments.js","graphql/getInvoice.js","icons/CopyIcon.jsx","components/Loader.jsx","components/RegisterSuccess.jsx","shared/StepInfo.jsx","pages/CreateInvoice.jsx","components/WhatIsThisModal.jsx","pages/Home.jsx","graphql/search.js","context/SearchContext.jsx","utils/erc20.js","icons/SearchIcon.jsx","pages/Invoices.jsx","hooks/useInvoiceStatus.jsx","icons/WalletFilledIcon.jsx","shared/InvoiceNotFound.jsx","pages/LockedInvoice.jsx","components/DepositFunds.jsx","components/LockFunds.jsx","components/ReleaseFunds.jsx","components/ResolveFunds.jsx","components/WithdrawFunds.jsx","pages/ViewInvoice.jsx","assets/space.png","shared/ConnectWeb3.jsx","assets/sharingan.png","shared/Footer.jsx","assets/logo.svg","icons/HamburgerIcon.jsx","shared/ProfileButton.jsx","shared/Header.jsx","shared/Layout.jsx","App.jsx","index.jsx","assets/lex-dao.png","config.js","utils/ipfs.js","utils/constants.js"],"names":["_path","getDateString","timeInSec","date","Date","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","isAddress","value","getAddress","toLowerCase","getNetworkName","chainId","networkNames","getGraphUrl","graphUrls","getExplorerUrl","explorerUrls","getRpcUrl","rpcUrls","getResolvers","resolvers","getResolverInfo","resolver","resolverInfo","getTokens","tokens","getTokenInfo","token","tokenInfo","decimals","symbol","getWrappedNativeToken","wrappedNativeToken","getInvoiceFactoryAddress","invoiceFactory","getTxLink","hash","getAddressLink","getIpfsLink","IPFS_ENDPOINT","getAccountString","account","len","length","substr","toUpperCase","isKnownResolver","indexOf","getResolverString","info","name","logError","error","console","copyToClipboard","tempInput","document","createElement","body","appendChild","select","execCommand","removeChild","URL_REGEX","BASE32_REGEX","BASE58_REGEX","isValidLink","url","startsWith","slice","test","str","getHexChainId","network","hexChainIds","rinkeby","getNetworkLabel","networkLabels","ErrorBoundary","props","state","hasError","errorInfo","this","children","justify","align","direction","w","minH","background","color","fontSize","React","Component","theme","chakraTheme","initialColorMode","useSystemColorMode","colors","red","green","white10","white20","black30","black80","grey","borderGrey","greyText","purple","red50","fonts","mono","heading","globalStyles","css","Calendar","CalendarRed","black","white","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","web3Modal","Web3Modal","cacheProvider","main","secondary","hover","Web3Context","createContext","Web3ContextProvider","useState","loading","setLoading","provider","setWeb3","setWeb3Provider","prov","a","initialCall","web3Provider","Web3","gotProvider","ethers","providers","Web3Provider","currentProvider","gotChainId","Number","signer","getSigner","gotAccount","_provider","useEffect","SUPPORTED_NETWORKS","connectWeb3","useCallback","requestProvider","modalProvider","safe","on","accounts","web3ModalError","disconnect","clearCachedProvider","window","ethereum","autoRefreshOnNetworkChange","canAutoConnect","cachedProvider","Provider","connectAccount","Container","overlay","overlayStyles","CSS","supports","backgroundColor","backdropFilter","h","flex","m","border","NETWORK_CONFIG","CONFIG","networks","Object","keys","Contracts","isSmallScreen","useBreakpointValue","base","md","fontWeight","mb","mx","textTransform","textAlign","map","INVOICE_FACTORY","TOKENS","href","isExternal","register","ethersProvider","client","amounts","terminationTime","detailsHash","abi","utils","Interface","contract","Contract","create","getResolutionRateFromFactory","resolutionRates","resolutionRate","resolutionRateError","awaitInvoiceAddress","tx","wait","getTransactionReceipt","receipt","eventFragment","events","eventTopic","getEventTopic","event","logs","find","e","topics","decodedLog","decodeEventLog","data","invoice","release","address","withdraw","lock","resolve","clientAward","providerAward","CreateContext","CreateContextProvider","useContext","RESOLVERS","WRAPPED_NATIVE_TOKEN","projectName","setProjectName","projectDescription","setProjectDescription","projectAgreement","setProjectAgreement","startDate","setStartDate","endDate","setEndDate","safetyValveDate","setSafetyValveDate","setDetailsHash","clientAddress","setClientAddress","paymentAddress","setPaymentAddress","BigNumber","from","paymentDue","setPaymentDue","paymentToken","setPaymentToken","milestones","setMilestones","termsAccepted","setTermsAccepted","arbitrationProvider","setArbitrationProvider","payments","setPayments","setTx","currentStep","setStep","nextStepEnabled","setNextStepEnabled","step1Valid","useMemo","getTime","step2Valid","gt","isNaN","Array","Set","step3Valid","reduce","t","add","eq","uploadMetadata","Math","floor","catch","ipfsError","then","createInvoice","registerError","transaction","nextStepHandler","prevState","goBackHandler","getProfile","profile","emoji","imageHash","imageUrl","fetch","BOX_ENDPOINT","encodeURIComponent","response","ok","status","json","boxProfile","image","contentUrl","AccountLink","inputAddress","inputChainId","walletChainId","setProfile","isResolver","isSubscribed","p","undefined","displayString","logoUrl","display","bgColor","px","_hover","textDecor","borderRadius","alignItems","as","overflow","bgImage","bgSize","bgRepeat","bgPosition","pl","FormConfirmation","tokenData","spacing","id","transform","ml","formatUnits","PaymentChunksForm","_val","index","bg","type","pr","onChange","target","amount","parseUnits","newPayments","toString","QuestionIcon","createIcon","displayName","path","d","fill","viewBox","OrderedLinkInput","label","setValue","infoText","tooltip","placeholder","protocol","setProtocol","input","setInput","isInvalid","setInvalid","placement","boxSize","borderLeftRadius","borderRightColor","borderRightWidth","newProtocol","newValue","isValid","maxLength","newInput","_invalid","borderColor","mt","OrderedInput","isDisabled","OrderedSelect","OrderedTextarea","resize","PaymentDetailsForm","arbitrationProviderType","setArbitrationProviderType","paymentDueInput","setPaymentDueInput","clientInvalid","setClientInvalid","providerInvalid","setProviderInvalid","resolverInvalid","setResolverInvalid","paymentInvalid","setPaymentInvalid","milestonesInvalid","setMilestonesInvalid","setResolutionRate","v","columns","sm","lte","gridArea","numMilestones","res","div","isChecked","checked","colorScheme","size","termsUrl","formatDate","getUTCMonth","getUTCDate","getUTCFullYear","join","ProjectDetailsForm","startDateString","endDateString","safetyValveDateString","nameInvalid","setNameInvalid","dateInvalid","setDateInvalid","parse","clients","o","createClient","exchanges","dedupExchange","fetchExchange","InvoiceDetails","gql","invoiceQuery","getInvoice","queryAddress","query","toPromise","log","CopyIcon","Loader","width","height","xmlns","stroke","fillRule","strokeWidth","strokeOpacity","cx","cy","r","attributeName","to","dur","repeatCount","RegisterSuccess","invoiceId","setInvoiceID","setInvoice","history","useHistory","interval","setInterval","inv","clearInterval","my","maxW","textDecoration","queryCommandSupported","onClick","variant","minW","location","origin","py","fontFamily","push","StepInfo","stepNum","stepTitle","stepDetails","lg","detail","CreateInvoiceInner","buttonSize","STEPS","step_title","step_details","templateColumns","gap","isLoading","next","CreateInvoice","withRouter","WhatIsThisModal","isOpen","onClose","isCentered","borderWidth","top","right","Home","viewInvoices","smallFontSize","smallScreen","betaWarningSmallScreen","useDisclosure","onOpen","pt","mr","justifySelf","alignSelf","searchQuery","addressSearchQuery","search","searchInput","first","isAddressSearch","addressInvoices","clientInvoices","providerInvoices","resolverInvoices","invoices","SearchContext","SearchContextProvider","fetching","setFetching","setQuery","result","setResult","searchError","setSearch","balanceOf","SearchIcon","clipRule","InvoiceStatusLabel","funded","setFunded","setLabel","currentMilestone","isLocked","disputes","resolutions","balance","gte","statusError","useInvoiceStatus","InvoicesInner","maxH","overflowY","borderBottom","_active","Invoices","WalletFilledIcon","InvoiceNotFound","LockedInvoice","match","params","hexChainId","invoiceChainId","parseInt","i","dispute","txHash","ipfsHash","fontStyle","getCheckedStatus","deposited","sum","checkedAtIndex","_c","DepositFunds","due","NATIVE_TOKEN_SYMBOL","nativeSymbols","getNativeTokenSymbol","paymentType","setPaymentType","setAmount","amountInput","setAmountInput","setTransaction","deposit","sendTransaction","tokenContract","transfer","depositError","isWRAPPED","initialStatus","setChecked","setBalance","getBalance","balanceError","newChecked","totAmount","tot","cur","ind","newAmount","sub","newAmountInput","_extends","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLock","_ref","svgRef","title","titleId","ref","ForwardRef","LockFunds","disputeReason","setDisputeReason","fee","locking","setLocking","lockFunds","uploadDisputeDetails","reason","setTimeout","lockError","position","left","ReleaseFunds","close","getReleaseAmount","send","releaseError","ResolveFunds","resolverAward","availableFunds","setClientAward","setProviderAward","clientAwardInput","setClientAwardInput","providerAwardInput","setProviderAwardInput","comments","setComments","resolveFunds","award","WithdrawFunds","withdrawError","ViewInvoice","balanceLoading","setBalanceLoading","modal","setModal","selected","setSelected","b","leftMinW","leftMaxW","rightMaxW","gridColumns","total","released","deposits","releases","isClient","isExpired","isReleasable","isLockable","resolution","onLock","onDeposit","onRelease","onResolve","onWithdraw","toUTCString","amt","full","timestamp","toLocaleDateString","resolutionFee","isInteger","ConnectWeb3","NETWORK_NAMES","Footer","center","bottom","HamburgerIcon","ProfileButton","zIndex","StyledButton","styled","Button","Header","buttonVariant","src","Logo","alt","LogoText","transition","pointerEvents","clipPath","Layout","useLocation","isOpenPath","pathname","overflowX","BackgroundImage","App","config","styles","exact","component","ReactDOM","render","StrictMode","getElementById","INFURA_ID","SUBGRAPH","LexDAOLogo","ipfsTheGraph","IPFSClient","host","port","ipfsInfura","meta","metadata","version","INVOICE_VERSION","objectString","JSON","stringify","bufferedString","Buffer","Promise","all","node","pin","bytes","Base58","decode","chainIds","matic","mumbai","xdai","mainnet","kovan","n"],"mappings":"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","file":"static/js/main.22a4214f.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLock(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 76,\n    height: 94,\n    viewBox: \"0 0 76 94\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.4103 31.3281V24.4609C52.4103 20.7461 50.9337 17.1875 48.3087 14.5586C45.6837 11.9336 42.1212 10.4609 38.4103 10.4609H37.5002C29.7697 10.4609 23.5002 16.7265 23.5002 24.4609V31.3203C19.9885 31.6015 16.4846 31.9765 12.9882 32.4492V24.4492C12.9999 17.9492 15.5937 11.7192 20.203 7.13315C24.8085 2.54725 31.051 -0.0191455 37.551 0.000354457H38.4611C44.9455 0.00816646 51.1601 2.58625 55.7461 7.17225C60.332 11.7582 62.9102 17.9773 62.9219 24.4613V32.4613C59.4258 31.9808 55.9219 31.6019 52.4099 31.3285L52.4103 31.3281ZM5.51234 42.3281C26.9853 38.2656 49.0353 38.2656 70.5123 42.3281C73.3912 42.8749 75.4693 45.3984 75.4498 48.3281V85.2111C75.4498 87.84 73.5826 90.0977 71.0006 90.59L67.6725 91.2189C57.8873 93.0705 47.9575 94.0001 38.0005 94.0001C28.0513 94.0001 18.1255 93.0704 8.35254 91.2189L5.00094 90.59C2.41504 90.1017 0.543939 87.84 0.540039 85.2111V47.7811C0.543946 45.1483 2.41504 42.8905 5.00094 42.3983L5.51234 42.3281ZM31.8713 76.7501C35.8127 78.2892 40.1877 78.2892 44.1293 76.7501C44.8325 76.4844 45.184 75.7032 44.9223 75.0001L41.7309 66.0001C43.7309 64.4142 44.5121 61.7345 43.6723 59.3243C42.8325 56.9141 40.559 55.297 38.0043 55.297C35.4535 55.297 33.1762 56.9142 32.3402 59.3243C31.5004 61.7345 32.2777 64.4141 34.2816 66.0001L31.0902 75.0001C30.8246 75.6993 31.1722 76.4806 31.8715 76.7501H31.8713Z\",\n    fill: \"#FF3864\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLock);\nexport default __webpack_public_path__ + \"static/media/lock.02f0ef76.svg\";\nexport { ForwardRef as ReactComponent };","import { getAddress } from '@ethersproject/address';\r\n\r\nimport {\r\n  chainIds,\r\n  explorerUrls,\r\n  graphUrls,\r\n  hexChainIds,\r\n  invoiceFactory,\r\n  IPFS_ENDPOINT,\r\n  nativeSymbols,\r\n  networkLabels,\r\n  networkNames,\r\n  resolverInfo,\r\n  resolvers,\r\n  rpcUrls,\r\n  tokenInfo,\r\n  tokens,\r\n  wrappedNativeToken,\r\n} from './constants';\r\n\r\nexport const getDateString = timeInSec => {\r\n  const date = new Date(timeInSec ? timeInSec * 1000 : 0);\r\n  const ye = new Intl.DateTimeFormat('en', {\r\n    year: 'numeric',\r\n  }).format(date);\r\n  const mo = new Intl.DateTimeFormat('en', {\r\n    month: 'long',\r\n  }).format(date);\r\n  const da = new Intl.DateTimeFormat('en', {\r\n    day: '2-digit',\r\n  }).format(date);\r\n  return `${mo} ${da}, ${ye}`;\r\n};\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport const isAddress = value => {\r\n  try {\r\n    return getAddress(value).toLowerCase();\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getNetworkName = chainId =>\r\n  networkNames[chainId] || 'Unknown Chain';\r\n\r\nexport const getGraphUrl = chainId => graphUrls[chainId] || graphUrls[4];\r\n\r\nexport const getExplorerUrl = chainId =>\r\n  explorerUrls[chainId] || explorerUrls[4];\r\n\r\nexport const getRpcUrl = chainId => rpcUrls[chainId] || rpcUrls[4];\r\n\r\nexport const getResolvers = chainId => resolvers[chainId] || resolvers[4];\r\n\r\nexport const getResolverInfo = (chainId, resolver) =>\r\n  (resolverInfo[chainId] || resolverInfo[4])[resolver];\r\n\r\nexport const getTokens = chainId => tokens[chainId] || tokens[4];\r\n\r\nexport const getTokenInfo = (chainId, token) =>\r\n  (tokenInfo[chainId] || tokenInfo[4])[token] || {\r\n    decimals: 18,\r\n    symbol: 'UNKNOWN',\r\n  };\r\n\r\nexport const getWrappedNativeToken = chainId =>\r\n  wrappedNativeToken[chainId] || wrappedNativeToken[4];\r\n\r\nexport const getNativeTokenSymbol = chainId =>\r\n  nativeSymbols[chainId] || nativeSymbols[4];\r\n\r\nexport const getInvoiceFactoryAddress = chainId =>\r\n  invoiceFactory[chainId] || invoiceFactory[4];\r\n\r\nexport const getTxLink = (chainId, hash) =>\r\n  `${getExplorerUrl(chainId)}/tx/${hash}`;\r\n\r\nexport const getAddressLink = (chainId, hash) =>\r\n  `${getExplorerUrl(chainId)}/address/${hash}`;\r\n\r\n// bytes58 QmNLei78zWmzUdbeRB3CiUfAizWUrbeeZh5K1rhAQKCh51\r\n// is the same as\r\n// bytes64 12200000000000000000000000000000000000000000000000000000000000000000\r\n// which means an all zeros bytes32 was input on the contract\r\nexport const getIpfsLink = hash =>\r\n  hash === 'QmNLei78zWmzUdbeRB3CiUfAizWUrbeeZh5K1rhAQKCh51'\r\n    ? ''\r\n    : `${IPFS_ENDPOINT}/ipfs/${hash}`;\r\n\r\nexport const getAccountString = account => {\r\n  const len = account.length;\r\n  return `0x${account.substr(2, 3).toUpperCase()}...${account\r\n    .substr(len - 3, len - 1)\r\n    .toUpperCase()}`;\r\n};\r\n\r\nexport const isKnownResolver = (chainId, resolver) =>\r\n  getResolvers(chainId).indexOf(resolver.toLowerCase()) !== -1;\r\n\r\nexport const getResolverString = (chainId, resolver) => {\r\n  const info = getResolverInfo(chainId, resolver);\r\n  return info ? info.name : getAccountString(resolver);\r\n};\r\n\r\nexport const logError = error => {\r\n  // eslint-disable-next-line no-console\r\n  console.error(error);\r\n};\r\n\r\nexport const logDebug = msg => {\r\n  if (process.env.REACT_APP_DEBUG_LOGS === 'true') {\r\n    // eslint-disable-next-line no-console\r\n    console.debug(msg);\r\n  }\r\n};\r\n\r\nexport const copyToClipboard = value => {\r\n  const tempInput = document.createElement('input');\r\n  tempInput.value = value;\r\n  document.body.appendChild(tempInput);\r\n  tempInput.select();\r\n  document.execCommand('copy');\r\n  document.body.removeChild(tempInput);\r\n};\r\n\r\nconst URL_REGEX = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)?/;\r\n\r\nexport const isValidURL = str => {\r\n  return !!URL_REGEX.test(str);\r\n};\r\n\r\nconst BASE32_REGEX = /^[a-zA-Z2-7]+=*$/;\r\nconst BASE58_REGEX = /^[1-9A-HJ-NP-Za-km-z]+=*$/;\r\n\r\nexport const isValidCID = hash => {\r\n  return (\r\n    (hash.length === 59 &&\r\n      hash.startsWith('bafy') &&\r\n      !!BASE32_REGEX.test(hash)) ||\r\n    (hash.length === 46 && hash.startsWith('Qm') && !!BASE58_REGEX.test(hash))\r\n  );\r\n};\r\n\r\nexport const isValidLink = url => {\r\n  if (!url) return false;\r\n  if (url.startsWith('ipfs://')) {\r\n    return isValidCID(url.slice(7));\r\n  }\r\n  return isValidURL(url);\r\n};\r\n\r\nexport const getChainId = network => chainIds[network] || chainIds.rinkeby;\r\n\r\nexport const getHexChainId = network =>\r\n  hexChainIds[network] || hexChainIds.rinkeby;\r\n\r\nexport const getNetworkLabel = chainId => networkLabels[chainId] || 'unknown';\r\n","import { Flex, Text } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nimport { logError } from '../utils/helpers';\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    if (error) {\r\n      return { hasError: true };\r\n    }\r\n    return { hasError: false };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    logError({ error, errorInfo });\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n    const { children } = this.props;\r\n    if (hasError) {\r\n      return (\r\n        <Flex\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          direction=\"column\"\r\n          w=\"100%\"\r\n          minH=\"100vh\"\r\n          background=\"black\"\r\n          color=\"red.500\"\r\n        >\r\n          <Text fontSize=\"lg\"> Something went wrong </Text>\r\n          <Text> Please check console for errors </Text>\r\n        </Flex>\r\n      );\r\n    }\r\n\r\n    return children;\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/calendar-red.2413d1e3.svg\";","export default __webpack_public_path__ + \"static/media/calendar.34daa311.svg\";","import chakraTheme from '@chakra-ui/theme';\r\nimport { css } from '@emotion/react';\r\n\r\nimport CalendarRed from './assets/calendar-red.svg';\r\nimport Calendar from './assets/calendar.svg';\r\n\r\nexport const theme = {\r\n  ...chakraTheme,\r\n  initialColorMode: 'dark',\r\n  useSystemColorMode: false,\r\n  colors: {\r\n    ...chakraTheme.colors,\r\n    red: {\r\n      ...chakraTheme.colors.red,\r\n      200: '#ffe2eb',\r\n      300: '#ffb1c3',\r\n      400: '#ff7f9c',\r\n      500: '#ff3864',\r\n      600: '#b30027',\r\n      700: '#81001c',\r\n      800: '#4f0010',\r\n      900: '#200005',\r\n    },\r\n    green: '#38FF88',\r\n    background: '#262626',\r\n    white10: 'rgba(255,255,255,0.1)',\r\n    white20: 'rgba(255,255,255,0.2)',\r\n    black30: 'rgba(0,0,0,0.3)',\r\n    black80: 'rgba(0,0,0,0.8)',\r\n    grey: '#A4A4A4',\r\n    borderGrey: '#505050',\r\n    greyText: '#ABABAB',\r\n    purple: '#702b89',\r\n    red50: 'rgba(255, 56, 100, 0.5)',\r\n  },\r\n  fonts: {\r\n    ...chakraTheme.fonts,\r\n    mono: `'Rubik Mono One', sans-serif`,\r\n    heading: `'Rubik One', sans-serif`,\r\n    body: `'Roboto', sans-serif`,\r\n  },\r\n};\r\n\r\nexport const globalStyles = css`\r\n  /*\r\n    This will hide the focus indicator if the element receives focus via the mouse,\r\n    but it will still show up on keyboard focus.\r\n  */\r\n  .js-focus-visible :focus:not([data-focus-visible-added]) {\r\n    box-shadow: none;\r\n  }\r\n  *:focus {\r\n    outline: none;\r\n    border-color: ${theme.colors.purple} !important;\r\n    box-shadow: 0 0 0 1px ${theme.colors.purple} !important;\r\n  }\r\n  input[type='date']::-webkit-calendar-picker-indicator {\r\n    opacity: 1;\r\n    display: block;\r\n    background: url(${Calendar}) no-repeat;\r\n    background-size: contain !important;\r\n    width: 14px;\r\n    height: 14px;\r\n    border-width: thin;\r\n    cursor: pointer;\r\n    transition: background 0.25s;\r\n    &:hover {\r\n      background: url(${CalendarRed}) no-repeat;\r\n      background-size: contain;\r\n    }\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n      background-size: contain;\r\n      outline: none;\r\n    }\r\n  }\r\n  select option {\r\n    background: ${theme.colors.black} !important;\r\n    color: ${theme.colors.white};\r\n  }\r\n  body {\r\n    font-family: ${theme.fonts.body};\r\n    background: ${theme.colors.black};\r\n    color: ${theme.colors.white};\r\n  }\r\n  .web3modal-modal-lightbox {\r\n    zindex: 20;\r\n  }\r\n`;\r\n","import { SafeAppWeb3Modal as Web3Modal } from '@gnosis.pm/safe-apps-web3modal';\r\nimport WalletConnectProvider from '@walletconnect/web3-provider';\r\nimport { ethers } from 'ethers';\r\nimport React, {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport Web3 from 'web3';\r\n\r\nimport { theme } from '../theme';\r\nimport { SUPPORTED_NETWORKS } from '../utils/constants';\r\nimport { getRpcUrl, logError } from '../utils/helpers';\r\n\r\nconst providerOptions = {\r\n  walletconnect: {\r\n    package: WalletConnectProvider,\r\n    options: {\r\n      rpc: {\r\n        1: getRpcUrl(1),\r\n        4: getRpcUrl(4),\r\n        42: getRpcUrl(42),\r\n        100: getRpcUrl(100),\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst web3Modal = new Web3Modal({\r\n  cacheProvider: true,\r\n  providerOptions,\r\n  theme: {\r\n    background: theme.colors.background,\r\n    main: theme.colors.red[500],\r\n    secondary: theme.colors.white,\r\n    hover: theme.colors.black30,\r\n  },\r\n});\r\n\r\nexport const Web3Context = createContext();\r\nexport const useWeb3 = () => useContext(Web3Context);\r\n\r\nexport const Web3ContextProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [{ account, provider, chainId }, setWeb3] = useState({});\r\n\r\n  const setWeb3Provider = async (prov, initialCall = false) => {\r\n    if (prov) {\r\n      const web3Provider = new Web3(prov);\r\n      const gotProvider = new ethers.providers.Web3Provider(\r\n        web3Provider.currentProvider,\r\n      );\r\n      const gotChainId = Number(prov.chainId);\r\n      if (initialCall) {\r\n        const signer = gotProvider.getSigner();\r\n        const gotAccount = await signer.getAddress();\r\n        setWeb3(_provider => ({\r\n          ..._provider,\r\n          provider: gotProvider,\r\n          chainId: gotChainId,\r\n          account: gotAccount,\r\n        }));\r\n      } else {\r\n        setWeb3(_provider => ({\r\n          ..._provider,\r\n          provider: gotProvider,\r\n          chainId: gotChainId,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (SUPPORTED_NETWORKS.indexOf(chainId) === -1) {\r\n      // TODO show error alert that invalid network is connected\r\n    }\r\n  }, [chainId]);\r\n\r\n  const connectWeb3 = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const modalProvider = await web3Modal.requestProvider();\r\n\r\n      await setWeb3Provider(modalProvider, true);\r\n\r\n      const isGnosisSafe = !!modalProvider.safe;\r\n\r\n      if (!isGnosisSafe) {\r\n        modalProvider.on('accountsChanged', accounts => {\r\n          setWeb3(_provider => ({\r\n            ..._provider,\r\n            account: accounts[0],\r\n          }));\r\n        });\r\n        modalProvider.on('chainChanged', () => {\r\n          setWeb3Provider(modalProvider);\r\n        });\r\n      }\r\n    } catch (web3ModalError) {\r\n      logError({ web3ModalError });\r\n      throw web3ModalError;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const disconnect = useCallback(async () => {\r\n    web3Modal.clearCachedProvider();\r\n    setWeb3({});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      window.ethereum.autoRefreshOnNetworkChange = false;\r\n    }\r\n    (async function load() {\r\n      if ((await web3Modal.canAutoConnect()) || web3Modal.cachedProvider) {\r\n        connectWeb3();\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [connectWeb3]);\r\n\r\n  return (\r\n    <Web3Context.Provider\r\n      value={{\r\n        loading,\r\n        account,\r\n        provider,\r\n        chainId,\r\n        connectAccount: connectWeb3,\r\n        disconnect,\r\n      }}\r\n    >\r\n      {children}\r\n    </Web3Context.Provider>\r\n  );\r\n};\r\n","import { Flex } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nimport { theme } from '../theme';\r\nimport { isBackdropFilterSupported } from '../utils/compatibilityHelpers';\r\n\r\nexport const Container = ({ children, overlay, ...props }) => {\r\n  const overlayStyles = isBackdropFilterSupported()\r\n    ? {\r\n        backgroundColor: 'black30',\r\n        backdropFilter: 'blur(8px)',\r\n      }\r\n    : {\r\n        backgroundColor: 'black80',\r\n      };\r\n  return (\r\n    <Flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      direction=\"column\"\r\n      w=\"calc(100% - 2rem)\"\r\n      h=\"100%\"\r\n      flex={1}\r\n      m=\"1rem\"\r\n      border={`2px solid ${theme.colors.red[500]}`}\r\n      css={overlay ? overlayStyles : {}}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Flex>\r\n  );\r\n};\r\n","// https://developer.mozilla.org/en-US/docs/Web/API/CSS/supports\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility\r\nexport const isBackdropFilterSupported = () =>\r\n  typeof CSS !== 'undefined' &&\r\n  CSS.supports != null &&\r\n  (CSS.supports('-webkit-backdrop-filter', 'blur(1px)') ||\r\n    CSS.supports('backdrop-filter', 'blur(1px)'));\r\n","import { Heading, Link, Text, useBreakpointValue } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nimport { CONFIG } from '../config';\r\nimport { Container } from '../shared/Container';\r\nimport {\r\n  getAccountString,\r\n  getAddressLink,\r\n  getInvoiceFactoryAddress,\r\n  getTokenInfo,\r\n  getTokens,\r\n} from '../utils/helpers';\r\n\r\nconst { NETWORK_CONFIG } = CONFIG;\r\nconst networks = Object.keys(NETWORK_CONFIG);\r\n\r\nexport const Contracts = () => {\r\n  const isSmallScreen = useBreakpointValue({ base: true, md: false });\r\n  return (\r\n    <Container overlay color=\"white\">\r\n      <Heading\r\n        fontWeight=\"normal\"\r\n        mb=\"1rem\"\r\n        mx=\"1rem\"\r\n        textTransform=\"uppercase\"\r\n        textAlign=\"center\"\r\n        color=\"red.500\"\r\n      >\r\n        Contracts\r\n      </Heading>\r\n\r\n      {networks.map(chainId => {\r\n        const INVOICE_FACTORY = getInvoiceFactoryAddress(chainId);\r\n        const TOKENS = getTokens(chainId);\r\n        return (\r\n          <>\r\n            <Text textAlign=\"center\">NETWORK CHAIN ID: {chainId}</Text>\r\n            <Text textAlign=\"center\">\r\n              INVOICE FACTORY:{' '}\r\n              <Link\r\n                href={getAddressLink(chainId, INVOICE_FACTORY)}\r\n                isExternal\r\n                color=\"red.500\"\r\n              >\r\n                {isSmallScreen\r\n                  ? getAccountString(INVOICE_FACTORY)\r\n                  : INVOICE_FACTORY}\r\n              </Link>\r\n            </Text>\r\n            {TOKENS.map(token => (\r\n              <Text textAlign=\"center\" key={token}>\r\n                {`ERC20 TOKEN ${getTokenInfo(chainId, token).symbol}: `}\r\n                <Link\r\n                  href={getAddressLink(chainId, token)}\r\n                  isExternal\r\n                  color=\"red.500\"\r\n                >\r\n                  {isSmallScreen ? getAccountString(token) : token}\r\n                </Link>\r\n              </Text>\r\n            ))}\r\n            <br />\r\n          </>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n","import { Contract, utils } from 'ethers';\r\n\r\nimport { getInvoiceFactoryAddress, logError } from './helpers';\r\n\r\nexport const register = async (\r\n  chainId,\r\n  ethersProvider,\r\n  client,\r\n  provider,\r\n  resolver,\r\n  token,\r\n  amounts, // array of milestone payments in wei\r\n  terminationTime, // time in seconds since epoch\r\n  detailsHash, // 32 bits hex\r\n) => {\r\n  const abi = new utils.Interface([\r\n    'function create(address client, address provider, uint8 resolverType, address resolver, address token, uint256[] calldata amounts, uint256 terminationTime, bytes32 details) public',\r\n  ]);\r\n  const contract = new Contract(\r\n    getInvoiceFactoryAddress(chainId),\r\n    abi,\r\n    ethersProvider.getSigner(),\r\n  );\r\n\r\n  const resolverType = 0; // 0 for individual, 1 for erc-792 arbitrator\r\n  return contract.create(\r\n    client,\r\n    provider,\r\n    resolverType,\r\n    resolver,\r\n    token,\r\n    amounts,\r\n    terminationTime,\r\n    detailsHash,\r\n  );\r\n};\r\n\r\nexport const getResolutionRateFromFactory = async (\r\n  chainId,\r\n  ethersProvider,\r\n  resolver,\r\n) => {\r\n  if (!utils.isAddress(resolver)) return 20;\r\n  try {\r\n    const abi = new utils.Interface([\r\n      'function resolutionRates(address resolver) public view returns (uint256)',\r\n    ]);\r\n    const contract = new Contract(\r\n      getInvoiceFactoryAddress(chainId),\r\n      abi,\r\n      ethersProvider,\r\n    );\r\n\r\n    const resolutionRate = Number(await contract.resolutionRates(resolver));\r\n    return resolutionRate > 0 ? resolutionRate : 20;\r\n  } catch (resolutionRateError) {\r\n    logError({ resolutionRateError });\r\n    return 20;\r\n  }\r\n};\r\n\r\nexport const awaitInvoiceAddress = async (ethersProvider, tx) => {\r\n  await tx.wait(1);\r\n  const abi = new utils.Interface([\r\n    'event LogNewInvoice(uint256 indexed id, address invoice, uint256[] amounts)',\r\n  ]);\r\n  const receipt = await ethersProvider.getTransactionReceipt(tx.hash);\r\n  const eventFragment = abi.events[Object.keys(abi.events)[0]];\r\n  const eventTopic = abi.getEventTopic(eventFragment);\r\n  const event = receipt.logs.find(e => e.topics[0] === eventTopic);\r\n  if (event) {\r\n    const decodedLog = abi.decodeEventLog(\r\n      eventFragment,\r\n      event.data,\r\n      event.topics,\r\n    );\r\n    return decodedLog.invoice;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const release = async (ethersProvider, address) => {\r\n  const abi = new utils.Interface(['function release() public']);\r\n  const contract = new Contract(address, abi, ethersProvider.getSigner());\r\n  return contract.release();\r\n};\r\n\r\nexport const withdraw = async (ethersProvider, address) => {\r\n  const abi = new utils.Interface(['function withdraw() public']);\r\n  const contract = new Contract(address, abi, ethersProvider.getSigner());\r\n  return contract.withdraw();\r\n};\r\n\r\nexport const lock = async (\r\n  ethersProvider,\r\n  address,\r\n  detailsHash, // 32 bits hex\r\n) => {\r\n  const abi = new utils.Interface(['function lock(bytes32 details) external']);\r\n  const contract = new Contract(address, abi, ethersProvider.getSigner());\r\n  return contract.lock(detailsHash);\r\n};\r\n\r\nexport const resolve = async (\r\n  ethersProvider,\r\n  address,\r\n  clientAward,\r\n  providerAward,\r\n  detailsHash, // 32 bits hex\r\n) => {\r\n  const abi = new utils.Interface([\r\n    'function resolve(uint256 clientAward, uint256 providerAward, bytes32 details) external',\r\n  ]);\r\n  const contract = new Contract(address, abi, ethersProvider.getSigner());\r\n  return contract.resolve(clientAward, providerAward, detailsHash);\r\n};\r\n","import { BigNumber, utils } from 'ethers';\r\nimport React, {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\n\r\nimport {\r\n  getResolvers,\r\n  getWrappedNativeToken,\r\n  isValidLink,\r\n  logError,\r\n} from '../utils/helpers';\r\nimport { register } from '../utils/invoice';\r\nimport { uploadMetadata } from '../utils/ipfs';\r\nimport { Web3Context } from './Web3Context';\r\n\r\nconst { isAddress } = utils;\r\n\r\nexport const CreateContext = createContext();\r\n\r\nexport const CreateContextProvider = ({ children }) => {\r\n  const { provider, chainId } = useContext(Web3Context);\r\n  const RESOLVERS = getResolvers(chainId);\r\n  const WRAPPED_NATIVE_TOKEN = getWrappedNativeToken(chainId);\r\n\r\n  // project details\r\n  const [projectName, setProjectName] = useState('');\r\n  const [projectDescription, setProjectDescription] = useState('');\r\n  const [projectAgreement, setProjectAgreement] = useState('');\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const [safetyValveDate, setSafetyValveDate] = useState();\r\n  const [detailsHash, setDetailsHash] = useState(''); // ipfsHash for projectDetails\r\n\r\n  // payment details\r\n  const [clientAddress, setClientAddress] = useState('');\r\n  const [paymentAddress, setPaymentAddress] = useState('');\r\n  const [paymentDue, setPaymentDue] = useState(BigNumber.from(0));\r\n  const [paymentToken, setPaymentToken] = useState(WRAPPED_NATIVE_TOKEN);\r\n  const [milestones, setMilestones] = useState('1');\r\n  const [termsAccepted, setTermsAccepted] = useState(false);\r\n  const [arbitrationProvider, setArbitrationProvider] = useState(RESOLVERS[0]);\r\n\r\n  // payments chunks\r\n  const [payments, setPayments] = useState([BigNumber.from(0)]);\r\n  const [tx, setTx] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // step handling\r\n  const [currentStep, setStep] = useState(1);\r\n  const [nextStepEnabled, setNextStepEnabled] = useState(false);\r\n\r\n  const step1Valid = useMemo(\r\n    () =>\r\n      projectName &&\r\n      isValidLink(projectAgreement) &&\r\n      safetyValveDate &&\r\n      safetyValveDate > new Date().getTime(),\r\n    [projectName, projectAgreement, safetyValveDate],\r\n  );\r\n\r\n  const step2Valid = useMemo(\r\n    () =>\r\n      isAddress(clientAddress) &&\r\n      isAddress(paymentAddress) &&\r\n      isAddress(paymentToken) &&\r\n      isAddress(arbitrationProvider) &&\r\n      paymentDue.gt(0) &&\r\n      !isNaN(Number(milestones)) &&\r\n      milestones > 0 &&\r\n      termsAccepted &&\r\n      Array.from(\r\n        new Set([\r\n          clientAddress.toLowerCase(),\r\n          paymentAddress.toLowerCase(),\r\n          paymentToken.toLowerCase(),\r\n          arbitrationProvider.toLowerCase(),\r\n        ]),\r\n      ).length === 4,\r\n    [\r\n      clientAddress,\r\n      paymentAddress,\r\n      paymentToken,\r\n      arbitrationProvider,\r\n      paymentDue,\r\n      milestones,\r\n      termsAccepted,\r\n    ],\r\n  );\r\n\r\n  const step3Valid = useMemo(\r\n    () => payments.reduce((t, a) => t.add(a), BigNumber.from(0)).eq(paymentDue),\r\n    [payments, paymentDue],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (step1Valid && currentStep === 2) {\r\n      uploadMetadata({\r\n        projectName,\r\n        projectDescription,\r\n        projectAgreement,\r\n        startDate: Math.floor(startDate / 1000),\r\n        endDate: Math.floor(endDate / 1000),\r\n      })\r\n        .catch(ipfsError => {\r\n          logError({ ipfsError });\r\n        })\r\n        .then(hash => setDetailsHash(hash));\r\n    }\r\n  }, [\r\n    step1Valid,\r\n    currentStep,\r\n    projectName,\r\n    projectDescription,\r\n    projectAgreement,\r\n    startDate,\r\n    endDate,\r\n  ]);\r\n\r\n  const createInvoice = useCallback(async () => {\r\n    if (step1Valid && step2Valid && step3Valid && detailsHash) {\r\n      setLoading(true);\r\n      setTx();\r\n\r\n      const transaction = await register(\r\n        chainId,\r\n        provider,\r\n        clientAddress,\r\n        paymentAddress,\r\n        arbitrationProvider,\r\n        paymentToken,\r\n        payments,\r\n        Math.floor(safetyValveDate / 1000),\r\n        detailsHash,\r\n      ).catch(registerError => {\r\n        logError({ registerError });\r\n        setLoading(false);\r\n        throw registerError;\r\n      });\r\n\r\n      setTx(transaction);\r\n      setLoading(false);\r\n    }\r\n  }, [\r\n    chainId,\r\n    provider,\r\n    clientAddress,\r\n    paymentAddress,\r\n    arbitrationProvider,\r\n    paymentToken,\r\n    payments,\r\n    safetyValveDate,\r\n    detailsHash,\r\n    step1Valid,\r\n    step2Valid,\r\n    step3Valid,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (currentStep === 1) {\r\n      setNextStepEnabled(step1Valid);\r\n    } else if (currentStep === 2) {\r\n      setNextStepEnabled(step2Valid);\r\n    } else if (currentStep === 3) {\r\n      setNextStepEnabled(step3Valid);\r\n    } else if (currentStep === 4) {\r\n      setNextStepEnabled(true);\r\n    } else {\r\n      setNextStepEnabled(false);\r\n    }\r\n  }, [step1Valid, step2Valid, step3Valid, currentStep]);\r\n\r\n  const goBackHandler = () => setStep(prevState => prevState - 1);\r\n\r\n  const nextStepHandler = useCallback(() => {\r\n    if (nextStepEnabled) {\r\n      if (currentStep === 4) return createInvoice();\r\n      setStep(prevState => prevState + 1);\r\n    }\r\n    return () => undefined;\r\n  }, [nextStepEnabled, currentStep, createInvoice]);\r\n\r\n  return (\r\n    <CreateContext.Provider\r\n      value={{\r\n        projectName,\r\n        projectDescription,\r\n        projectAgreement,\r\n        startDate,\r\n        endDate,\r\n        safetyValveDate,\r\n        clientAddress,\r\n        paymentAddress,\r\n        paymentDue,\r\n        paymentToken,\r\n        milestones,\r\n        termsAccepted,\r\n        arbitrationProvider,\r\n        payments,\r\n        tx,\r\n        // setters\r\n        setProjectName,\r\n        setProjectDescription,\r\n        setProjectAgreement,\r\n        setStartDate,\r\n        setEndDate,\r\n        setSafetyValveDate,\r\n        setClientAddress,\r\n        setPaymentAddress,\r\n        setPaymentDue,\r\n        setPaymentToken,\r\n        setMilestones,\r\n        setTermsAccepted,\r\n        setArbitrationProvider,\r\n        setPayments,\r\n        // creating invoice\r\n        loading,\r\n        createInvoice,\r\n        // stepHandling\r\n        currentStep,\r\n        nextStepEnabled,\r\n        goBackHandler,\r\n        nextStepHandler,\r\n      }}\r\n    >\r\n      {children}\r\n    </CreateContext.Provider>\r\n  );\r\n};\r\n","import { BOX_ENDPOINT, IPFS_ENDPOINT } from './constants';\r\n\r\nexport const getProfile = async account => {\r\n  const address = account.toLowerCase();\r\n  const profile = {\r\n    address,\r\n    name: '',\r\n    emoji: '',\r\n    imageHash: '',\r\n    imageUrl: `https://avatars.dicebear.com/api/jdenticon/${address}.svg`,\r\n  };\r\n  const response = await fetch(\r\n    `${BOX_ENDPOINT}/profile?address=${encodeURIComponent(address)}`,\r\n  );\r\n  if (response.ok && response.status === 200) {\r\n    const boxProfile = await response.json();\r\n    const imageHash =\r\n      boxProfile &&\r\n      boxProfile.image &&\r\n      boxProfile.image[0] &&\r\n      boxProfile.image[0].contentUrl &&\r\n      boxProfile.image[0].contentUrl['/'];\r\n    if (imageHash) {\r\n      profile.imageHash = imageHash;\r\n      profile.imageUrl = `${IPFS_ENDPOINT}/ipfs/${imageHash}`;\r\n    }\r\n    profile.name = boxProfile.name;\r\n    profile.emoji = boxProfile.emoji;\r\n  }\r\n  return profile;\r\n};\r\n","import { Flex, Link, Text } from '@chakra-ui/react';\r\nimport { utils } from 'ethers';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { theme } from '../theme';\r\nimport { getProfile } from '../utils/3box';\r\nimport {\r\n  getAddressLink,\r\n  getResolverInfo,\r\n  getResolverString,\r\n  isKnownResolver,\r\n} from '../utils/helpers';\r\n\r\nexport const AccountLink = ({\r\n  address: inputAddress,\r\n  chainId: inputChainId,\r\n}) => {\r\n  const { chainId: walletChainId } = useContext(Web3Context);\r\n  const address = inputAddress.toLowerCase();\r\n  const [profile, setProfile] = useState();\r\n  const chainId = inputChainId || walletChainId;\r\n  const isResolver = isKnownResolver(chainId, address);\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    if (!isResolver && utils.isAddress(address)) {\r\n      getProfile(address).then(p => (isSubscribed ? setProfile(p) : undefined));\r\n    }\r\n    return () => {\r\n      isSubscribed = false;\r\n    };\r\n  }, [address, isResolver]);\r\n\r\n  let displayString = getResolverString(chainId, address);\r\n\r\n  let imageUrl = isResolver\r\n    ? getResolverInfo(chainId, address).logoUrl\r\n    : undefined;\r\n\r\n  if (!isResolver && profile) {\r\n    if (profile.name) {\r\n      displayString = profile.name;\r\n    }\r\n    if (profile.imageUrl) {\r\n      imageUrl = profile.imageUrl;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Link\r\n      href={getAddressLink(chainId, address)}\r\n      isExternal\r\n      display=\"inline-flex\"\r\n      textAlign=\"right\"\r\n      bgColor=\"black30\"\r\n      px=\"0.25rem\"\r\n      _hover={{\r\n        textDecor: 'none',\r\n        bgColor: 'white20',\r\n      }}\r\n      borderRadius=\"5px\"\r\n      alignItems=\"center\"\r\n      fontWeight=\"bold\"\r\n    >\r\n      <Flex\r\n        as=\"span\"\r\n        borderRadius=\"50%\"\r\n        w=\"1.1rem\"\r\n        h=\"1.1rem\"\r\n        overflow=\"hidden\"\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        bgColor=\"black\"\r\n        bgImage={imageUrl && `url(${imageUrl})`}\r\n        border={`1px solid ${theme.colors.white20}`}\r\n        bgSize=\"cover\"\r\n        bgRepeat=\"no-repeat\"\r\n        bgPosition=\"center center\"\r\n      />\r\n      <Text as=\"span\" pl=\"0.25rem\" fontSize=\"sm\">\r\n        {displayString}\r\n      </Text>\r\n    </Link>\r\n  );\r\n};\r\n","import { Divider, Flex, Link, Text, VStack } from '@chakra-ui/react';\r\nimport { utils } from 'ethers';\r\nimport React, { useContext } from 'react';\r\n\r\nimport { CreateContext } from '../context/CreateContext';\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { AccountLink } from '../shared/AccountLink';\r\nimport { getDateString, getTokenInfo } from '../utils/helpers';\r\n\r\nexport const FormConfirmation = ({ display }) => {\r\n  const { chainId } = useContext(Web3Context);\r\n  const {\r\n    projectName,\r\n    projectDescription,\r\n    projectAgreement,\r\n    clientAddress,\r\n    paymentAddress,\r\n    startDate,\r\n    endDate,\r\n    safetyValveDate,\r\n    arbitrationProvider,\r\n    milestones,\r\n    paymentDue,\r\n    paymentToken,\r\n  } = useContext(CreateContext);\r\n  const tokenData = getTokenInfo(chainId, paymentToken);\r\n  const { decimals, symbol } = tokenData;\r\n  return (\r\n    <VStack\r\n      w=\"100%\"\r\n      spacing=\"1rem\"\r\n      color=\"white\"\r\n      align=\"stretch\"\r\n      display={display}\r\n    >\r\n      <Text id=\"project-title\" fontWeight=\"bold\" fontSize=\"xl\">\r\n        {projectName}\r\n      </Text>\r\n      {projectDescription && <Text>{projectDescription}</Text>}\r\n      <Link href={projectAgreement} isExternal mb=\"1rem\" textDecor=\"underline\">\r\n        {projectAgreement}\r\n      </Link>\r\n      <Flex justify=\"space-between\">\r\n        <Text>{`Client Address: `}</Text>\r\n        <AccountLink address={clientAddress} />\r\n      </Flex>\r\n      <Flex justify=\"space-between\">\r\n        <Text>{`Payment Address: `}</Text>\r\n        <AccountLink address={paymentAddress} />\r\n      </Flex>\r\n      {startDate && (\r\n        <Flex justify=\"space-between\">\r\n          <Text>{`Project Start Date: `}</Text>\r\n          <Text textAlign=\"right\">{getDateString(startDate / 1000)}</Text>\r\n        </Flex>\r\n      )}\r\n      {endDate && (\r\n        <Flex justify=\"space-between\">\r\n          <Text>{`Expected End Date: `}</Text>\r\n          <Text textAlign=\"right\">{getDateString(endDate / 1000)}</Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justify=\"space-between\">\r\n        <Text>{`Safety Valve Date: `}</Text>\r\n        <Text textAlign=\"right\">{getDateString(safetyValveDate / 1000)}</Text>\r\n      </Flex>\r\n      <Flex justify=\"space-between\">\r\n        <Text>{`Arbitration Provider: `}</Text>\r\n        <AccountLink address={arbitrationProvider} />\r\n      </Flex>\r\n      <Divider\r\n        color=\"black\"\r\n        w=\"calc(100% + 2rem)\"\r\n        transform=\"translateX(-1rem)\"\r\n      />\r\n      <Flex justify=\"flex-end\">\r\n        <Text>\r\n          {`${milestones} ${milestones > 1 ? 'Payments' : 'Payment'}`}\r\n        </Text>\r\n        <Text color=\"red.500\" ml=\"2.5rem\" fontWeight=\"bold\">\r\n          {`${utils.formatUnits(paymentDue, decimals)} ${symbol} Total`}\r\n        </Text>\r\n      </Flex>\r\n    </VStack>\r\n  );\r\n};\r\n","import {\r\n  Flex,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Text,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { utils } from 'ethers';\r\nimport React, { useContext } from 'react';\r\n\r\nimport { CreateContext } from '../context/CreateContext';\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { getTokenInfo } from '../utils/helpers';\r\n\r\nexport const PaymentChunksForm = ({ display }) => {\r\n  const { chainId } = useContext(Web3Context);\r\n  const {\r\n    paymentToken,\r\n    milestones,\r\n    payments,\r\n    setPayments,\r\n    paymentDue,\r\n  } = useContext(CreateContext);\r\n  const { decimals, symbol } = getTokenInfo(chainId, paymentToken);\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"1rem\" display={display}>\r\n      {Array.from(Array(Number(milestones))).map((_val, index) => {\r\n        return (\r\n          <VStack w=\"100%\" spacing=\"0.5rem\" key={index.toString()}>\r\n            <Flex justify=\"space-between\" w=\"100%\">\r\n              <Text fontWeight=\"700\">Payment #{index + 1}</Text>\r\n              <Flex />\r\n            </Flex>\r\n            <InputGroup>\r\n              <Input\r\n                bg=\"black\"\r\n                type=\"text\"\r\n                color=\"white\"\r\n                border=\"none\"\r\n                pr=\"3.5rem\"\r\n                onChange={e => {\r\n                  if (!e.target.value || isNaN(Number(e.target.value))) return;\r\n                  const amount = utils.parseUnits(e.target.value, decimals);\r\n                  const newPayments = payments.slice();\r\n                  newPayments[index] = amount;\r\n                  setPayments(newPayments);\r\n                }}\r\n              />\r\n              <InputRightElement color=\"white\" w=\"3.5rem\">\r\n                {symbol}\r\n              </InputRightElement>\r\n            </InputGroup>\r\n          </VStack>\r\n        );\r\n      })}\r\n      <Text w=\"100%\" textAlign=\"right\" color=\"grey\" fontWeight=\"bold\">\r\n        Total Amount Must Add Up to {utils.formatUnits(paymentDue, decimals)}{' '}\r\n        {symbol}\r\n      </Text>\r\n    </VStack>\r\n  );\r\n};\r\n","import { createIcon } from '@chakra-ui/icon';\r\nimport * as React from 'react';\r\n\r\nexport const QuestionIcon = createIcon({\r\n  displayName: 'QuestionIcon',\r\n  path: (\r\n    <>\r\n      <path\r\n        d=\"M7.5 1.5C9.09135 1.5 10.6172 2.13222 11.7428 3.25725C12.8678 4.38284 13.5 5.90865 13.5 7.5C13.5 9.09135 12.8678 10.6172 11.7428 11.7428C10.6172 12.8678 9.09135 13.5 7.5 13.5C5.90865 13.5 4.38285 12.8678 3.25725 11.7428C2.13225 10.6172 1.5 9.09135 1.5 7.5C1.5 5.90865 2.13222 4.38285 3.25725 3.25725C4.38284 2.13225 5.90865 1.5 7.5 1.5ZM7.5 0C5.5107 0 3.603 0.790425 2.19675 2.19675C0.7905 3.60308 0 5.51085 0 7.5C0 9.48915 0.790425 11.397 2.19675 12.8033C3.60308 14.2095 5.51085 15 7.5 15C9.48915 15 11.397 14.2096 12.8033 12.8033C14.2095 11.3969 15 9.48915 15 7.5C15 5.51085 14.2096 3.603 12.8033 2.19675C11.3969 0.7905 9.48915 0 7.5 0V0Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M5.72192 6.18754H5.16117C5.1266 6.18754 5.10141 6.18754 5.10258 6.1395C5.10609 5.75805 5.18578 5.38129 5.33637 5.03091C5.54086 4.59379 5.89242 4.24224 6.32953 4.03833C7.03852 3.69555 7.85594 3.65512 8.59484 3.927C9.12159 4.09809 9.54522 4.49478 9.74972 5.00982C9.87452 5.33443 9.91847 5.68482 9.87862 6.02994C9.83995 6.45474 9.64425 6.84966 9.32959 7.13677C9.08935 7.36939 8.83155 7.58677 8.57959 7.80415V7.80474C8.38213 7.95181 8.22744 8.14869 8.12959 8.37427C8.06924 8.55181 8.03584 8.73756 8.03057 8.92506C8.03057 8.99127 8.02002 9.05865 8.01709 9.12427C8.01944 9.13833 8.01475 9.15181 8.00479 9.16177C7.99541 9.17173 7.98135 9.17583 7.96787 9.17407H6.9794C6.96651 9.17759 6.95362 9.17407 6.94366 9.16529C6.93429 9.1565 6.93018 9.14302 6.93253 9.13072C6.92784 8.80552 6.96124 8.4815 7.03155 8.16451C7.1294 7.83521 7.31867 7.53989 7.57764 7.31431C7.79972 7.10864 8.02764 6.90181 8.23155 6.68443V6.68384C8.41085 6.50455 8.53214 6.27602 8.58135 6.02701C8.66221 5.60572 8.5046 5.29342 8.10147 5.14634C7.71182 4.99693 7.27881 5.01275 6.90147 5.19029C6.64542 5.31568 6.46319 5.55357 6.40929 5.83365C6.38644 5.9274 6.37062 6.02232 6.36125 6.11841C6.36418 6.14068 6.35539 6.16294 6.33839 6.17759C6.32199 6.19224 6.29914 6.19751 6.27746 6.19224H5.7302L5.72192 6.18754Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M7.4912 9.89999C7.66874 9.8953 7.841 9.96502 7.96523 10.0922C8.08945 10.2193 8.15507 10.3928 8.14628 10.5703C8.14042 10.9347 7.84042 11.226 7.47596 11.2201C7.11151 11.2142 6.82088 10.9142 6.82675 10.5492C6.82382 10.374 6.89355 10.2047 7.01893 10.0822C7.1449 9.95914 7.31542 9.89352 7.49119 9.89997L7.4912 9.89999Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </>\r\n  ),\r\n  viewBox: '0 0 15 15',\r\n});\r\n","import {\r\n  Flex,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Select,\r\n  Text,\r\n  Textarea,\r\n  Tooltip,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport React, { useState } from 'react';\r\n\r\nimport { QuestionIcon } from '../icons/QuestionIcon';\r\nimport { isValidLink } from '../utils/helpers';\r\n\r\nexport const OrderedLinkInput = ({\r\n  label,\r\n  value,\r\n  setValue,\r\n  infoText,\r\n  tooltip,\r\n  placeholder,\r\n  type = 'text',\r\n  ...props\r\n}) => {\r\n  const [protocol, setProtocol] = useState('https://');\r\n  const [input, setInput] = useState('');\r\n  const [isInvalid, setInvalid] = useState(false);\r\n\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"0.5rem\" justify=\"space-between\" {...props}>\r\n      <Flex justify=\"space-between\" w=\"100%\">\r\n        <Text fontWeight=\"700\">{label}</Text>\r\n        <Flex>\r\n          {infoText && <Text fontSize=\"xs\">{infoText}</Text>}\r\n          {tooltip && (\r\n            <Tooltip label={tooltip} placement=\"auto-start\">\r\n              <QuestionIcon ml=\"1rem\" boxSize=\"0.75rem\" />\r\n            </Tooltip>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n      <Flex direction=\"column\" w=\"100%\">\r\n        <InputGroup>\r\n          <InputLeftElement\r\n            w=\"6.75rem\"\r\n            overflow=\"hidden\"\r\n            borderLeftRadius=\"0.375rem\"\r\n            borderRightColor=\"background\"\r\n            borderRightWidth=\"3px\"\r\n          >\r\n            <Select\r\n              onChange={e => {\r\n                const newProtocol = e.target.value;\r\n                const newValue = newProtocol + input;\r\n                const isValid = isValidLink(newValue);\r\n                setValue(newValue);\r\n                setInvalid(!isValid);\r\n                setProtocol(newProtocol);\r\n              }}\r\n              value={protocol}\r\n              bg=\"none\"\r\n              color=\"white\"\r\n              border=\"none\"\r\n              fontWeight=\"bold\"\r\n              borderRadius=\"none\"\r\n            >\r\n              <option value=\"https://\">https://</option>\r\n              <option value=\"ipfs://\">ipfs://</option>\r\n            </Select>\r\n          </InputLeftElement>\r\n          <Input\r\n            pl=\"7.25rem\"\r\n            bg=\"black\"\r\n            type={type}\r\n            value={input}\r\n            maxLength={240}\r\n            onChange={e => {\r\n              let newInput = e.target.value;\r\n              let newProtocol = protocol;\r\n              if (newInput.startsWith('https://') && newInput.length > 8) {\r\n                newProtocol = 'https://';\r\n                newInput = newInput.slice(8);\r\n              } else if (\r\n                newInput.startsWith('ipfs://') &&\r\n                newInput.length > 7\r\n              ) {\r\n                newProtocol = 'ipfs://';\r\n                newInput = newInput.slice(7);\r\n              }\r\n              const newValue = newProtocol + newInput;\r\n              const isValid = isValidLink(newValue);\r\n              setValue(newValue);\r\n              setInvalid(!isValid);\r\n              setInput(newInput);\r\n              setProtocol(newProtocol);\r\n            }}\r\n            placeholder={placeholder}\r\n            color=\"white\"\r\n            border=\"none\"\r\n            isInvalid={isInvalid}\r\n            _invalid={{ border: '1px solid', borderColor: 'purple' }}\r\n          />\r\n        </InputGroup>\r\n        {isInvalid && (\r\n          <Text\r\n            w=\"100%\"\r\n            color=\"purple\"\r\n            textAlign=\"right\"\r\n            fontSize=\"xs\"\r\n            fontWeight=\"700\"\r\n            mt=\"0.5rem\"\r\n          >\r\n            Invalid URL\r\n          </Text>\r\n        )}\r\n      </Flex>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport const OrderedInput = ({\r\n  label,\r\n  value,\r\n  setValue,\r\n  infoText,\r\n  tooltip,\r\n  placeholder,\r\n  isInvalid = false,\r\n  isDisabled = false,\r\n  type = 'text',\r\n  error = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"0.5rem\" justify=\"space-between\" {...props}>\r\n      <Flex justify=\"space-between\" w=\"100%\">\r\n        <Text fontWeight=\"700\">{label}</Text>\r\n        <Flex>\r\n          {infoText && <Text fontSize=\"xs\">{infoText}</Text>}\r\n          {tooltip && (\r\n            <Tooltip label={tooltip} placement=\"auto-start\">\r\n              <QuestionIcon ml=\"1rem\" boxSize=\"0.75rem\" />\r\n            </Tooltip>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n      <Flex direction=\"column\" w=\"100%\">\r\n        <Input\r\n          bg=\"black\"\r\n          type={type}\r\n          value={value}\r\n          onChange={e => setValue(e.target.value)}\r\n          placeholder={placeholder}\r\n          color=\"white\"\r\n          border=\"none\"\r\n          isDisabled={isDisabled}\r\n          isInvalid={isInvalid}\r\n          _invalid={{ border: '1px solid', borderColor: 'purple' }}\r\n        />\r\n        {error && (\r\n          <Text\r\n            w=\"100%\"\r\n            color=\"purple\"\r\n            textAlign=\"right\"\r\n            fontSize=\"xs\"\r\n            fontWeight=\"700\"\r\n            mt=\"0.5rem\"\r\n          >\r\n            {error}\r\n          </Text>\r\n        )}\r\n      </Flex>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport const OrderedSelect = ({\r\n  label,\r\n  value,\r\n  setValue,\r\n  infoText,\r\n  tooltip,\r\n  isDisabled = false,\r\n  children,\r\n}) => {\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"0.5rem\" justify=\"space-between\">\r\n      <Flex justify=\"space-between\" w=\"100%\">\r\n        <Text fontWeight=\"700\">{label}</Text>\r\n        <Flex>\r\n          {infoText && <Text fontSize=\"xs\">{infoText}</Text>}\r\n          {tooltip && (\r\n            <Tooltip label={tooltip} placement=\"auto-start\">\r\n              <QuestionIcon ml=\"1rem\" boxSize=\"0.75rem\" />\r\n            </Tooltip>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n      <Select\r\n        value={value}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n        }}\r\n        bg=\"black\"\r\n        color=\"white\"\r\n        border=\"none\"\r\n        isDisabled={isDisabled}\r\n      >\r\n        {children}\r\n      </Select>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport const OrderedTextarea = ({\r\n  label,\r\n  value,\r\n  setValue,\r\n  infoText,\r\n  tooltip,\r\n  placeholder,\r\n  maxLength,\r\n  isDisabled = false,\r\n  type = 'text',\r\n}) => {\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"0.5rem\" justify=\"space-between\" color=\"red.500\">\r\n      <Flex justify=\"space-between\" w=\"100%\">\r\n        <Text fontWeight=\"700\">{label}</Text>\r\n        <Flex>\r\n          {infoText && <Text fontSize=\"xs\">{infoText}</Text>}\r\n          {tooltip && (\r\n            <Tooltip label={tooltip} placement=\"auto-start\">\r\n              <QuestionIcon ml=\"1rem\" boxSize=\"0.75rem\" />\r\n            </Tooltip>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n      <Textarea\r\n        bg=\"black\"\r\n        type={type}\r\n        value={value}\r\n        onChange={e => setValue(e.target.value)}\r\n        placeholder={placeholder}\r\n        color=\"white\"\r\n        border=\"none\"\r\n        isDisabled={isDisabled}\r\n        h=\"4rem\"\r\n        resize=\"none\"\r\n        maxLength={maxLength}\r\n      />\r\n    </VStack>\r\n  );\r\n};\r\n","import { Checkbox, Link, SimpleGrid, Text, VStack } from '@chakra-ui/react';\r\nimport { BigNumber, utils } from 'ethers';\r\nimport React, { useContext, useEffect, useMemo, useState } from 'react';\r\n\r\nimport { CreateContext } from '../context/CreateContext';\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { OrderedInput, OrderedSelect } from '../shared/OrderedInput';\r\nimport {\r\n  getResolverInfo,\r\n  getResolvers,\r\n  getResolverString,\r\n  getTokenInfo,\r\n  getTokens,\r\n  isKnownResolver,\r\n} from '../utils/helpers';\r\nimport { getResolutionRateFromFactory } from '../utils/invoice';\r\n\r\nexport const PaymentDetailsForm = ({ display }) => {\r\n  const { chainId, provider } = useContext(Web3Context);\r\n  const RESOLVERS = useMemo(() => getResolvers(chainId), [chainId]);\r\n  const TOKENS = useMemo(() => getTokens(chainId), [chainId]);\r\n\r\n  const {\r\n    clientAddress,\r\n    setClientAddress,\r\n    paymentAddress,\r\n    setPaymentAddress,\r\n    paymentToken,\r\n    setPaymentToken,\r\n    paymentDue,\r\n    setPaymentDue,\r\n    milestones,\r\n    setMilestones,\r\n    arbitrationProvider,\r\n    setArbitrationProvider,\r\n    setPayments,\r\n    termsAccepted,\r\n    setTermsAccepted,\r\n  } = useContext(CreateContext);\r\n  const { decimals, symbol } = useMemo(() => getTokenInfo(chainId, paymentToken), [chainId, paymentToken]);\r\n\r\n  const [arbitrationProviderType, setArbitrationProviderType] = useState('0');\r\n  const [paymentDueInput, setPaymentDueInput] = useState('');\r\n\r\n  const [clientInvalid, setClientInvalid] = useState(false);\r\n  const [providerInvalid, setProviderInvalid] = useState(false);\r\n  const [resolverInvalid, setResolverInvalid] = useState(false);\r\n  const [paymentInvalid, setPaymentInvalid] = useState(false);\r\n  const [milestonesInvalid, setMilestonesInvalid] = useState(false);\r\n  const [resolutionRate, setResolutionRate] = useState(20);\r\n\r\n  useEffect(() => {\r\n    getResolutionRateFromFactory(chainId, provider, arbitrationProvider).then(\r\n      setResolutionRate,\r\n    );\r\n  }, [chainId, provider, arbitrationProvider]);\r\n\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"1rem\" display={display}>\r\n      <OrderedInput\r\n        label=\"Client Address\"\r\n        value={clientAddress}\r\n        isInvalid={clientInvalid}\r\n        setValue={v => {\r\n          setClientAddress(v);\r\n          setClientInvalid(!utils.isAddress(v));\r\n        }}\r\n        error={clientInvalid ? 'Invalid Address' : ''}\r\n        tooltip=\"This will be the address used to access the invoice\"\r\n      />\r\n      <OrderedInput\r\n        label=\"Service Provider Address\"\r\n        value={paymentAddress}\r\n        isInvalid={providerInvalid}\r\n        setValue={v => {\r\n          setPaymentAddress(v);\r\n          setProviderInvalid(!utils.isAddress(v));\r\n        }}\r\n        error={providerInvalid ? 'Invalid Address' : ''}\r\n        tooltip=\"Recipient of the funds\"\r\n      />\r\n      <SimpleGrid\r\n        w=\"100%\"\r\n        columns={{ base: 2, sm: 3 }}\r\n        spacing=\"1rem\"\r\n        mb={paymentInvalid ? '-0.5rem' : ''}\r\n      >\r\n        <OrderedInput\r\n          label=\"Total Payment Due\"\r\n          type=\"number\"\r\n          value={paymentDueInput}\r\n          isInvalid={paymentInvalid}\r\n          setValue={v => {\r\n            setPaymentDueInput(v);\r\n            if (v && !isNaN(Number(v))) {\r\n              const p = utils.parseUnits(v, decimals);\r\n              setPaymentDue(p);\r\n              setPaymentInvalid(p.lte(0));\r\n            } else {\r\n              setPaymentDue(BigNumber.from(0));\r\n              setPaymentInvalid(true);\r\n            }\r\n          }}\r\n        />\r\n        <OrderedSelect\r\n          value={paymentToken}\r\n          setValue={setPaymentToken}\r\n          label=\"Payment Token\"\r\n        >\r\n          {TOKENS.map(token => (\r\n            <option value={token} key={token}>\r\n              {getTokenInfo(chainId, token).symbol}\r\n            </option>\r\n          ))}\r\n        </OrderedSelect>\r\n        <OrderedInput\r\n          gridArea={{ base: '2/1/2/span 2', sm: 'auto/auto/auto/auto' }}\r\n          label=\"Number of Payments\"\r\n          type=\"number\"\r\n          value={milestones}\r\n          isInvalid={milestonesInvalid}\r\n          setValue={v => {\r\n            const numMilestones = v ? Number(v) : 1;\r\n            setMilestones(v);\r\n            setPayments(\r\n              Array(numMilestones)\r\n                .fill(1)\r\n                .map(() => {\r\n                  return BigNumber.from(0);\r\n                }),\r\n            );\r\n            setMilestonesInvalid(isNaN(Number(v)) || Number(v) === 0);\r\n          }}\r\n          tooltip=\"Number of milestones in which the total payment will be processed\"\r\n        />\r\n      </SimpleGrid>\r\n      {(paymentInvalid || milestonesInvalid) && (\r\n        <Text\r\n          w=\"100%\"\r\n          color=\"purple\"\r\n          textAlign=\"right\"\r\n          fontSize=\"xs\"\r\n          fontWeight=\"700\"\r\n        >\r\n          Payment must be greater than 0\r\n        </Text>\r\n      )}\r\n      <SimpleGrid w=\"100%\" columns={2} spacing=\"1rem\">\r\n        <OrderedSelect\r\n          tooltip=\"Arbitration provider that will be used in case of a dispute\"\r\n          value={arbitrationProviderType}\r\n          setValue={v => {\r\n            setArbitrationProviderType(v);\r\n            if (isKnownResolver(chainId, v)) {\r\n              setArbitrationProvider(v);\r\n              setTermsAccepted(false);\r\n            } else {\r\n              setArbitrationProvider('');\r\n              setResolverInvalid(false);\r\n              setTermsAccepted(true);\r\n            }\r\n          }}\r\n          label=\"Arbitration Provider\"\r\n        >\r\n          {RESOLVERS.map(res => (\r\n            <option key={res} value={res}>\r\n              {getResolverInfo(chainId, res).name}\r\n            </option>\r\n          ))}\r\n          <option value=\"custom\">Custom</option>\r\n        </OrderedSelect>\r\n        <OrderedInput\r\n          label=\"Max Dispute Fee\"\r\n          type=\"text\"\r\n          value={`${utils.formatUnits(\r\n            paymentDue.div(resolutionRate),\r\n            decimals,\r\n          )} ${symbol}`}\r\n          setValue={() => undefined}\r\n          tooltip={`In case a dispute arises, ${\r\n            100 / resolutionRate\r\n          }% of the remaining funds will be deducted towards dispute resolution as an arbitration fee`}\r\n          isDisabled\r\n        />\r\n      </SimpleGrid>\r\n      {!isKnownResolver(chainId, arbitrationProvider) ? (\r\n        <OrderedInput\r\n          tooltip=\"This will be the address used to resolve any disputes on the invoice\"\r\n          label=\"Arbitration Provider Address\"\r\n          value={arbitrationProvider}\r\n          setValue={v => {\r\n            setArbitrationProvider(v);\r\n            setResolverInvalid(!utils.isAddress(v));\r\n          }}\r\n          isInvalid={resolverInvalid}\r\n          error={resolverInvalid ? 'Invalid Address' : ''}\r\n        />\r\n      ) : (\r\n        <Checkbox\r\n          isChecked={termsAccepted}\r\n          onChange={e => setTermsAccepted(e.target.checked)}\r\n          colorScheme=\"red\"\r\n          border=\"none\"\r\n          size=\"lg\"\r\n          fontSize=\"1rem\"\r\n          color=\"white\"\r\n        >\r\n          {`I agree to ${getResolverString(chainId, arbitrationProvider)} `}\r\n          <Link\r\n            href={getResolverInfo(chainId, arbitrationProvider).termsUrl}\r\n            isExternal\r\n            textDecor=\"underline\"\r\n          >\r\n            terms of service\r\n          </Link>\r\n        </Checkbox>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n","import { SimpleGrid, Text, VStack } from '@chakra-ui/react';\r\nimport React, { useContext, useState } from 'react';\r\n\r\nimport { CreateContext } from '../context/CreateContext';\r\nimport {\r\n  OrderedInput,\r\n  OrderedLinkInput,\r\n  OrderedTextarea,\r\n} from '../shared/OrderedInput';\r\n\r\nconst formatDate = date => {\r\n  const d = new Date(date);\r\n\r\n  let month = `${d.getUTCMonth() + 1}`;\r\n  if (month.length < 2) month = `0${month}`;\r\n\r\n  let day = `${d.getUTCDate()}`;\r\n  if (day.length < 2) day = `0${day}`;\r\n\r\n  const year = d.getUTCFullYear();\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n\r\nexport const ProjectDetailsForm = ({ display }) => {\r\n  const {\r\n    startDate,\r\n    setStartDate,\r\n    endDate,\r\n    setEndDate,\r\n    safetyValveDate,\r\n    setSafetyValveDate,\r\n    projectName,\r\n    setProjectName,\r\n    projectDescription,\r\n    setProjectDescription,\r\n    projectAgreement,\r\n    setProjectAgreement,\r\n  } = useContext(CreateContext);\r\n\r\n  const startDateString = startDate ? formatDate(startDate) : '';\r\n  const endDateString = endDate ? formatDate(endDate) : '';\r\n  const safetyValveDateString = safetyValveDate\r\n    ? formatDate(safetyValveDate)\r\n    : '';\r\n\r\n  const [nameInvalid, setNameInvalid] = useState(false);\r\n  const [dateInvalid, setDateInvalid] = useState(false);\r\n\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"1rem\" display={display}>\r\n      <OrderedInput\r\n        label=\"Project Name or ID\"\r\n        value={projectName}\r\n        setValue={v => {\r\n          setProjectName(v);\r\n          setNameInvalid(v === '');\r\n        }}\r\n        isInvalid={nameInvalid}\r\n        error={nameInvalid ? 'Cannot be empty' : ''}\r\n      />\r\n      <OrderedLinkInput\r\n        label=\"Link to Project Agreement\"\r\n        value={projectAgreement}\r\n        setValue={setProjectAgreement}\r\n        tooltip=\"This agreement will be referenced in the case of a dispute\"\r\n      />\r\n      <OrderedTextarea\r\n        label=\"Project Description\"\r\n        value={projectDescription}\r\n        setValue={setProjectDescription}\r\n        infoText=\"140 character limit • optional\"\r\n        maxLength=\"140\"\r\n      />\r\n      <SimpleGrid\r\n        w=\"100%\"\r\n        spacing=\"1rem\"\r\n        columns={{ base: 1, sm: 2, md: 3 }}\r\n        mb={dateInvalid ? '-0.5rem' : ''}\r\n      >\r\n        <OrderedInput\r\n          label=\"Project Start Date\"\r\n          type=\"date\"\r\n          value={startDateString}\r\n          setValue={v => setStartDate(Date.parse(v))}\r\n          infoText=\"optional\"\r\n        />\r\n        <OrderedInput\r\n          label=\"Expected End Date\"\r\n          type=\"date\"\r\n          value={endDateString}\r\n          setValue={v => setEndDate(Date.parse(v))}\r\n          infoText=\"optional\"\r\n        />\r\n        <OrderedInput\r\n          gridArea={{\r\n            base: 'auto/auto/auto/auto',\r\n            sm: '2/1/2/span 2',\r\n            md: 'auto/auto/auto/auto',\r\n          }}\r\n          label=\"Safety Valve Date\"\r\n          type=\"date\"\r\n          value={safetyValveDateString}\r\n          setValue={v => {\r\n            const date = Date.parse(v);\r\n            setSafetyValveDate(date);\r\n            setDateInvalid(date < new Date().getTime());\r\n          }}\r\n          tooltip=\"The funds can be withdrawn by the client after 00:00:00 GMT on this date.\"\r\n          isInvalid={dateInvalid}\r\n        />\r\n      </SimpleGrid>\r\n      {dateInvalid && (\r\n        <Text\r\n          w=\"100%\"\r\n          color=\"purple\"\r\n          textAlign=\"right\"\r\n          fontSize=\"xs\"\r\n          fontWeight=\"700\"\r\n        >\r\n          {dateInvalid ? 'Invalid Safety Valve Date: Already Passed' : ''}\r\n        </Text>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n","import { createClient, dedupExchange, fetchExchange } from 'urql';\r\n\r\nimport { SUPPORTED_NETWORKS } from '../utils/constants';\r\nimport { getGraphUrl } from '../utils/helpers';\r\n\r\nexport const clients = SUPPORTED_NETWORKS.reduce(\r\n  (o, chainId) => ({\r\n    ...o,\r\n    [chainId]: createClient({\r\n      url: getGraphUrl(chainId),\r\n      exchanges: [dedupExchange, fetchExchange],\r\n    }),\r\n  }),\r\n  {},\r\n);\r\n","import gql from 'fake-tag';\r\n\r\nexport const InvoiceDetails = gql`\r\n  fragment InvoiceDetails on Invoice {\r\n    id\r\n    address\r\n    network\r\n    token\r\n    client\r\n    provider\r\n    resolverType\r\n    resolver\r\n    resolutionRate\r\n    isLocked\r\n    amounts\r\n    numMilestones\r\n    currentMilestone\r\n    total\r\n    disputeId\r\n    released\r\n    createdAt\r\n    terminationTime\r\n    projectName\r\n    projectDescription\r\n    projectAgreement\r\n    startDate\r\n    endDate\r\n    deposits(orderBy: timestamp, orderDirection: asc) {\r\n      txHash\r\n      sender\r\n      amount\r\n      timestamp\r\n    }\r\n    releases(orderBy: timestamp, orderDirection: asc) {\r\n      txHash\r\n      milestone\r\n      amount\r\n      timestamp\r\n    }\r\n    disputes(orderBy: timestamp, orderDirection: asc) {\r\n      txHash\r\n      ipfsHash\r\n      sender\r\n      details\r\n      timestamp\r\n    }\r\n    resolutions(orderBy: timestamp, orderDirection: asc) {\r\n      txHash\r\n      ipfsHash\r\n      clientAward\r\n      providerAward\r\n      resolutionFee\r\n      timestamp\r\n    }\r\n  }\r\n`;\r\n","import gql from 'fake-tag';\r\n\r\nimport { isAddress } from '../utils/helpers';\r\nimport { clients } from './client';\r\nimport { InvoiceDetails } from './fragments';\r\n\r\nconst invoiceQuery = gql`\r\n  query GetInvoice($address: ID!) {\r\n    invoice(id: $address) {\r\n      ...InvoiceDetails\r\n    }\r\n  }\r\n  ${InvoiceDetails}\r\n`;\r\n\r\nexport const getInvoice = async (chainId, queryAddress) => {\r\n  const address = isAddress(queryAddress);\r\n  if (!address) return null;\r\n  const { data, error } = await clients[chainId]\r\n    .query(invoiceQuery, { address })\r\n    .toPromise();\r\n\r\n  console.log({data, error });\r\n  \r\n  if (!data) {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n    return null;\r\n  }\r\n  return data.invoice;\r\n};\r\n","import { createIcon } from '@chakra-ui/icon';\r\nimport * as React from 'react';\r\n\r\nexport const CopyIcon = createIcon({\r\n  displayName: 'CopyIcon',\r\n  path: (\r\n    <path\r\n      d=\"m271 512h-191c-44.113281 0-80-35.886719-80-80v-271c0-44.113281 35.886719-80 80-80h191c44.113281 0 80 35.886719 80 80v271c0 44.113281-35.886719 80-80 80zm-191-391c-22.054688 0-40 17.945312-40 40v271c0 22.054688 17.945312 40 40 40h191c22.054688 0 40-17.945312 40-40v-271c0-22.054688-17.945312-40-40-40zm351 261v-302c0-44.113281-35.886719-80-80-80h-222c-11.046875 0-20 8.953125-20 20s8.953125 20 20 20h222c22.054688 0 40 17.945312 40 40v302c0 11.046875 8.953125 20 20 20s20-8.953125 20-20zm0 0\"\r\n      fill=\"currentColor\"\r\n    />\r\n  ),\r\n  viewBox: '-40 0 512 512',\r\n});\r\n","import React from 'react';\r\n\r\nexport const Loader = ({ size = '38' }) => {\r\n  return (\r\n    <svg\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 38 38\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      stroke=\"currentColor\"\r\n    >\r\n      <g fill=\"none\" fillRule=\"evenodd\">\r\n        <g transform=\"translate(1 1)\" strokeWidth=\"2\">\r\n          <circle strokeOpacity=\".3\" cx=\"18\" cy=\"18\" r=\"18\" />\r\n          <path d=\"M36 18c0-9.94-8.06-18-18-18\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              from=\"0 18 18\"\r\n              to=\"360 18 18\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </path>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import { Button, Flex, Heading, Link, Text, VStack } from '@chakra-ui/react';\r\nimport { utils } from 'ethers';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { CreateContext } from '../context/CreateContext';\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { getInvoice } from '../graphql/getInvoice';\r\nimport { CopyIcon } from '../icons/CopyIcon';\r\nimport { copyToClipboard, getHexChainId, getTxLink } from '../utils/helpers';\r\nimport { awaitInvoiceAddress } from '../utils/invoice';\r\nimport { Loader } from './Loader';\r\n\r\nconst POLL_INTERVAL = 5000;\r\n\r\nexport const RegisterSuccess = () => {\r\n  const { chainId, provider } = useContext(Web3Context);\r\n  const { tx } = useContext(CreateContext);\r\n  const [invoiceId, setInvoiceID] = useState();\r\n  const [invoice, setInvoice] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (tx && provider) {\r\n      awaitInvoiceAddress(provider, tx).then(id => {\r\n        setInvoiceID(id.toLowerCase());\r\n      });\r\n    }\r\n  }, [tx, provider]);\r\n\r\n  useEffect(() => {\r\n    if (!utils.isAddress(invoiceId) || !!invoice) return () => undefined;\r\n\r\n    let isSubscribed = true;\r\n\r\n    const interval = setInterval(() => {\r\n      getInvoice(chainId, invoiceId).then(inv => {\r\n        if (isSubscribed && !!inv) {\r\n          setInvoice(inv);\r\n        }\r\n      });\r\n    }, POLL_INTERVAL);\r\n\r\n    return () => {\r\n      isSubscribed = false;\r\n      clearInterval(interval);\r\n    };\r\n  }, [chainId, invoiceId, invoice]);\r\n\r\n  return (\r\n    <VStack\r\n      w=\"100%\"\r\n      spacing=\"1rem\"\r\n      align=\"center\"\r\n      justify=\"center\"\r\n      my=\"8rem\"\r\n      maxW=\"30rem\"\r\n      px=\"1rem\"\r\n    >\r\n      <Heading fontWeight=\"normal\" textAlign=\"center\">\r\n        {invoice ? 'Invoice Registered' : 'Invoice Registration Received'}\r\n      </Heading>\r\n      <Text color=\"white\" textAlign=\"center\" fontSize=\"sm\">\r\n        {invoice\r\n          ? 'You can view your transaction '\r\n          : 'You can check the progress of your transaction '}\r\n        <Link\r\n          href={getTxLink(chainId, tx.hash)}\r\n          isExternal\r\n          color=\"red.500\"\r\n          textDecoration=\"underline\"\r\n        >\r\n          here\r\n        </Link>\r\n      </Text>\r\n      {invoice ? (\r\n        <>\r\n          <VStack w=\"100%\" align=\"stretch\">\r\n            <Text fontWeight=\"bold\">Your Invoice ID</Text>\r\n            <Flex\r\n              p=\"0.5rem\"\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              bg=\"background\"\r\n              borderRadius=\"0.25rem\"\r\n              w=\"100%\"\r\n            >\r\n              <Link\r\n                ml=\"0.5rem\"\r\n                href={`/invoice/${getHexChainId(invoice.network)}/${\r\n                  invoice.id\r\n                }`}\r\n                color=\"white\"\r\n                overflow=\"hidden\"\r\n              >\r\n                {invoice.id}\r\n              </Link>\r\n              {document.queryCommandSupported('copy') && (\r\n                <Button\r\n                  ml={4}\r\n                  onClick={() => copyToClipboard(invoice.id)}\r\n                  variant=\"ghost\"\r\n                  colorScheme=\"red\"\r\n                  h=\"auto\"\r\n                  w=\"auto\"\r\n                  minW=\"2\"\r\n                  p={2}\r\n                >\r\n                  <CopyIcon boxSize={4} />\r\n                </Button>\r\n              )}\r\n            </Flex>\r\n          </VStack>\r\n          <VStack w=\"100%\" align=\"stretch\" mb=\"1.5rem\">\r\n            <Text fontWeight=\"bold\">Link to Invoice</Text>\r\n            <Flex\r\n              p=\"0.5rem\"\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              bg=\"background\"\r\n              borderRadius=\"0.25rem\"\r\n              w=\"100%\"\r\n            >\r\n              <Link\r\n                ml=\"0.5rem\"\r\n                href={`/invoice/${getHexChainId(invoice.network)}/${\r\n                  invoice.id\r\n                }`}\r\n                color=\"white\"\r\n                overflow=\"hidden\"\r\n              >{`${window.location.origin}/invoice/${getHexChainId(\r\n                invoice.network,\r\n              )}/${invoice.id}`}</Link>\r\n              {document.queryCommandSupported('copy') && (\r\n                <Button\r\n                  ml={4}\r\n                  onClick={() =>\r\n                    copyToClipboard(\r\n                      `${window.location.origin}/invoice/${getHexChainId(\r\n                        invoice.network,\r\n                      )}/${invoice.id}`,\r\n                    )\r\n                  }\r\n                  variant=\"ghost\"\r\n                  colorScheme=\"red\"\r\n                  h=\"auto\"\r\n                  w=\"auto\"\r\n                  minW=\"2\"\r\n                  p={2}\r\n                >\r\n                  <CopyIcon boxSize={4} />\r\n                </Button>\r\n              )}\r\n            </Flex>\r\n          </VStack>\r\n        </>\r\n      ) : (\r\n        <Flex py=\"3rem\">\r\n          <Loader size=\"80\" />\r\n        </Flex>\r\n      )}\r\n      <Button\r\n        w=\"100%\"\r\n        variant=\"outline\"\r\n        colorScheme=\"red\"\r\n        textTransform=\"uppercase\"\r\n        fontFamily=\"mono\"\r\n        fontWeight=\"normal\"\r\n        size=\"lg\"\r\n        onClick={() => history.push('/')}\r\n      >\r\n        Return Home\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n","import { Heading, Text, useBreakpointValue, VStack } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nexport const StepInfo = ({ stepNum, stepTitle, stepDetails }) => {\r\n  const maxW = useBreakpointValue({ base: '30rem', lg: '20rem' });\r\n  return (\r\n    <VStack spacing=\"1rem\" maxW={maxW} align=\"stretch\">\r\n      <Heading fontWeight=\"normal\" fontSize=\"xl\">\r\n        Create a Smart Invoice\r\n      </Heading>\r\n      <Text color=\"white\">\r\n        Step {stepNum}: {stepTitle}\r\n      </Text>\r\n      {stepDetails.map((detail, index) => {\r\n        return (\r\n          <Text color=\"grey\" fontSize=\"sm\" key={index.toString()}>\r\n            {detail}\r\n          </Text>\r\n        );\r\n      })}\r\n    </VStack>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Flex,\r\n  Grid,\r\n  Stack,\r\n  useBreakpointValue,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport React, { useContext } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { FormConfirmation } from '../components/FormConfirmation';\r\nimport { PaymentChunksForm } from '../components/PaymentChunksForm';\r\nimport { PaymentDetailsForm } from '../components/PaymentDetailsForm';\r\nimport { ProjectDetailsForm } from '../components/ProjectDetailsForm';\r\nimport { RegisterSuccess } from '../components/RegisterSuccess';\r\nimport { CreateContext, CreateContextProvider } from '../context/CreateContext';\r\nimport { Container } from '../shared/Container';\r\nimport { StepInfo } from '../shared/StepInfo';\r\nimport { STEPS } from '../utils/constants';\r\n\r\nconst CreateInvoiceInner = () => {\r\n  const {\r\n    tx,\r\n    loading,\r\n    currentStep,\r\n    nextStepEnabled,\r\n    goBackHandler,\r\n    nextStepHandler,\r\n  } = useContext(CreateContext);\r\n\r\n  const buttonSize = useBreakpointValue({ base: 'sm', sm: 'md', md: 'lg' });\r\n\r\n  return (\r\n    <Container overlay>\r\n      {tx ? (\r\n        <RegisterSuccess />\r\n      ) : (\r\n        <Stack\r\n          direction={{ base: 'column', lg: 'row' }}\r\n          spacing=\"2rem\"\r\n          align=\"center\"\r\n          justify=\"center\"\r\n          w=\"100%\"\r\n          px=\"1rem\"\r\n          my=\"8rem\"\r\n        >\r\n          <StepInfo\r\n            stepNum={currentStep}\r\n            stepTitle={STEPS[currentStep].step_title}\r\n            stepDetails={STEPS[currentStep].step_details}\r\n          />\r\n          <VStack\r\n            spacing={{ base: '1.5rem', lg: '1rem' }}\r\n            w={{ base: '100%', md: 'auto' }}\r\n          >\r\n            <Flex\r\n              bg=\"background\"\r\n              direction=\"column\"\r\n              justify=\"space-between\"\r\n              p=\"1rem\"\r\n              borderRadius=\"0.5rem\"\r\n              w=\"100%\"\r\n            >\r\n              <ProjectDetailsForm\r\n                display={currentStep === 1 ? 'flex' : 'none'}\r\n              />\r\n              <PaymentDetailsForm\r\n                display={currentStep === 2 ? 'flex' : 'none'}\r\n              />\r\n              <PaymentChunksForm\r\n                display={currentStep === 3 ? 'flex' : 'none'}\r\n              />\r\n              <FormConfirmation display={currentStep === 4 ? 'flex' : 'none'} />\r\n            </Flex>\r\n            <Grid templateColumns=\"1fr 4fr\" gap=\"1rem\" w=\"100%\">\r\n              {currentStep !== 1 ? (\r\n                <Button\r\n                  colorScheme=\"red\"\r\n                  variant=\"outline\"\r\n                  onClick={goBackHandler}\r\n                  size={buttonSize}\r\n                  fontFamily=\"mono\"\r\n                  fontWeight=\"normal\"\r\n                >\r\n                  BACK\r\n                </Button>\r\n              ) : (\r\n                <Flex />\r\n              )}\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={nextStepHandler}\r\n                isLoading={loading}\r\n                isDisabled={!nextStepEnabled}\r\n                textTransform=\"uppercase\"\r\n                size={buttonSize}\r\n                fontFamily=\"mono\"\r\n                fontWeight=\"normal\"\r\n              >\r\n                {currentStep === 4\r\n                  ? STEPS[currentStep].next\r\n                  : `next: ${STEPS[currentStep].next}`}\r\n              </Button>\r\n            </Grid>\r\n          </VStack>\r\n        </Stack>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst CreateInvoiceWithProvider = props => (\r\n  <CreateContextProvider>\r\n    <CreateInvoiceInner {...props} />\r\n  </CreateContextProvider>\r\n);\r\n\r\nexport const CreateInvoice = withRouter(CreateInvoiceWithProvider);\r\n","import {\r\n  Button,\r\n  Heading,\r\n  Link,\r\n  Modal,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalOverlay,\r\n  Text,\r\n  useBreakpointValue,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nexport const WhatIsThisModal = ({ isOpen, onClose }) => {\r\n  const buttonSize = useBreakpointValue({ base: 'sm', sm: 'md', md: 'lg' });\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay>\r\n        <ModalContent\r\n          p=\"2rem\"\r\n          maxW=\"40rem\"\r\n          background=\"black\"\r\n          borderRadius=\"0\"\r\n          borderWidth=\"2px\"\r\n          borderColor=\"red.500\"\r\n          color=\"white\"\r\n        >\r\n          <ModalCloseButton\r\n            color=\"red.500\"\r\n            size=\"lg\"\r\n            _hover={{ bgColor: 'white20' }}\r\n            top=\"0\"\r\n            right=\"0\"\r\n          />\r\n          <VStack w=\"100%\" spacing=\"1rem\">\r\n            <Heading\r\n              fontWeight=\"normal\"\r\n              mb=\"1rem\"\r\n              textTransform=\"uppercase\"\r\n              textAlign=\"center\"\r\n            >\r\n              Safe, Efficient Payment\r\n            </Heading>\r\n            <Text>\r\n              Smart invoice builds trust between payer and payee by creating a\r\n              secure neutral channel for transferring money. The payer proves\r\n              their committment by locking money in the contract, and controls\r\n              when it is released to the payee. No middle party, no leap of\r\n              faith, and you don’t even have to use the word escrow if you don’t\r\n              want to.\r\n            </Text>\r\n\r\n            <Text w=\"100%\">\r\n              If you have more questions,{' '}\r\n              <Link\r\n                href=\"https://docs.smartinvoice.xyz\"\r\n                textDecor=\"underline\"\r\n                isExternal\r\n              >\r\n                check out our FAQ.\r\n              </Link>\r\n            </Text>\r\n\r\n            <Text w=\"100%\" mb=\"1rem\">\r\n              You can read more about the future of payment at{' '}\r\n              <Link\r\n                href=\"https://discord.gg/CanD2WcK7W\"\r\n                textDecor=\"underline\"\r\n                isExternal\r\n              >\r\n                Lyght Code\r\n              </Link>\r\n              .\r\n            </Text>\r\n            <Button\r\n              colorScheme=\"red\"\r\n              onClick={onClose}\r\n              size={buttonSize}\r\n              fontFamily=\"mono\"\r\n              fontWeight=\"normal\"\r\n            >\r\n              Got it. Thanks\r\n            </Button>\r\n          </VStack>\r\n        </ModalContent>\r\n      </ModalOverlay>\r\n    </Modal>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  Text,\r\n  useBreakpointValue,\r\n  useDisclosure,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { WhatIsThisModal } from '../components/WhatIsThisModal';\r\nimport { useWeb3 } from '../context/Web3Context';\r\nimport { Container } from '../shared/Container';\r\nimport { logError } from '../utils/helpers';\r\n\r\nexport const Home = () => {\r\n  const { connectAccount, account } = useWeb3();\r\n\r\n  const history = useHistory();\r\n\r\n  const createInvoice = async () => {\r\n    if (account) {\r\n      history.push('/create');\r\n    } else {\r\n      try {\r\n        await connectAccount();\r\n        history.push('/create');\r\n      } catch {\r\n        logError(\"Couldn't connect web3 wallet\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const viewInvoices = async () => {\r\n    if (account) {\r\n      history.push('/invoices');\r\n    } else {\r\n      try {\r\n        await connectAccount();\r\n        history.push('/invoices');\r\n      } catch {\r\n        logError(\"Couldn't connect web3 wallet\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const buttonSize = useBreakpointValue({ base: 'sm', sm: 'md', md: 'lg' });\r\n  const smallFontSize = useBreakpointValue({ base: 'sm', sm: 'md' });\r\n  const fontSize = useBreakpointValue({ base: 'lg', sm: 'xl', md: '2xl' });\r\n  const smallScreen = useBreakpointValue({ base: true, sm: false });\r\n  const betaWarningSmallScreen = useBreakpointValue({ base: true, lg: false });\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <Container\r\n      justify={{ base: 'space-between', lg: 'flex-start' }}\r\n      direction={{ base: 'column', lg: 'row' }}\r\n      pt={{ base: '6rem', sm: '8rem', lg: '0rem' }}\r\n    >\r\n      <Flex\r\n        direction=\"column\"\r\n        align=\"stretch\"\r\n        m={{ base: '1rem', md: '2rem', lg: '4rem' }}\r\n        mr={{ base: '1rem', md: '2rem', lg: '2rem' }}\r\n        w={{ base: '22rem', sm: '28rem', lg: '32rem' }}\r\n        maxW=\"calc(100% - 2rem)\"\r\n      >\r\n        <Button\r\n          colorScheme=\"red\"\r\n          onClick={createInvoice}\r\n          size={buttonSize}\r\n          fontFamily=\"mono\"\r\n          fontWeight=\"normal\"\r\n        >\r\n          {smallScreen ? 'CREATE NEW INVOICE' : 'CREATE A NEW SMART INVOICE'}\r\n        </Button>\r\n        <Text\r\n          fontWeight=\"bold\"\r\n          my=\"0.5rem\"\r\n          w=\"100%\"\r\n          textAlign=\"center\"\r\n          fontSize={{ base: 'md', md: 'xl' }}\r\n        >\r\n          or\r\n        </Text>\r\n        <Button\r\n          colorScheme=\"red\"\r\n          onClick={viewInvoices}\r\n          size={buttonSize}\r\n          fontFamily=\"mono\"\r\n          fontWeight=\"normal\"\r\n        >\r\n          VIEW EXISTING INVOICE\r\n        </Button>\r\n        <Button\r\n          mt=\"2rem\"\r\n          variant=\"link\"\r\n          color=\"white\"\r\n          textDecor=\"underline\"\r\n          size={buttonSize}\r\n          fontSize={fontSize}\r\n          onClick={onOpen}\r\n          fontFamily=\"mono\"\r\n          fontWeight=\"normal\"\r\n          mx=\"auto\"\r\n          w=\"auto\"\r\n        >\r\n          What is this?\r\n        </Button>\r\n        <WhatIsThisModal isOpen={isOpen} onClose={onClose} />\r\n      </Flex>\r\n      <Flex\r\n        {...(betaWarningSmallScreen\r\n          ? {}\r\n          : {\r\n              width: '100%',\r\n              justify: 'flex-end',\r\n              align: 'flex-end',\r\n              justifySelf: 'flex-end',\r\n              alignSelf: 'flex-end',\r\n            })}\r\n        py=\"3rem\"\r\n        m=\"1rem\"\r\n      >\r\n        <VStack\r\n          bgColor=\"background\"\r\n          p={betaWarningSmallScreen ? '1rem' : '2rem'}\r\n          color=\"white\"\r\n          spacing=\"1rem\"\r\n          maxW=\"32rem\"\r\n        >\r\n          <Text fontFamily=\"mono\" textAlign=\"center\" fontSize={buttonSize}>\r\n            This product is in beta!\r\n          </Text>\r\n          <Text fontSize={smallFontSize}>\r\n            The contracts Smart Invoice uses are thoroughly tested, but not\r\n            audited. Raid Guild does not own the contracts created by this\r\n            service, and does not control the money stored in them. Use at your\r\n            own risk.\r\n          </Text>\r\n\r\n          <Link\r\n            href=\"https://docs.smartinvoice.xyz\"\r\n            textDecor=\"underline\"\r\n            isExternal\r\n            fontSize={smallFontSize}\r\n          >\r\n            Learn more about staying safe.\r\n          </Link>\r\n        </VStack>\r\n      </Flex>\r\n    </Container>\r\n  );\r\n};\r\n","import gql from 'fake-tag';\r\n\r\nimport { isAddress } from '../utils/helpers';\r\nimport { clients } from './client';\r\nimport { InvoiceDetails } from './fragments';\r\n\r\nconst searchQuery = gql`\r\n  query Search($search: String, $first: Int) {\r\n    invoices(\r\n      first: $first\r\n      where: { projectName_contains: $search }\r\n      orderBy: createdAt\r\n      orderDirection: desc\r\n    ) {\r\n      ...InvoiceDetails\r\n    }\r\n  }\r\n  ${InvoiceDetails}\r\n`;\r\n\r\nconst addressSearchQuery = gql`\r\n  query AddressSearch($search: Bytes, $first: Int) {\r\n    addressInvoices: invoices(\r\n      first: $first\r\n      where: { address_contains: $search, projectName_not: \"\" }\r\n      orderBy: createdAt\r\n      orderDirection: desc\r\n    ) {\r\n      ...InvoiceDetails\r\n    }\r\n    clientInvoices: invoices(\r\n      first: $first\r\n      where: { client_contains: $search, projectName_not: \"\" }\r\n      orderBy: createdAt\r\n      orderDirection: desc\r\n    ) {\r\n      ...InvoiceDetails\r\n    }\r\n    providerInvoices: invoices(\r\n      first: $first\r\n      where: { provider_contains: $search, projectName_not: \"\" }\r\n      orderBy: createdAt\r\n      orderDirection: desc\r\n    ) {\r\n      ...InvoiceDetails\r\n    }\r\n    resolverInvoices: invoices(\r\n      first: $first\r\n      where: { resolver_contains: $search, projectName_not: \"\" }\r\n      orderBy: createdAt\r\n      orderDirection: desc\r\n    ) {\r\n      ...InvoiceDetails\r\n    }\r\n  }\r\n  ${InvoiceDetails}\r\n`;\r\n\r\nexport const search = async (chainId, searchInput, first = 10) => {\r\n  const isAddressSearch = isAddress(searchInput);\r\n\r\n  const query = isAddressSearch ? addressSearchQuery : searchQuery;\r\n  const { data, error } = await clients[chainId]\r\n    .query(query, {\r\n      first,\r\n      search: isAddressSearch || searchInput,\r\n    })\r\n    .toPromise();\r\n\r\n  if (!data) {\r\n    if (error) {\r\n      throw error;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  return isAddressSearch\r\n    ? [\r\n        ...data.addressInvoices,\r\n        ...data.clientInvoices,\r\n        ...data.providerInvoices,\r\n        ...data.resolverInvoices,\r\n      ]\r\n    : data.invoices;\r\n};\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nimport { search } from '../graphql/search';\r\nimport { logError } from '../utils/helpers';\r\nimport { Web3Context } from './Web3Context';\r\n\r\nexport const SearchContext = createContext();\r\n\r\nexport const SearchContextProvider = ({ children }) => {\r\n  const { chainId } = useContext(Web3Context);\r\n  const [fetching, setFetching] = useState(false);\r\n  const [query, setQuery] = useState('');\r\n  const [result, setResult] = useState();\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      setFetching(true);\r\n      search(chainId, query)\r\n        .then(res => {\r\n          setResult(res);\r\n          setFetching(false);\r\n        })\r\n        .catch(searchError => {\r\n          logError({ searchError });\r\n          setResult();\r\n          setFetching(false);\r\n        });\r\n    } else {\r\n      setResult(undefined);\r\n    }\r\n  }, [chainId, query]);\r\n\r\n  return (\r\n    <SearchContext.Provider\r\n      value={{ search: query, setSearch: setQuery, fetching, result }}\r\n    >\r\n      {children}\r\n    </SearchContext.Provider>\r\n  );\r\n};\r\n","import { Contract, utils } from 'ethers';\r\n\r\nexport const balanceOf = async (ethersProvider, token, address) => {\r\n  const abi = new utils.Interface([\r\n    'function balanceOf(address account) view returns(uint256)',\r\n  ]);\r\n  const contract = new Contract(token, abi, ethersProvider);\r\n  return contract.balanceOf(address);\r\n};\r\n","import { createIcon } from '@chakra-ui/icon';\r\nimport * as React from 'react';\r\n\r\nexport const SearchIcon = createIcon({\r\n  displayName: 'SearchIcon',\r\n  path: (\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M14.9649 14.2549H15.7549L20.7449 19.2549L19.2549 20.7449L14.2549 15.7549V14.9649L13.9849 14.6849C12.8449 15.6649 11.3649 16.2549 9.75488 16.2549C6.16488 16.2549 3.25488 13.3449 3.25488 9.75488C3.25488 6.16488 6.16488 3.25488 9.75488 3.25488C13.3449 3.25488 16.2549 6.16488 16.2549 9.75488C16.2549 11.3649 15.6649 12.8449 14.6849 13.9849L14.9649 14.2549ZM5.25488 9.75488C5.25488 12.2449 7.26488 14.2549 9.75488 14.2549C12.2449 14.2549 14.2549 12.2449 14.2549 9.75488C14.2549 7.26488 12.2449 5.25488 9.75488 5.25488C7.26488 5.25488 5.25488 7.26488 5.25488 9.75488Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  ),\r\n  viewBox: '0 0 24 24',\r\n});\r\n","import {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Text,\r\n  useBreakpointValue,\r\n} from '@chakra-ui/react';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Loader } from '../components/Loader';\r\nimport { SearchContext, SearchContextProvider } from '../context/SearchContext';\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { useInvoiceStatus } from '../hooks/useInvoiceStatus';\r\nimport { SearchIcon } from '../icons/SearchIcon';\r\nimport { Container } from '../shared/Container';\r\nimport { theme } from '../theme';\r\nimport { getHexChainId } from '../utils/helpers';\r\n\r\nconst InvoiceStatusLabel = ({ invoice }) => {\r\n  const { funded, label, loading } = useInvoiceStatus(invoice);\r\n  return (\r\n    <Text\r\n      color={funded ? 'green' : 'red.500'}\r\n      fontWeight=\"bold\"\r\n      textTransform=\"uppercase\"\r\n      textAlign=\"right\"\r\n    >\r\n      {loading ? <Loader size=\"20\" /> : label}\r\n    </Text>\r\n  );\r\n};\r\n\r\nconst InvoicesInner = ({ history }) => {\r\n  const { search, setSearch, result, fetching } = useContext(SearchContext);\r\n  const { account } = useContext(Web3Context);\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      setSearch(account);\r\n    }\r\n  }, [account, setSearch]);\r\n  const fontSize = useBreakpointValue({ base: 'md', sm: 'lg', md: 'xl' });\r\n  return (\r\n    <Container justify={{ base: 'center', md: 'flex-start' }} direction=\"row\">\r\n      <Flex\r\n        direction=\"column\"\r\n        align=\"stretch\"\r\n        mx={{ base: '1rem', md: '2rem' }}\r\n        w={{ base: '30rem', md: '35rem' }}\r\n        maxW=\"calc(100%-4rem)\"\r\n        fontSize={{ base: 'md', sm: 'lg', lg: 'xl' }}\r\n        mt=\"6rem\"\r\n        mb=\"4rem\"\r\n      >\r\n        <Heading fontWeight=\"normal\" mb=\"1rem\">\r\n          View Existing\r\n        </Heading>\r\n        <InputGroup size=\"lg\">\r\n          <Input\r\n            type=\"text\"\r\n            fontSize={fontSize}\r\n            value={search}\r\n            placeholder=\"Search for Invoice\"\r\n            onChange={e => setSearch(e.target.value)}\r\n            borderColor=\"red.500\"\r\n          />\r\n          <InputRightElement>\r\n            {fetching ? (\r\n              <Loader size=\"20\" />\r\n            ) : (\r\n              <SearchIcon boxSize={{ base: '1.25rem', md: '1.5rem' }} />\r\n            )}\r\n          </InputRightElement>\r\n        </InputGroup>\r\n\r\n        <Flex\r\n          direction=\"column\"\r\n          align=\"stretch\"\r\n          w=\"100%\"\r\n          mt=\"0.5rem\"\r\n          maxH=\"30rem\"\r\n          overflowY=\"auto\"\r\n        >\r\n          {result &&\r\n            result.map(invoice => (\r\n              <Button\r\n                minH=\"3rem\"\r\n                borderRadius=\"0\"\r\n                variant=\"ghost\"\r\n                size=\"lg\"\r\n                borderBottom={`solid 1px ${theme.colors.borderGrey}`}\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/invoice/${getHexChainId(invoice.network)}/${\r\n                      invoice.address\r\n                    }`,\r\n                  )\r\n                }\r\n                key={invoice.address}\r\n                _hover={{\r\n                  bgColor: 'white20',\r\n                }}\r\n                _active={{\r\n                  bgColor: 'white20',\r\n                }}\r\n                px={{ base: '0.5rem', md: '1rem' }}\r\n              >\r\n                <Flex\r\n                  fontSize={fontSize}\r\n                  display=\"flex\"\r\n                  justify=\"space-between\"\r\n                  align=\"center\"\r\n                  w=\"100%\"\r\n                >\r\n                  <Text color=\"white\"> {invoice.projectName} </Text>\r\n                  <InvoiceStatusLabel invoice={invoice} />\r\n                </Flex>\r\n              </Button>\r\n            ))}\r\n          {!fetching && result && result.length === 0 && (\r\n            <Flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              p=\"0.5rem\"\r\n              borderBottom=\"solid 1px #505050\"\r\n            >\r\n              <Text color=\"white\"> No invoices found </Text>\r\n            </Flex>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst InvoicesWithProvider = props => (\r\n  <SearchContextProvider>\r\n    <InvoicesInner {...props} />\r\n  </SearchContextProvider>\r\n);\r\n\r\nexport const Invoices = withRouter(InvoicesWithProvider);\r\n","import { BigNumber } from 'ethers';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { balanceOf } from '../utils/erc20';\r\nimport { logError } from '../utils/helpers';\r\n\r\nexport const useInvoiceStatus = invoice => {\r\n  const { provider } = useContext(Web3Context);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [funded, setFunded] = useState(false);\r\n  const [label, setLabel] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (invoice && provider) {\r\n      const {\r\n        currentMilestone,\r\n        amounts,\r\n        token,\r\n        address,\r\n        isLocked,\r\n        terminationTime,\r\n        disputes,\r\n        resolutions,\r\n      } = invoice;\r\n      balanceOf(provider, token, address)\r\n        .then(balance => {\r\n          if (Number(currentMilestone) === amounts.length) {\r\n            if (\r\n              disputes.length === resolutions.length &&\r\n              resolutions.length > 0\r\n            ) {\r\n              setLabel('Dispute Resolved');\r\n            } else {\r\n              setLabel('Completed');\r\n            }\r\n          } else {\r\n            const amount = BigNumber.from(amounts[currentMilestone]);\r\n            if (balance.gte(amount)) {\r\n              setFunded(!isLocked);\r\n              setLabel('Funded');\r\n            } else if (terminationTime <= new Date().getTime() / 1000) {\r\n              setLabel('Expired');\r\n            } else {\r\n              setLabel('Awaiting Deposit');\r\n            }\r\n            if (isLocked) {\r\n              setLabel('In Dispute');\r\n            }\r\n          }\r\n\r\n          setLoading(false);\r\n        })\r\n        .catch(statusError => logError({ statusError }));\r\n    }\r\n  }, [invoice, provider]);\r\n\r\n  return { funded, label, loading };\r\n};\r\n","import { createIcon } from '@chakra-ui/icon';\r\nimport * as React from 'react';\r\n\r\nexport const WalletFilledIcon = createIcon({\r\n  displayName: 'WalletFilledIcon',\r\n  path: (\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M4 0C1.79086 0 0 1.79086 0 4V6H20V4C20 1.79086 18.2091 0 16 0H4ZM0 8H24C26.2091 8 28 9.79086 28 12V24C28 26.2091 26.2091 28 24 28H4C1.79086 28 0 26.2091 0 24V8ZM18 18C18 17.4477 18.4477 17 19 17H24C24.5523 17 25 17.4477 25 18C25 18.5523 24.5523 19 24 19H19C18.4477 19 18 18.5523 18 18Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  ),\r\n  viewBox: '0 0 28 28',\r\n});\r\n","import { Button, Flex, Text, VStack } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { WalletFilledIcon } from '../icons/WalletFilledIcon';\r\nimport { getNetworkName } from '../utils/helpers';\r\nimport { Container } from './Container';\r\n\r\nexport const InvoiceNotFound = ({ heading, chainId }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Container>\r\n      <VStack\r\n        spacing=\"1rem\"\r\n        background=\"background\"\r\n        borderRadius=\"1rem\"\r\n        align=\"center\"\r\n        w=\"calc(100% - 2rem)\"\r\n        p=\"2rem\"\r\n        maxW=\"27.5rem\"\r\n        mx={4}\r\n        color=\"white\"\r\n      >\r\n        {chainId && (\r\n          <Flex\r\n            bg=\"red.500\"\r\n            borderRadius=\"50%\"\r\n            p=\"1rem\"\r\n            justify=\"center\"\r\n            align=\"center\"\r\n            color=\"white\"\r\n          >\r\n            <WalletFilledIcon boxSize=\"1.75rem\" />\r\n          </Flex>\r\n        )}\r\n        <Text fontSize=\"2xl\" textAlign=\"center\" fontFamily=\"heading\">\r\n          {heading || 'Invoice Not Found'}\r\n        </Text>\r\n        {chainId && (\r\n          <Text color=\"greyText\">\r\n            Please switch to <b>{getNetworkName(chainId)}</b> to view this\r\n            invoice.\r\n          </Text>\r\n        )}\r\n\r\n        <Button\r\n          colorScheme=\"red\"\r\n          px={12}\r\n          onClick={() => history.push('/')}\r\n          fontFamily=\"mono\"\r\n          fontWeight=\"normal\"\r\n        >\r\n          Return Home\r\n        </Button>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n};\r\n","import { Button, Heading, Link, Text, VStack } from '@chakra-ui/react';\r\nimport { utils } from 'ethers';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\n\r\nimport { Loader } from '../components/Loader';\r\nimport { getInvoice } from '../graphql/getInvoice';\r\nimport { Container } from '../shared/Container';\r\nimport { InvoiceNotFound } from '../shared/InvoiceNotFound';\r\nimport { getHexChainId, getIpfsLink, getTxLink } from '../utils/helpers';\r\n\r\nexport const LockedInvoice = ({\r\n  match: {\r\n    params: { hexChainId, invoiceId },\r\n  },\r\n}) => {\r\n  const [invoice, setInvoice] = useState();\r\n  const history = useHistory();\r\n  const invoiceChainId = parseInt(hexChainId, 16);\r\n\r\n  useEffect(() => {\r\n    if (utils.isAddress(invoiceId)) {\r\n      getInvoice(invoiceChainId, invoiceId).then(i => setInvoice(i));\r\n    }\r\n  }, [invoiceId, invoiceChainId]);\r\n\r\n  if (!utils.isAddress(invoiceId) || invoice === null) {\r\n    return <InvoiceNotFound />;\r\n  }\r\n\r\n  if (!invoice) {\r\n    return (\r\n      <Container overlay>\r\n        <Loader size=\"80\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const { id, network, disputes, isLocked } = invoice;\r\n\r\n  const dispute =\r\n    isLocked && disputes.length > 0 ? disputes[disputes.length - 1] : undefined;\r\n\r\n  if (!dispute) {\r\n    return <InvoiceNotFound heading=\"Invoice Not Locked\" />;\r\n  }\r\n\r\n  return (\r\n    <Container overlay>\r\n      <VStack\r\n        w=\"100%\"\r\n        spacing=\"1rem\"\r\n        align=\"center\"\r\n        justify=\"center\"\r\n        my=\"8rem\"\r\n        maxW=\"35rem\"\r\n        px=\"1rem\"\r\n      >\r\n        <Heading fontWeight=\"normal\" textAlign=\"center\">\r\n          Funds Securely Locked\r\n        </Heading>\r\n        <Text color=\"white\" textAlign=\"center\" fontSize=\"sm\" mb=\"1rem\">\r\n          You can view the transaction{' '}\r\n          <Link\r\n            href={getTxLink(invoiceChainId, dispute.txHash)}\r\n            isExternal\r\n            color=\"red.500\"\r\n            textDecoration=\"underline\"\r\n          >\r\n            here\r\n          </Link>\r\n          <br />\r\n          You can view the details on IPFS{' '}\r\n          <Link\r\n            href={getIpfsLink(dispute.ipfsHash)}\r\n            isExternal\r\n            color=\"red.500\"\r\n            textDecoration=\"underline\"\r\n          >\r\n            here\r\n          </Link>\r\n        </Text>\r\n        <Text color=\"white\" fontStyle=\"italic\" textAlign=\"center\" mb=\"1rem\">\r\n          Once a decision is made, the funds will be dispersed according to the\r\n          ruling.\r\n          <br />\r\n          Return to the{' '}\r\n          <RouterLink to={`/invoice/${getHexChainId(network)}/${id}`}>\r\n            <u>invoice details page</u>\r\n          </RouterLink>{' '}\r\n          to view the results.\r\n        </Text>\r\n        <Button\r\n          w=\"100%\"\r\n          maxW=\"30rem\"\r\n          variant=\"outline\"\r\n          colorScheme=\"red\"\r\n          textTransform=\"uppercase\"\r\n          fontFamily=\"mono\"\r\n          fontWeight=\"normal\"\r\n          size=\"lg\"\r\n          onClick={() => history.push('/')}\r\n        >\r\n          Return Home\r\n        </Button>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n};\r\n","import {\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Button,\r\n  Checkbox,\r\n  Flex,\r\n  Heading,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Link,\r\n  Select,\r\n  Text,\r\n  Tooltip,\r\n  useBreakpointValue,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { BigNumber, Contract, utils } from 'ethers';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { QuestionIcon } from '../icons/QuestionIcon';\r\nimport { balanceOf } from '../utils/erc20';\r\nimport {\r\n  getHexChainId,\r\n  getNativeTokenSymbol,\r\n  getTokenInfo,\r\n  getTxLink,\r\n  getWrappedNativeToken,\r\n  logError,\r\n} from '../utils/helpers';\r\n\r\nconst getCheckedStatus = (deposited, amounts) => {\r\n  let sum = BigNumber.from(0);\r\n  return amounts.map(a => {\r\n    sum = sum.add(a);\r\n    return deposited.gte(sum);\r\n  });\r\n};\r\n\r\nconst checkedAtIndex = (index, checked) => {\r\n  return checked.map((_c, i) => i <= index);\r\n};\r\n\r\nexport const DepositFunds = ({ invoice, deposited, due }) => {\r\n  const { chainId, provider, account } = useContext(Web3Context);\r\n  const NATIVE_TOKEN_SYMBOL = getNativeTokenSymbol(chainId);\r\n  const WRAPPED_NATIVE_TOKEN = getWrappedNativeToken(chainId);\r\n  const { address, token, network, amounts, currentMilestone } = invoice;\r\n  const [paymentType, setPaymentType] = useState(0);\r\n  const [amount, setAmount] = useState(BigNumber.from(0));\r\n  const [amountInput, setAmountInput] = useState('');\r\n  const { decimals, symbol } = getTokenInfo(chainId, token);\r\n  const [loading, setLoading] = useState(false);\r\n  const [transaction, setTransaction] = useState();\r\n  const buttonSize = useBreakpointValue({ base: 'md', md: 'lg' });\r\n  const deposit = async () => {\r\n    if (!amount || !provider) return;\r\n    try {\r\n      setLoading(true);\r\n      let tx;\r\n      if (paymentType === 1) {\r\n        tx = await provider\r\n          .getSigner()\r\n          .sendTransaction({ to: address, value: amount });\r\n      } else {\r\n        const abi = ['function transfer(address, uint256) public'];\r\n        const tokenContract = new Contract(token, abi, provider.getSigner());\r\n        tx = await tokenContract.transfer(address, amount);\r\n      }\r\n      setTransaction(tx);\r\n      await tx.wait();\r\n      window.location.href = `/invoice/${getHexChainId(network)}/${address}`;\r\n    } catch (depositError) {\r\n      setLoading(false);\r\n      logError({ depositError });\r\n    }\r\n  };\r\n\r\n  const isWRAPPED = token.toLowerCase() === WRAPPED_NATIVE_TOKEN;\r\n\r\n  const initialStatus = getCheckedStatus(deposited, amounts);\r\n  const [checked, setChecked] = useState(initialStatus);\r\n\r\n  const [balance, setBalance] = useState();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (paymentType === 0) {\r\n        balanceOf(provider, token, account).then(setBalance);\r\n      } else {\r\n        provider.getBalance(account).then(setBalance);\r\n      }\r\n    } catch (balanceError) {\r\n      logError({ balanceError });\r\n    }\r\n  }, [paymentType, token, provider, account]);\r\n\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"1rem\">\r\n      <Heading\r\n        fontWeight=\"normal\"\r\n        mb=\"1rem\"\r\n        textTransform=\"uppercase\"\r\n        textAlign=\"center\"\r\n      >\r\n        Pay Invoice\r\n      </Heading>\r\n      <Text textAlign=\"center\" fontSize=\"sm\" mb=\"1rem\">\r\n        At a minimum, you’ll need to deposit enough to cover the{' '}\r\n        {currentMilestone === 0 ? 'first' : 'next'} project payment.\r\n      </Text>\r\n\r\n      <Text textAlign=\"center\" color=\"red.500\">\r\n        How much will you be depositing today?\r\n      </Text>\r\n      <VStack spacing=\"0.5rem\">\r\n        {amounts.map((a, i) => {\r\n          return (\r\n            <Checkbox\r\n              key={i.toString()}\r\n              isChecked={checked[i]}\r\n              isDisabled={initialStatus[i]}\r\n              onChange={e => {\r\n                const newChecked = e.target.checked\r\n                  ? checkedAtIndex(i, checked)\r\n                  : checkedAtIndex(i - 1, checked);\r\n                const totAmount = amounts.reduce(\r\n                  (tot, cur, ind) => (newChecked[ind] ? tot.add(cur) : tot),\r\n                  BigNumber.from(0),\r\n                );\r\n                const newAmount = totAmount.gte(deposited)\r\n                  ? totAmount.sub(deposited)\r\n                  : BigNumber.from(0);\r\n\r\n                setChecked(newChecked);\r\n                setAmount(newAmount);\r\n                setAmountInput(utils.formatUnits(newAmount, decimals));\r\n              }}\r\n              colorScheme=\"red\"\r\n              border=\"none\"\r\n              size=\"lg\"\r\n              fontSize=\"1rem\"\r\n              color=\"white\"\r\n            >\r\n              Payment #{i + 1} &nbsp; &nbsp;\r\n              {utils.formatUnits(a, decimals)} {symbol}\r\n            </Checkbox>\r\n          );\r\n        })}\r\n      </VStack>\r\n\r\n      <VStack spacing=\"0.5rem\" align=\"stretch\" color=\"red.500\" mb=\"1rem\">\r\n        <Flex justify=\"space-between\" w=\"100%\">\r\n          <Text fontWeight=\"700\">Amount</Text>\r\n          <Flex>\r\n            {paymentType === 1 && (\r\n              <Tooltip\r\n                label={`Your ${NATIVE_TOKEN_SYMBOL} will be automagically wrapped to ${symbol} tokens`}\r\n                placement=\"auto-start\"\r\n              >\r\n                <QuestionIcon ml=\"1rem\" boxSize=\"0.75rem\" />\r\n              </Tooltip>\r\n            )}\r\n          </Flex>\r\n        </Flex>\r\n        <InputGroup>\r\n          <Input\r\n            bg=\"black\"\r\n            color=\"white\"\r\n            border=\"none\"\r\n            type=\"number\"\r\n            value={amountInput}\r\n            onChange={e => {\r\n              const newAmountInput = e.target.value;\r\n              setAmountInput(newAmountInput);\r\n              if (newAmountInput) {\r\n                const newAmount = utils.parseUnits(newAmountInput, decimals);\r\n                setAmount(newAmount);\r\n                setChecked(getCheckedStatus(deposited.add(newAmount), amounts));\r\n              } else {\r\n                setAmount(BigNumber.from(0));\r\n                setChecked(initialStatus);\r\n              }\r\n            }}\r\n            placeholder=\"Amount to Deposit\"\r\n            pr={isWRAPPED ? '6rem' : '3.5rem'}\r\n          />\r\n          <InputRightElement w={isWRAPPED ? '6rem' : '3.5rem'}>\r\n            {isWRAPPED ? (\r\n              <Select\r\n                onChange={e => setPaymentType(Number(e.target.value))}\r\n                value={paymentType}\r\n                bg=\"black\"\r\n                color=\"white\"\r\n                border=\"none\"\r\n              >\r\n                <option value=\"0\">{symbol}</option>\r\n                <option value=\"1\">{NATIVE_TOKEN_SYMBOL}</option>\r\n              </Select>\r\n            ) : (\r\n              symbol\r\n            )}\r\n          </InputRightElement>\r\n        </InputGroup>\r\n        {amount.gt(due) && (\r\n          <Alert bg=\"none\">\r\n            <AlertIcon color=\"red.500\" />\r\n            <AlertTitle fontSize=\"sm\">\r\n              Your deposit is greater than the due amount!\r\n            </AlertTitle>\r\n          </Alert>\r\n        )}\r\n      </VStack>\r\n      <Flex color=\"white\" justify=\"space-between\" w=\"100%\" fontSize=\"sm\">\r\n        {deposited && (\r\n          <VStack align=\"flex-start\">\r\n            <Text fontWeight=\"bold\">Total Deposited</Text>\r\n            <Text>{`${utils.formatUnits(deposited, decimals)} ${symbol}`}</Text>\r\n          </VStack>\r\n        )}\r\n        {due && (\r\n          <VStack>\r\n            <Text fontWeight=\"bold\">Total Due</Text>\r\n            <Text>{`${utils.formatUnits(due, decimals)} ${symbol}`}</Text>\r\n          </VStack>\r\n        )}\r\n        {balance && (\r\n          <VStack align=\"flex-end\">\r\n            <Text fontWeight=\"bold\">Your Balance</Text>\r\n            <Text>\r\n              {`${utils.formatUnits(balance, decimals)} ${\r\n                paymentType === 0 ? symbol : NATIVE_TOKEN_SYMBOL\r\n              }`}\r\n            </Text>\r\n          </VStack>\r\n        )}\r\n      </Flex>\r\n      <Button\r\n        onClick={deposit}\r\n        isLoading={loading}\r\n        colorScheme=\"red\"\r\n        isDisabled={amount.lte(0)}\r\n        textTransform=\"uppercase\"\r\n        size={buttonSize}\r\n        fontFamily=\"mono\"\r\n        fontWeight=\"normal\"\r\n        w=\"100%\"\r\n      >\r\n        Deposit\r\n      </Button>\r\n      {transaction && (\r\n        <Text color=\"white\" textAlign=\"center\" fontSize=\"sm\">\r\n          Follow your transaction{' '}\r\n          <Link\r\n            href={getTxLink(chainId, transaction.hash)}\r\n            isExternal\r\n            color=\"red.500\"\r\n            textDecoration=\"underline\"\r\n          >\r\n            here\r\n          </Link>\r\n        </Text>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  Link,\r\n  Text,\r\n  useBreakpointValue,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { BigNumber, utils } from 'ethers';\r\nimport React, { useCallback, useContext, useState } from 'react';\r\n\r\nimport { ReactComponent as LockImage } from '../assets/lock.svg';\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { AccountLink } from '../shared/AccountLink';\r\nimport { OrderedTextarea } from '../shared/OrderedInput';\r\nimport {\r\n  getHexChainId,\r\n  getResolverInfo,\r\n  getResolverString,\r\n  getTokenInfo,\r\n  getTxLink,\r\n  isKnownResolver,\r\n  logError,\r\n} from '../utils/helpers';\r\nimport { lock } from '../utils/invoice';\r\nimport { uploadDisputeDetails } from '../utils/ipfs';\r\nimport { Loader } from './Loader';\r\n\r\nexport const LockFunds = ({ invoice, balance }) => {\r\n  const { chainId, provider } = useContext(Web3Context);\r\n  const { network, address, resolver, token, resolutionRate } = invoice;\r\n  const { decimals, symbol } = getTokenInfo(chainId, token);\r\n  const [disputeReason, setDisputeReason] = useState('');\r\n\r\n  const fee = `${utils.formatUnits(\r\n    BigNumber.from(balance).div(resolutionRate),\r\n    decimals,\r\n  )} ${symbol}`;\r\n\r\n  const [locking, setLocking] = useState(false);\r\n  const [transaction, setTransaction] = useState();\r\n  const buttonSize = useBreakpointValue({ base: 'md', md: 'lg' });\r\n\r\n  const lockFunds = useCallback(async () => {\r\n    if (provider && !locking && balance.gt(0) && disputeReason) {\r\n      try {\r\n        setLocking(true);\r\n        const detailsHash = await uploadDisputeDetails({\r\n          reason: disputeReason,\r\n          invoice: address,\r\n          amount: balance.toString(),\r\n        });\r\n        const tx = await lock(provider, address, detailsHash);\r\n        setTransaction(tx);\r\n        await tx.wait();\r\n        setTimeout(() => {\r\n          window.location.href = `/invoice/${getHexChainId(\r\n            network,\r\n          )}/${address}`;\r\n        }, 2000);\r\n      } catch (lockError) {\r\n        setLocking(false);\r\n        logError({ lockError });\r\n      }\r\n    }\r\n  }, [network, provider, locking, balance, address, disputeReason]);\r\n\r\n  if (locking) {\r\n    return (\r\n      <VStack w=\"100%\" spacing=\"1rem\">\r\n        <Heading\r\n          fontWeight=\"normal\"\r\n          mb=\"1rem\"\r\n          textTransform=\"uppercase\"\r\n          textAlign=\"center\"\r\n        >\r\n          Locking Funds\r\n        </Heading>\r\n        {transaction && (\r\n          <Text color=\"white\" textAlign=\"center\" fontSize=\"sm\">\r\n            Follow your transaction{' '}\r\n            <Link\r\n              href={getTxLink(chainId, transaction.hash)}\r\n              isExternal\r\n              color=\"red.500\"\r\n              textDecoration=\"underline\"\r\n            >\r\n              here\r\n            </Link>\r\n          </Text>\r\n        )}\r\n        <Flex\r\n          w=\"100%\"\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          minH=\"7rem\"\r\n          my=\"3rem\"\r\n          position=\"relative\"\r\n          color=\"red.500\"\r\n        >\r\n          <Loader size=\"6rem\" />\r\n          <Flex\r\n            position=\"absolute\"\r\n            left=\"50%\"\r\n            top=\"50%\"\r\n            transform=\"translate(-50%,-50%)\"\r\n          >\r\n            <LockImage width=\"2rem\" />\r\n          </Flex>\r\n        </Flex>\r\n      </VStack>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"1rem\">\r\n      <Heading\r\n        fontWeight=\"normal\"\r\n        mb=\"1rem\"\r\n        textTransform=\"uppercase\"\r\n        textAlign=\"center\"\r\n      >\r\n        Lock Funds\r\n      </Heading>\r\n\r\n      <Text textAlign=\"center\" fontSize=\"sm\" mb=\"1rem\">\r\n        Locking freezes all remaining funds in the contract and initiates a\r\n        dispute.\r\n      </Text>\r\n      <Text w=\"100%\">\r\n        {'Once a dispute has been initiated, '}\r\n        <AccountLink address={resolver} />\r\n        {\r\n          ' will review your case, the project agreement and dispute reasoning before making a decision on how to fairly distribute remaining funds.'\r\n        }\r\n      </Text>\r\n\r\n      <OrderedTextarea\r\n        tooltip=\"Why do you want to lock these funds?\"\r\n        label=\"Dispute Reason\"\r\n        value={disputeReason}\r\n        setValue={setDisputeReason}\r\n      />\r\n      <Text color=\"red.500\" textAlign=\"center\">\r\n        {`Upon resolution, a fee of ${fee} will be deducted from the locked fund amount and sent to `}\r\n        <AccountLink address={resolver} />\r\n        {` for helping resolve this dispute.`}\r\n      </Text>\r\n      <Button\r\n        onClick={lockFunds}\r\n        colorScheme=\"red\"\r\n        isDisabled={!disputeReason}\r\n        textTransform=\"uppercase\"\r\n        size={buttonSize}\r\n        fontFamily=\"mono\"\r\n        fontWeight=\"normal\"\r\n        w=\"100%\"\r\n      >\r\n        {`Lock ${utils.formatUnits(balance, decimals)} ${symbol}`}\r\n      </Button>\r\n      {isKnownResolver(chainId, resolver) && (\r\n        <Link\r\n          href={getResolverInfo(chainId, resolver).termsUrl}\r\n          isExternal\r\n          color=\"red.500\"\r\n          textDecor=\"underline\"\r\n        >\r\n          Learn about {getResolverString(chainId, resolver)} dispute process &\r\n          terms\r\n        </Link>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Heading,\r\n  Link,\r\n  Text,\r\n  useBreakpointValue,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { BigNumber, utils } from 'ethers';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport {\r\n  getHexChainId,\r\n  getTokenInfo,\r\n  getTxLink,\r\n  logError,\r\n} from '../utils/helpers';\r\nimport { release } from '../utils/invoice';\r\n\r\nconst getReleaseAmount = (currentMilestone, amounts, balance) => {\r\n  if (\r\n    currentMilestone >= amounts.length ||\r\n    (currentMilestone === amounts.length - 1 &&\r\n      balance.gte(amounts[currentMilestone]))\r\n  ) {\r\n    return balance;\r\n  }\r\n  return BigNumber.from(amounts[currentMilestone]);\r\n};\r\n\r\nexport const ReleaseFunds = ({ invoice, balance, close }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { chainId, provider } = useContext(Web3Context);\r\n  const { network, currentMilestone, amounts, address, token } = invoice;\r\n\r\n  let amount = getReleaseAmount(currentMilestone, amounts, balance);\r\n\r\n  const { decimals, symbol } = getTokenInfo(chainId, token);\r\n  const [transaction, setTransaction] = useState();\r\n  const buttonSize = useBreakpointValue({ base: 'md', md: 'lg' });\r\n\r\n  useEffect(() => {\r\n    const send = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const tx = await release(provider, address);\r\n        setTransaction(tx);\r\n        await tx.wait();\r\n        window.location.href = `/invoice/${getHexChainId(network)}/${address}`;\r\n      } catch (releaseError) {\r\n        logError({ releaseError });\r\n        close();\r\n      }\r\n    };\r\n    if (!loading && provider && balance && balance.gte(amount)) {\r\n      send();\r\n    }\r\n  }, [network, amount, address, provider, balance, loading, close]);\r\n\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"1rem\">\r\n      <Heading\r\n        fontWeight=\"normal\"\r\n        mb=\"1rem\"\r\n        textTransform=\"uppercase\"\r\n        textAlign=\"center\"\r\n      >\r\n        Release Funds\r\n      </Heading>\r\n      <Text textAlign=\"center\" fontSize=\"sm\" mb=\"1rem\">\r\n        Follow the instructions in your wallet to release funds from escrow to\r\n        the project team.\r\n      </Text>\r\n      <VStack my=\"2rem\" px=\"5rem\" py=\"1rem\" bg=\"black\" borderRadius=\"0.5rem\">\r\n        <Text color=\"red.500\" fontSize=\"0.875rem\" textAlign=\"center\">\r\n          Amount To Be Released\r\n        </Text>\r\n        <Text\r\n          color=\"white\"\r\n          fontSize=\"1rem\"\r\n          fontWeight=\"bold\"\r\n          textAlign=\"center\"\r\n        >{`${utils.formatUnits(amount, decimals)} ${symbol}`}</Text>\r\n      </VStack>\r\n      {transaction && (\r\n        <Text color=\"white\" textAlign=\"center\" fontSize=\"sm\">\r\n          Follow your transaction{' '}\r\n          <Link\r\n            href={getTxLink(chainId, transaction.hash)}\r\n            isExternal\r\n            color=\"red.500\"\r\n            textDecoration=\"underline\"\r\n          >\r\n            here\r\n          </Link>\r\n        </Text>\r\n      )}\r\n      <Button\r\n        onClick={close}\r\n        variant=\"outline\"\r\n        colorScheme=\"red\"\r\n        textTransform=\"uppercase\"\r\n        size={buttonSize}\r\n        fontFamily=\"mono\"\r\n        fontWeight=\"normal\"\r\n        w=\"100%\"\r\n      >\r\n        Close\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Heading,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Link,\r\n  Text,\r\n  useBreakpointValue,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { BigNumber, utils } from 'ethers';\r\nimport React, { useCallback, useContext, useState } from 'react';\r\n\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { OrderedTextarea } from '../shared/OrderedInput';\r\nimport {\r\n  getHexChainId,\r\n  getTokenInfo,\r\n  getTxLink,\r\n  logError,\r\n} from '../utils/helpers';\r\nimport { resolve } from '../utils/invoice';\r\nimport { uploadDisputeDetails } from '../utils/ipfs';\r\n\r\nexport const ResolveFunds = ({ invoice, balance, close }) => {\r\n  const { network, address, resolutionRate, token, isLocked } = invoice;\r\n  const { chainId, provider } = useContext(Web3Context);\r\n  const { decimals, symbol } = getTokenInfo(chainId, token);\r\n  const [loading, setLoading] = useState(false);\r\n  const [transaction, setTransaction] = useState();\r\n\r\n  const resolverAward = balance.gt(0)\r\n    ? balance.div(resolutionRate)\r\n    : BigNumber.from(0);\r\n  const availableFunds = balance.sub(resolverAward);\r\n  const [clientAward, setClientAward] = useState(availableFunds);\r\n  const [providerAward, setProviderAward] = useState(BigNumber.from(0));\r\n  const [clientAwardInput, setClientAwardInput] = useState(\r\n    utils.formatUnits(availableFunds, decimals),\r\n  );\r\n  const [providerAwardInput, setProviderAwardInput] = useState('0');\r\n  const [comments, setComments] = useState('');\r\n  const buttonSize = useBreakpointValue({ base: 'md', md: 'lg' });\r\n\r\n  const resolveFunds = useCallback(async () => {\r\n    if (\r\n      provider &&\r\n      isLocked &&\r\n      comments &&\r\n      balance.eq(clientAward.add(providerAward).add(resolverAward)) &&\r\n      balance.gt(0)\r\n    ) {\r\n      try {\r\n        setLoading(true);\r\n        const detailsHash = await uploadDisputeDetails({\r\n          comments,\r\n          invoice: address,\r\n          amount: balance.toString(),\r\n        });\r\n        const tx = await resolve(\r\n          provider,\r\n          address,\r\n          clientAward,\r\n          providerAward,\r\n          detailsHash,\r\n        );\r\n        setTransaction(tx);\r\n        await tx.wait();\r\n        window.location.href = `/invoice/${getHexChainId(network)}/${address}`;\r\n      } catch (depositError) {\r\n        setLoading(false);\r\n        logError({ depositError });\r\n      }\r\n    }\r\n  }, [\r\n    provider,\r\n    isLocked,\r\n    balance,\r\n    comments,\r\n    clientAward,\r\n    providerAward,\r\n    resolverAward,\r\n    address,\r\n    network,\r\n  ]);\r\n\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"1rem\">\r\n      <Heading\r\n        fontWeight=\"normal\"\r\n        mb=\"1rem\"\r\n        textTransform=\"uppercase\"\r\n        textAlign=\"center\"\r\n      >\r\n        Resolve Dispute\r\n      </Heading>\r\n      <Text textAlign=\"center\" fontSize=\"sm\" mb=\"1rem\">\r\n        {isLocked\r\n          ? `You’ll need to distribute the total balance of ${utils.formatUnits(\r\n              balance,\r\n              decimals,\r\n            )} ${symbol} between the client and provider, excluding the ${\r\n              100 / resolutionRate\r\n            }% arbitration fee which you shall receive.`\r\n          : `Invoice is not locked`}\r\n      </Text>\r\n      {isLocked ? (\r\n        <>\r\n          <OrderedTextarea\r\n            tooltip=\"Here you may explain your reasoning behind the resolution\"\r\n            label=\"Resolution Comments\"\r\n            value={comments}\r\n            setValue={setComments}\r\n          />\r\n\r\n          <VStack spacing=\"0.5rem\" align=\"stretch\" color=\"red.500\">\r\n            <Text fontWeight=\"700\">Client Award</Text>\r\n            <InputGroup>\r\n              <Input\r\n                bg=\"black\"\r\n                color=\"white\"\r\n                border=\"none\"\r\n                type=\"number\"\r\n                value={clientAwardInput}\r\n                pr=\"3.5rem\"\r\n                onChange={e => {\r\n                  setClientAwardInput(e.target.value);\r\n                  if (e.target.value) {\r\n                    let award = utils.parseUnits(e.target.value, decimals);\r\n                    if (award.gt(availableFunds)) {\r\n                      award = availableFunds;\r\n                      setClientAwardInput(utils.formatUnits(award, decimals));\r\n                    }\r\n                    setClientAward(award);\r\n                    award = availableFunds.sub(award);\r\n                    setProviderAward(award);\r\n                    setProviderAwardInput(utils.formatUnits(award, decimals));\r\n                  }\r\n                }}\r\n                placeholder=\"Client Award\"\r\n              />\r\n              <InputRightElement w=\"3.5rem\">{symbol}</InputRightElement>\r\n            </InputGroup>\r\n          </VStack>\r\n          <VStack spacing=\"0.5rem\" align=\"stretch\" color=\"red.500\">\r\n            <Text fontWeight=\"700\">Provider Award</Text>\r\n            <InputGroup>\r\n              <Input\r\n                bg=\"black\"\r\n                color=\"white\"\r\n                border=\"none\"\r\n                type=\"number\"\r\n                value={providerAwardInput}\r\n                pr=\"3.5rem\"\r\n                onChange={e => {\r\n                  setProviderAwardInput(e.target.value);\r\n                  if (e.target.value) {\r\n                    let award = utils.parseUnits(e.target.value, decimals);\r\n                    if (award.gt(availableFunds)) {\r\n                      award = availableFunds;\r\n                      setProviderAwardInput(utils.formatUnits(award, decimals));\r\n                    }\r\n                    setProviderAward(award);\r\n                    award = availableFunds.sub(award);\r\n                    setClientAward(award);\r\n                    setClientAwardInput(utils.formatUnits(award, decimals));\r\n                  }\r\n                }}\r\n                placeholder=\"Provider Award\"\r\n              />\r\n              <InputRightElement w=\"3.5rem\">{symbol}</InputRightElement>\r\n            </InputGroup>\r\n          </VStack>\r\n          <VStack spacing=\"0.5rem\" align=\"stretch\" color=\"red.500\" mb=\"1rem\">\r\n            <Text fontWeight=\"700\">Resolver Award</Text>\r\n            <InputGroup>\r\n              <Input\r\n                bg=\"black\"\r\n                color=\"white\"\r\n                border=\"none\"\r\n                type=\"number\"\r\n                value={utils.formatUnits(resolverAward, decimals)}\r\n                pr=\"3.5rem\"\r\n                isDisabled\r\n              />\r\n              <InputRightElement w=\"3.5rem\">{symbol}</InputRightElement>\r\n            </InputGroup>\r\n          </VStack>\r\n          <Button\r\n            onClick={resolveFunds}\r\n            isLoading={loading}\r\n            colorScheme=\"red\"\r\n            isDisabled={resolverAward.lte(0) || !comments}\r\n            textTransform=\"uppercase\"\r\n            size={buttonSize}\r\n            fontFamily=\"mono\"\r\n            fontWeight=\"normal\"\r\n            w=\"100%\"\r\n          >\r\n            Resolve\r\n          </Button>\r\n          {transaction && (\r\n            <Text color=\"white\" textAlign=\"center\" fontSize=\"sm\">\r\n              Follow your transaction{' '}\r\n              <Link\r\n                href={getTxLink(chainId, transaction.hash)}\r\n                isExternal\r\n                color=\"red.500\"\r\n                textDecoration=\"underline\"\r\n              >\r\n                here\r\n              </Link>\r\n            </Text>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Button\r\n          onClick={close}\r\n          variant=\"outline\"\r\n          colorScheme=\"red\"\r\n          textTransform=\"uppercase\"\r\n          size={buttonSize}\r\n          fontFamily=\"mono\"\r\n          fontWeight=\"normal\"\r\n          w=\"100%\"\r\n        >\r\n          Close\r\n        </Button>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Heading,\r\n  Link,\r\n  Text,\r\n  useBreakpointValue,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport { utils } from 'ethers';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport {\r\n  getHexChainId,\r\n  getTokenInfo,\r\n  getTxLink,\r\n  logError,\r\n} from '../utils/helpers';\r\nimport { withdraw } from '../utils/invoice';\r\n\r\nexport const WithdrawFunds = ({ invoice, balance, close }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { chainId, provider } = useContext(Web3Context);\r\n  const { network, address, token } = invoice;\r\n\r\n  const { decimals, symbol } = getTokenInfo(chainId, token);\r\n  const [transaction, setTransaction] = useState();\r\n  const buttonSize = useBreakpointValue({ base: 'md', md: 'lg' });\r\n\r\n  useEffect(() => {\r\n    const send = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const tx = await withdraw(provider, address);\r\n        setTransaction(tx);\r\n        await tx.wait();\r\n        window.location.href = `/invoice/${getHexChainId(network)}/${address}`;\r\n        setLoading(false);\r\n      } catch (withdrawError) {\r\n        close();\r\n        logError({ withdrawError });\r\n      }\r\n    };\r\n    if (!loading && provider && balance.gte(0)) {\r\n      send();\r\n    }\r\n  }, [network, balance, address, provider, loading, close]);\r\n\r\n  return (\r\n    <VStack w=\"100%\" spacing=\"1rem\">\r\n      <Heading\r\n        fontWeight=\"normal\"\r\n        mb=\"1rem\"\r\n        textTransform=\"uppercase\"\r\n        textAlign=\"center\"\r\n      >\r\n        Withdraw Funds\r\n      </Heading>\r\n      <Text textAlign=\"center\" fontSize=\"sm\" mb=\"1rem\">\r\n        Follow the instructions in your wallet to withdraw remaining funds from\r\n        the escrow.\r\n      </Text>\r\n      <VStack my=\"2rem\" px=\"5rem\" py=\"1rem\" bg=\"black\" borderRadius=\"0.5rem\">\r\n        <Text color=\"red.500\" fontSize=\"0.875rem\" textAlign=\"center\">\r\n          Amount To Be Withdrawn\r\n        </Text>\r\n        <Text\r\n          color=\"white\"\r\n          fontSize=\"1rem\"\r\n          fontWeight=\"bold\"\r\n          textAlign=\"center\"\r\n        >{`${utils.formatUnits(balance, decimals)} ${symbol}`}</Text>\r\n      </VStack>\r\n      {transaction && (\r\n        <Text color=\"white\" textAlign=\"center\" fontSize=\"sm\">\r\n          Follow your transaction{' '}\r\n          <Link\r\n            href={getTxLink(chainId, transaction.hash)}\r\n            isExternal\r\n            color=\"red.500\"\r\n            textDecoration=\"underline\"\r\n          >\r\n            here\r\n          </Link>\r\n        </Text>\r\n      )}\r\n      <Button\r\n        onClick={close}\r\n        variant=\"outline\"\r\n        colorScheme=\"red\"\r\n        textTransform=\"uppercase\"\r\n        size={buttonSize}\r\n        fontFamily=\"mono\"\r\n        fontWeight=\"normal\"\r\n        w=\"100%\"\r\n      >\r\n        Close\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  Heading,\r\n  HStack,\r\n  Link,\r\n  Modal,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalOverlay,\r\n  SimpleGrid,\r\n  Stack,\r\n  Text,\r\n  Tooltip,\r\n  useBreakpointValue,\r\n  VStack,\r\n  Wrap,\r\n  WrapItem,\r\n} from '@chakra-ui/react';\r\nimport { BigNumber, utils } from 'ethers';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { DepositFunds } from '../components/DepositFunds';\r\nimport { Loader } from '../components/Loader';\r\nimport { LockFunds } from '../components/LockFunds';\r\nimport { ReleaseFunds } from '../components/ReleaseFunds';\r\nimport { ResolveFunds } from '../components/ResolveFunds';\r\nimport { WithdrawFunds } from '../components/WithdrawFunds';\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { getInvoice } from '../graphql/getInvoice';\r\nimport { CopyIcon } from '../icons/CopyIcon';\r\nimport { QuestionIcon } from '../icons/QuestionIcon';\r\nimport { AccountLink } from '../shared/AccountLink';\r\nimport { Container } from '../shared/Container';\r\nimport { InvoiceNotFound } from '../shared/InvoiceNotFound';\r\nimport { balanceOf } from '../utils/erc20';\r\nimport {\r\n  copyToClipboard,\r\n  getAccountString,\r\n  getAddressLink,\r\n  getDateString,\r\n  getIpfsLink,\r\n  getTokenInfo,\r\n  getTxLink,\r\n  logError,\r\n} from '../utils/helpers';\r\n\r\nexport const ViewInvoice = ({\r\n  match: {\r\n    params: { hexChainId, invoiceId },\r\n  },\r\n}) => {\r\n  const { chainId, account, provider: ethersProvider } = useContext(\r\n    Web3Context,\r\n  );\r\n  const [invoice, setInvoice] = useState();\r\n  const [balanceLoading, setBalanceLoading] = useState(true);\r\n  const [balance, setBalance] = useState(BigNumber.from(0));\r\n  const [modal, setModal] = useState(false);\r\n  const [selected, setSelected] = useState(0);\r\n  const invoiceChainId = parseInt(hexChainId, 16);\r\n\r\n  useEffect(() => {\r\n    if (utils.isAddress(invoiceId) && !Number.isNaN(invoiceChainId)) {\r\n      getInvoice(invoiceChainId, invoiceId).then(i => setInvoice(i));\r\n    }\r\n  }, [invoiceChainId, invoiceId]);\r\n  \r\n  useEffect(() => {\r\n    if (invoice && ethersProvider && chainId === invoiceChainId) {\r\n      setBalanceLoading(true);\r\n      balanceOf(ethersProvider, invoice.token, invoice.address)\r\n        .then(b => {\r\n          setBalance(b);\r\n          setBalanceLoading(false);\r\n        })\r\n        .catch(balanceError => logError({ balanceError }));\r\n    }\r\n  }, [invoice, ethersProvider, chainId, invoiceChainId]);\r\n\r\n  const leftMinW = useBreakpointValue({ base: '10rem', sm: '20rem' });\r\n  const leftMaxW = useBreakpointValue({ base: '30rem', lg: '22rem' });\r\n  const rightMaxW = useBreakpointValue({ base: '100%', md: '40rem' });\r\n  const buttonSize = useBreakpointValue({ base: 'md', lg: 'lg' });\r\n  const smallScreen = useBreakpointValue({ base: true, sm: false });\r\n\r\n  if (!utils.isAddress(invoiceId) || invoice === null) {\r\n    return <InvoiceNotFound />;\r\n  }\r\n\r\n  if (invoice && chainId !== invoiceChainId) {\r\n    return (\r\n      <InvoiceNotFound chainId={invoiceChainId} heading=\"Incorrect Network\" />\r\n    );\r\n  }\r\n\r\n  if (!invoice || balanceLoading) {\r\n    return (\r\n      <Container overlay>\r\n        <Loader size=\"80\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const {\r\n    projectName,\r\n    projectDescription,\r\n    projectAgreement,\r\n    startDate,\r\n    endDate,\r\n    terminationTime,\r\n    client,\r\n    provider,\r\n    resolver,\r\n    currentMilestone,\r\n    amounts,\r\n    total,\r\n    token,\r\n    released,\r\n    isLocked,\r\n    deposits,\r\n    releases,\r\n    disputes,\r\n    resolutions,\r\n  } = invoice;\r\n\r\n  const isClient = account.toLowerCase() === client;\r\n  const isResolver = account.toLowerCase() === resolver.toLowerCase();\r\n  const { decimals, symbol } = getTokenInfo(invoiceChainId, token);\r\n  const deposited = BigNumber.from(released).add(balance);\r\n  const due = deposited.gte(total)\r\n    ? BigNumber.from(0)\r\n    : BigNumber.from(total).sub(deposited);\r\n  const isExpired = terminationTime <= new Date().getTime() / 1000;\r\n\r\n  const amount = BigNumber.from(\r\n    currentMilestone < amounts.length ? amounts[currentMilestone] : 0,\r\n  );\r\n  const isReleasable = !isLocked && balance.gte(amount) && balance.gt(0);\r\n  const isLockable = !isExpired && !isLocked && balance.gt(0);\r\n  const dispute =\r\n    isLocked && disputes.length > 0 ? disputes[disputes.length - 1] : undefined;\r\n  const resolution =\r\n    !isLocked && resolutions.length > 0\r\n      ? resolutions[resolutions.length - 1]\r\n      : undefined;\r\n\r\n  const onLock = () => {\r\n    setSelected(0);\r\n    setModal(true);\r\n  };\r\n\r\n  const onDeposit = () => {\r\n    setSelected(1);\r\n    setModal(true);\r\n  };\r\n\r\n  const onRelease = async () => {\r\n    if (isReleasable && isClient) {\r\n      setSelected(2);\r\n      setModal(true);\r\n    }\r\n  };\r\n\r\n  const onResolve = async () => {\r\n    if (isResolver) {\r\n      setSelected(3);\r\n      setModal(true);\r\n    }\r\n  };\r\n\r\n  const onWithdraw = async () => {\r\n    if (isExpired && isClient) {\r\n      setSelected(4);\r\n      setModal(true);\r\n    }\r\n  };\r\n\r\n  let gridColumns;\r\n  if (isReleasable && (isLockable || (isExpired && balance.gt(0)))) {\r\n    gridColumns = { base: 2, sm: 3 };\r\n  } else if (isLockable || isReleasable || (isExpired && balance.gt(0))) {\r\n    gridColumns = 2;\r\n  } else {\r\n    gridColumns = 1;\r\n  }\r\n\r\n  let sum = BigNumber.from(0);\r\n  return (\r\n    <Container overlay>\r\n      <Stack\r\n        spacing=\"2rem\"\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        direction={{ base: 'column', lg: 'row' }}\r\n        w=\"100%\"\r\n        px=\"1rem\"\r\n        py=\"8rem\"\r\n      >\r\n        <Stack\r\n          spacing=\"1rem\"\r\n          minW={leftMinW}\r\n          w=\"100%\"\r\n          maxW={leftMaxW}\r\n          justify=\"center\"\r\n          align=\"stretch\"\r\n          direction=\"column\"\r\n        >\r\n          <VStack align=\"stretch\" justify=\"center\">\r\n            <Heading fontWeight=\"normal\" fontSize=\"2xl\">\r\n              {projectName}\r\n            </Heading>\r\n            <Flex align=\"center\" color=\"white\">\r\n              <Link\r\n                href={getAddressLink(invoiceChainId, invoiceId.toLowerCase())}\r\n                isExternal\r\n              >\r\n                {getAccountString(invoiceId)}\r\n              </Link>\r\n              {document.queryCommandSupported('copy') && (\r\n                <Button\r\n                  ml={4}\r\n                  onClick={() => copyToClipboard(invoiceId.toLowerCase())}\r\n                  variant=\"ghost\"\r\n                  colorScheme=\"red\"\r\n                  h=\"auto\"\r\n                  w=\"auto\"\r\n                  minW=\"2\"\r\n                  p={2}\r\n                >\r\n                  <CopyIcon boxSize={4} />\r\n                </Button>\r\n              )}\r\n            </Flex>\r\n            {projectDescription && (\r\n              <Text color=\"white\">{projectDescription}</Text>\r\n            )}\r\n            <Link\r\n              href={projectAgreement}\r\n              isExternal\r\n              textDecor=\"underline\"\r\n              color=\"white\"\r\n            >\r\n              Details of Agreement\r\n            </Link>\r\n          </VStack>\r\n          <VStack fontSize=\"sm\" color=\"grey\" align=\"stretch\" justify=\"center\">\r\n            {startDate && (\r\n              <Wrap>\r\n                <WrapItem>\r\n                  <Text>{'Project Start Date: '}</Text>\r\n                </WrapItem>\r\n                <WrapItem>\r\n                  <Text fontWeight=\"bold\">{getDateString(startDate)}</Text>\r\n                </WrapItem>\r\n              </Wrap>\r\n            )}\r\n            {endDate && (\r\n              <Wrap>\r\n                <WrapItem>\r\n                  <Text>{'Project End Date: '}</Text>\r\n                </WrapItem>\r\n                <WrapItem>\r\n                  <Text fontWeight=\"bold\">{getDateString(endDate)}</Text>\r\n                </WrapItem>\r\n              </Wrap>\r\n            )}\r\n            <Wrap>\r\n              <WrapItem>\r\n                <Text>{'Safety Valve Withdrawal Date: '}</Text>\r\n              </WrapItem>\r\n              <WrapItem>\r\n                <Text fontWeight=\"bold\">{getDateString(terminationTime)}</Text>\r\n                <Tooltip\r\n                  label={`The Safety Valve gets activated on ${new Date(\r\n                    terminationTime * 1000,\r\n                  ).toUTCString()}`}\r\n                  placement=\"auto-start\"\r\n                >\r\n                  <QuestionIcon ml=\"1rem\" boxSize=\"0.75rem\" color=\"red.500\" />\r\n                </Tooltip>\r\n              </WrapItem>\r\n            </Wrap>\r\n            <Wrap>\r\n              <WrapItem>\r\n                <Text>{'Client Account: '}</Text>\r\n              </WrapItem>\r\n              <WrapItem fontWeight=\"bold\">\r\n                <AccountLink address={client} chainId={invoiceChainId} />\r\n              </WrapItem>\r\n            </Wrap>\r\n            <Wrap>\r\n              <WrapItem>\r\n                <Text>{'Provider Account: '}</Text>\r\n              </WrapItem>\r\n              <WrapItem fontWeight=\"bold\">\r\n                <AccountLink address={provider} chainId={invoiceChainId} />\r\n              </WrapItem>\r\n            </Wrap>\r\n            <Wrap>\r\n              <WrapItem>\r\n                <Text>{'Arbitration Provider: '}</Text>\r\n              </WrapItem>\r\n              <WrapItem fontWeight=\"bold\">\r\n                <AccountLink address={resolver} chainId={invoiceChainId} />\r\n              </WrapItem>\r\n            </Wrap>\r\n          </VStack>\r\n        </Stack>\r\n        <VStack\r\n          spacing={{ base: '2rem', lg: '1.5rem' }}\r\n          w=\"100%\"\r\n          align=\"stretch\"\r\n          maxW={rightMaxW}\r\n        >\r\n          <Flex\r\n            bg=\"background\"\r\n            direction=\"column\"\r\n            justify=\"space-between\"\r\n            px={{ base: '1rem', md: '2rem' }}\r\n            py=\"1.5rem\"\r\n            borderRadius=\"0.5rem\"\r\n            w=\"100%\"\r\n            color=\"white\"\r\n          >\r\n            <Flex\r\n              justify=\"space-between\"\r\n              align=\"center\"\r\n              fontWeight=\"bold\"\r\n              fontSize=\"lg\"\r\n              mb=\"1rem\"\r\n            >\r\n              <Text>\r\n                {smallScreen ? 'Total Amount' : 'Total Project Amount'}\r\n              </Text>\r\n              <Text>{`${utils.formatUnits(total, decimals)} ${symbol}`}</Text>\r\n            </Flex>\r\n            <VStack\r\n              pl={{ base: '0.5rem', md: '1rem' }}\r\n              align=\"stretch\"\r\n              spacing=\"0.25rem\"\r\n            >\r\n              {amounts.map((amt, index) => {\r\n                let tot = BigNumber.from(0);\r\n                let ind = -1;\r\n                let full = false;\r\n                if (deposits.length > 0) {\r\n                  for (let i = 0; i < deposits.length; i += 1) {\r\n                    tot = tot.add(deposits[i].amount);\r\n                    if (tot.gt(sum)) {\r\n                      ind = i;\r\n                      if (tot.sub(sum).gte(amt)) {\r\n                        full = true;\r\n                        break;\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                sum = sum.add(amt);\r\n\r\n                return (\r\n                  <Flex\r\n                    key={index.toString()}\r\n                    justify=\"space-between\"\r\n                    align={{ base: 'stretch', sm: 'center' }}\r\n                    direction={{ base: 'column', sm: 'row' }}\r\n                  >\r\n                    <Text>Payment Milestone #{index + 1}</Text>\r\n                    <HStack\r\n                      spacing={{ base: '0.5rem', md: '1rem' }}\r\n                      align=\"center\"\r\n                      justify=\"flex-end\"\r\n                      ml={{ base: '0.5rem', md: '1rem' }}\r\n                    >\r\n                      {index < currentMilestone && releases.length > index && (\r\n                        <Link\r\n                          fontSize=\"xs\"\r\n                          isExternal\r\n                          color=\"grey\"\r\n                          fontStyle=\"italic\"\r\n                          href={getTxLink(\r\n                            invoiceChainId,\r\n                            releases[index].txHash,\r\n                          )}\r\n                        >\r\n                          Released{' '}\r\n                          {new Date(\r\n                            releases[index].timestamp * 1000,\r\n                          ).toLocaleDateString()}\r\n                        </Link>\r\n                      )}\r\n                      {!(index < currentMilestone && releases.length > index) &&\r\n                        ind !== -1 && (\r\n                          <Link\r\n                            fontSize=\"xs\"\r\n                            isExternal\r\n                            color=\"grey\"\r\n                            fontStyle=\"italic\"\r\n                            href={getTxLink(\r\n                              invoiceChainId,\r\n                              deposits[ind].txHash,\r\n                            )}\r\n                          >\r\n                            {full ? '' : 'Partially '}Deposited{' '}\r\n                            {new Date(\r\n                              deposits[ind].timestamp * 1000,\r\n                            ).toLocaleDateString()}\r\n                          </Link>\r\n                        )}\r\n                      <Text\r\n                        textAlign=\"right\"\r\n                        fontWeight=\"500\"\r\n                      >{`${utils.formatUnits(amt, decimals)} ${symbol}`}</Text>\r\n                    </HStack>\r\n                  </Flex>\r\n                );\r\n              })}\r\n            </VStack>\r\n            <Divider\r\n              w={{ base: 'calc(100% + 2rem)', md: 'calc(100% + 4rem)' }}\r\n              ml={{ base: '-1rem', md: '-2rem' }}\r\n              my=\"1rem\"\r\n            />\r\n            <VStack\r\n              pl={{ base: '0.5rem', md: '1rem' }}\r\n              align=\"stretch\"\r\n              spacing=\"0.25rem\"\r\n            >\r\n              <Flex justify=\"space-between\" align=\"center\">\r\n                <Text>{smallScreen ? '' : 'Total '}Deposited</Text>\r\n                <Text fontWeight=\"500\" textAlign=\"right\">{`${utils.formatUnits(\r\n                  deposited,\r\n                  decimals,\r\n                )} ${symbol}`}</Text>\r\n              </Flex>\r\n              <Flex justify=\"space-between\" align=\"center\">\r\n                <Text>{smallScreen ? '' : 'Total '}Released</Text>\r\n                <Text fontWeight=\"500\" textAlign=\"right\">{`${utils.formatUnits(\r\n                  released,\r\n                  decimals,\r\n                )} ${symbol}`}</Text>\r\n              </Flex>\r\n              <Flex\r\n                justify=\"space-between\"\r\n                align=\"center\"\r\n                textDecor={\r\n                  dispute || resolution || isExpired\r\n                    ? 'line-through'\r\n                    : undefined\r\n                }\r\n              >\r\n                <Text>Remaining{smallScreen ? '' : ' Amount Due'}</Text>\r\n                <Text fontWeight=\"500\" textAlign=\"right\">{`${utils.formatUnits(\r\n                  due,\r\n                  decimals,\r\n                )} ${symbol}`}</Text>\r\n              </Flex>\r\n            </VStack>\r\n            <Divider\r\n              w={{ base: 'calc(100% + 2rem)', md: 'calc(100% + 4rem)' }}\r\n              ml={{ base: '-1rem', md: '-2rem' }}\r\n              my=\"1rem\"\r\n            />\r\n            {!dispute && !resolution && (\r\n              <Flex\r\n                justify=\"space-between\"\r\n                align=\"center\"\r\n                color=\"red.500\"\r\n                fontWeight=\"bold\"\r\n                fontSize=\"lg\"\r\n              >\r\n                {isExpired || (due.eq(0) && !isReleasable) ? (\r\n                  <>\r\n                    <Text>Remaining Balance</Text>\r\n                    <Text textAlign=\"right\">{`${utils.formatUnits(\r\n                      balance,\r\n                      decimals,\r\n                    )} ${symbol}`}</Text>{' '}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Text>\r\n                      {isReleasable &&\r\n                        (smallScreen\r\n                          ? 'Next Release'\r\n                          : 'Next Amount to Release')}\r\n                      {!isReleasable &&\r\n                        (smallScreen ? 'Due Today' : 'Total Due Today')}\r\n                    </Text>\r\n                    <Text textAlign=\"right\">{`${utils.formatUnits(\r\n                      isReleasable ? amount : amount.sub(balance),\r\n                      decimals,\r\n                    )} ${symbol}`}</Text>\r\n                  </>\r\n                )}\r\n              </Flex>\r\n            )}\r\n            {dispute && (\r\n              <VStack w=\"100%\" align=\"stretch\" spacing=\"1rem\" color=\"red.500\">\r\n                <Flex\r\n                  justify=\"space-between\"\r\n                  align=\"center\"\r\n                  fontWeight=\"bold\"\r\n                  fontSize=\"lg\"\r\n                >\r\n                  <Text>Amount Locked</Text>\r\n                  <Text textAlign=\"right\">{`${utils.formatUnits(\r\n                    balance,\r\n                    decimals,\r\n                  )} ${symbol}`}</Text>\r\n                </Flex>\r\n                <Text>\r\n                  {`A dispute is in progress with `}\r\n                  <AccountLink address={resolver} chainId={invoiceChainId} />\r\n                  <br />\r\n                  <Link href={getIpfsLink(dispute.ipfsHash)} isExternal>\r\n                    <u>View details on IPFS</u>\r\n                  </Link>\r\n                  <br />\r\n                  <Link\r\n                    href={getTxLink(invoiceChainId, dispute.txHash)}\r\n                    isExternal\r\n                  >\r\n                    <u>View transaction</u>\r\n                  </Link>\r\n                </Text>\r\n              </VStack>\r\n            )}\r\n            {resolution && (\r\n              <VStack w=\"100%\" align=\"stretch\" spacing=\"1rem\" color=\"red.500\">\r\n                <Flex\r\n                  justify=\"space-between\"\r\n                  align=\"center\"\r\n                  fontWeight=\"bold\"\r\n                  fontSize=\"lg\"\r\n                >\r\n                  <Text>Amount Dispersed</Text>\r\n                  <Text textAlign=\"right\">{`${utils.formatUnits(\r\n                    BigNumber.from(resolution.clientAward)\r\n                      .add(resolution.providerAward)\r\n                      .add(\r\n                        resolution.resolutionFee ? resolution.resolutionFee : 0,\r\n                      ),\r\n                    decimals,\r\n                  )} ${symbol}`}</Text>\r\n                </Flex>\r\n                <Flex\r\n                  justify=\"space-between\"\r\n                  direction={{ base: 'column', sm: 'row' }}\r\n                >\r\n                  <Flex flex={1}>\r\n                    <Text textAlign={{ base: 'center', sm: 'left' }}>\r\n                      <AccountLink\r\n                        address={resolver}\r\n                        chainId={invoiceChainId}\r\n                      />\r\n                      {\r\n                        ' has resolved the dispute and dispersed remaining funds'\r\n                      }\r\n                      <br />\r\n                      <Link href={getIpfsLink(resolution.ipfsHash)} isExternal>\r\n                        <u>View details on IPFS</u>\r\n                      </Link>\r\n                      <br />\r\n                      <Link\r\n                        href={getTxLink(invoiceChainId, resolution.txHash)}\r\n                        isExternal\r\n                      >\r\n                        <u>View transaction</u>\r\n                      </Link>\r\n                    </Text>\r\n                  </Flex>\r\n                  <VStack\r\n                    spacing=\"0.5rem\"\r\n                    mt={{ base: '1rem', sm: '0' }}\r\n                    align={{ base: 'center', sm: 'stretch' }}\r\n                  >\r\n                    {resolution.resolutionFee && (\r\n                      <Text textAlign=\"right\">\r\n                        {`${utils.formatUnits(\r\n                          BigNumber.from(resolution.resolutionFee),\r\n                          decimals,\r\n                        )} ${symbol} to `}\r\n                        <AccountLink\r\n                          address={resolver}\r\n                          chainId={invoiceChainId}\r\n                        />\r\n                      </Text>\r\n                    )}\r\n                    <Text textAlign=\"right\">\r\n                      {`${utils.formatUnits(\r\n                        BigNumber.from(resolution.clientAward),\r\n                        decimals,\r\n                      )} ${symbol} to `}\r\n                      <AccountLink address={client} chainId={invoiceChainId} />\r\n                    </Text>\r\n                    <Text textAlign=\"right\">\r\n                      {`${utils.formatUnits(\r\n                        BigNumber.from(resolution.providerAward),\r\n                        decimals,\r\n                      )} ${symbol} to `}\r\n                      <AccountLink\r\n                        address={provider}\r\n                        chainId={invoiceChainId}\r\n                      />\r\n                    </Text>\r\n                  </VStack>\r\n                </Flex>\r\n              </VStack>\r\n            )}\r\n          </Flex>\r\n          {isResolver && (\r\n            <SimpleGrid columns={1} spacing=\"1rem\" w=\"100%\">\r\n              {isLocked ? (\r\n                <Button\r\n                  size={buttonSize}\r\n                  colorScheme=\"red\"\r\n                  fontWeight=\"normal\"\r\n                  fontFamily=\"mono\"\r\n                  textTransform=\"uppercase\"\r\n                  onClick={() => onResolve()}\r\n                >\r\n                  Resolve\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  size={buttonSize}\r\n                  colorScheme=\"red\"\r\n                  fontWeight=\"normal\"\r\n                  fontFamily=\"mono\"\r\n                  textTransform=\"uppercase\"\r\n                  onClick={() => onDeposit()}\r\n                >\r\n                  Deposit\r\n                </Button>\r\n              )}\r\n            </SimpleGrid>\r\n          )}\r\n          {!dispute && !resolution && !isResolver && isClient && (\r\n            <SimpleGrid columns={gridColumns} spacing=\"1rem\" w=\"100%\">\r\n              {isLockable && (\r\n                <Button\r\n                  size={buttonSize}\r\n                  variant=\"outline\"\r\n                  colorScheme=\"red\"\r\n                  fontFamily=\"mono\"\r\n                  fontWeight=\"normal\"\r\n                  textTransform=\"uppercase\"\r\n                  onClick={() => onLock()}\r\n                >\r\n                  Lock\r\n                </Button>\r\n              )}\r\n              {isExpired && balance.gt(0) && (\r\n                <Button\r\n                  size={buttonSize}\r\n                  variant=\"outline\"\r\n                  colorScheme=\"red\"\r\n                  fontFamily=\"mono\"\r\n                  fontWeight=\"normal\"\r\n                  textTransform=\"uppercase\"\r\n                  onClick={() => onWithdraw()}\r\n                >\r\n                  Withdraw\r\n                </Button>\r\n              )}\r\n              {isReleasable && (\r\n                <Button\r\n                  size={buttonSize}\r\n                  variant=\"outline\"\r\n                  colorScheme=\"red\"\r\n                  fontWeight=\"normal\"\r\n                  fontFamily=\"mono\"\r\n                  textTransform=\"uppercase\"\r\n                  onClick={() => onDeposit()}\r\n                >\r\n                  Deposit\r\n                </Button>\r\n              )}\r\n              <Button\r\n                size={buttonSize}\r\n                gridArea={{\r\n                  base: Number.isInteger(gridColumns)\r\n                    ? 'auto/auto/auto/auto'\r\n                    : '2/1/2/span 2',\r\n                  sm: 'auto/auto/auto/auto',\r\n                }}\r\n                colorScheme=\"red\"\r\n                fontWeight=\"normal\"\r\n                fontFamily=\"mono\"\r\n                textTransform=\"uppercase\"\r\n                onClick={() => (isReleasable ? onRelease() : onDeposit())}\r\n              >\r\n                {isReleasable ? 'Release' : 'Deposit'}\r\n              </Button>\r\n            </SimpleGrid>\r\n          )}\r\n          {!dispute && !resolution && !isResolver && !isClient && (\r\n            <SimpleGrid columns={isLockable ? 2 : 1} spacing=\"1rem\" w=\"100%\">\r\n              {isLockable && (\r\n                <Button\r\n                  size={buttonSize}\r\n                  variant=\"outline\"\r\n                  colorScheme=\"red\"\r\n                  fontFamily=\"mono\"\r\n                  fontWeight=\"normal\"\r\n                  textTransform=\"uppercase\"\r\n                  onClick={() => onLock()}\r\n                >\r\n                  Lock\r\n                </Button>\r\n              )}\r\n              <Button\r\n                size={buttonSize}\r\n                colorScheme=\"red\"\r\n                fontWeight=\"normal\"\r\n                fontFamily=\"mono\"\r\n                textTransform=\"uppercase\"\r\n                onClick={() => onDeposit()}\r\n              >\r\n                Deposit\r\n              </Button>\r\n            </SimpleGrid>\r\n          )}\r\n        </VStack>\r\n        <Modal isOpen={modal} onClose={() => setModal(false)} isCentered>\r\n          <ModalOverlay>\r\n            <ModalContent\r\n              p=\"2rem\"\r\n              maxW=\"40rem\"\r\n              background=\"background\"\r\n              borderRadius=\"0.5rem\"\r\n              color=\"white\"\r\n            >\r\n              <ModalCloseButton\r\n                _hover={{ bgColor: 'white20' }}\r\n                top=\"0.5rem\"\r\n                right=\"0.5rem\"\r\n              />\r\n              {modal && selected === 0 && (\r\n                <LockFunds\r\n                  invoice={invoice}\r\n                  balance={balance}\r\n                  close={() => setModal(false)}\r\n                />\r\n              )}\r\n              {modal && selected === 1 && (\r\n                <DepositFunds\r\n                  invoice={invoice}\r\n                  deposited={deposited}\r\n                  due={due}\r\n                  close={() => setModal(false)}\r\n                />\r\n              )}\r\n              {modal && selected === 2 && (\r\n                <ReleaseFunds\r\n                  invoice={invoice}\r\n                  balance={balance}\r\n                  close={() => setModal(false)}\r\n                />\r\n              )}\r\n              {modal && selected === 3 && (\r\n                <ResolveFunds\r\n                  invoice={invoice}\r\n                  balance={balance}\r\n                  close={() => setModal(false)}\r\n                />\r\n              )}\r\n              {modal && selected === 4 && (\r\n                <WithdrawFunds\r\n                  invoice={invoice}\r\n                  balance={balance}\r\n                  close={() => setModal(false)}\r\n                />\r\n              )}\r\n            </ModalContent>\r\n          </ModalOverlay>\r\n        </Modal>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/space.033a5db6.png\";","import { Button, Flex, Text } from '@chakra-ui/react';\r\nimport React, { useContext } from 'react';\r\n\r\nimport { Loader } from '../components/Loader';\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { WalletFilledIcon } from '../icons/WalletFilledIcon';\r\nimport { SUPPORTED_NETWORKS } from '../utils/constants';\r\nimport { getNetworkName, logError } from '../utils/helpers';\r\nimport { Container } from './Container';\r\n\r\nexport const ConnectWeb3 = () => {\r\n  const { connectAccount, loading, account, disconnect } = useContext(\r\n    Web3Context,\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container>\r\n        <Loader size=\"80\" />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const onClick = async () => {\r\n    try {\r\n      await connectAccount();\r\n    } catch {\r\n      logError(\"Couldn't connect web3 wallet\");\r\n    }\r\n  };\r\n\r\n  const NETWORK_NAMES = SUPPORTED_NETWORKS.map(getNetworkName).join(' or ');\r\n  return (\r\n    <Container>\r\n      <Flex\r\n        background=\"background\"\r\n        borderRadius=\"1rem\"\r\n        direction=\"column\"\r\n        align=\"center\"\r\n        w=\"calc(100% - 2rem)\"\r\n        p=\"2rem\"\r\n        maxW=\"27.5rem\"\r\n        mx={4}\r\n        color=\"white\"\r\n      >\r\n        <Flex\r\n          bg=\"red.500\"\r\n          borderRadius=\"50%\"\r\n          p=\"1rem\"\r\n          justify=\"center\"\r\n          align=\"center\"\r\n          color=\"white\"\r\n          mb={4}\r\n        >\r\n          <WalletFilledIcon boxSize=\"1.75rem\" />\r\n        </Flex>\r\n        {loading ? (\r\n          <Text fontSize=\"2xl\" fontFamily=\"heading\" mb={4}>\r\n            Connecting Wallet\r\n          </Text>\r\n        ) : (\r\n          <>\r\n            <Text fontSize=\"2xl\" fontFamily=\"heading\" mb={4}>\r\n              {account ? `Network not supported` : 'Connect Wallet'}\r\n            </Text>\r\n            <Text color=\"greyText\" mb={4} textAlign=\"center\">\r\n              {account\r\n                ? `Please switch to ${NETWORK_NAMES}`\r\n                : 'To get started, connect your wallet'}\r\n            </Text>\r\n          </>\r\n        )}\r\n        {account && !loading ? (\r\n          <Button\r\n            onClick={disconnect}\r\n            colorScheme=\"red\"\r\n            px={12}\r\n            fontFamily=\"mono\"\r\n            fontWeight=\"normal\"\r\n          >\r\n            Disconnect\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={onClick}\r\n            colorScheme=\"red\"\r\n            px={12}\r\n            isLoading={loading}\r\n            fontFamily=\"mono\"\r\n            fontWeight=\"normal\"\r\n          >\r\n            Connect\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n    </Container>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/sharingan.af455048.png\";","import { Flex, Image, Link } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nimport Sharingan from '../assets/sharingan.png';\r\n\r\nexport const Footer = ({ center }) => {\r\n  return (\r\n    <Flex\r\n      position=\"absolute\"\r\n      bottom=\"0\"\r\n      right=\"0\"\r\n      w=\"100%\"\r\n      h=\"5rem\"\r\n      py=\"1rem\"\r\n      px=\"3rem\"\r\n      align=\"center\"\r\n      justify={center ? 'center' : { base: 'center', lg: 'flex-end' }}\r\n    >\r\n    </Flex>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.a880e77e.svg\";","import { createIcon } from '@chakra-ui/icon';\r\nimport * as React from 'react';\r\n\r\nexport const HamburgerIcon = createIcon({\r\n  displayName: 'HamburgerIcon',\r\n  path: (\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\r\n    />\r\n  ),\r\n  viewBox: '0 0 448 512',\r\n});\r\n","import {\r\n  Button,\r\n  Flex,\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n  Tag,\r\n  Text,\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nimport { theme } from '../theme';\r\nimport { getAccountString, getNetworkLabel } from '../utils/helpers';\r\n\r\nexport const ProfileButton = ({ profile, account, chainId, disconnect }) => {\r\n  return (\r\n    <Flex\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      mx={{ base: '2rem', sm: '3rem' }}\r\n      zIndex={7}\r\n      height=\"8rem\"\r\n      position=\"absolute\"\r\n      top=\"0\"\r\n      left=\"0\"\r\n    >\r\n      <Popover>\r\n        <PopoverTrigger>\r\n          <Button\r\n            h=\"auto\"\r\n            fontWeight=\"normal\"\r\n            borderRadius=\"full\"\r\n            variant=\"ghost\"\r\n            colorScheme=\"red\"\r\n            fontFamily=\"mono\"\r\n            p=\"2\"\r\n          >\r\n            <Flex\r\n              borderRadius=\"50%\"\r\n              w=\"2.5rem\"\r\n              h=\"2.5rem\"\r\n              overflow=\"hidden\"\r\n              justify=\"center\"\r\n              align=\"center\"\r\n              bgColor=\"black\"\r\n              bgImage={profile && `url(${profile.imageUrl})`}\r\n              border={`1px solid ${theme.colors.white20}`}\r\n              bgSize=\"cover\"\r\n              bgRepeat=\"no-repeat\"\r\n              bgPosition=\"center center\"\r\n            />\r\n            <Text\r\n              px={2}\r\n              display=\"flex\"\r\n              fontFamily=\"'Roboto Mono', monospace;\"\r\n              color=\"red.500\"\r\n            >\r\n              {profile && profile.name\r\n                ? profile.name\r\n                : getAccountString(account)}\r\n            </Text>\r\n            <Tag colorScheme=\"red\" size=\"sm\">\r\n              {getNetworkLabel(chainId)}\r\n            </Tag>\r\n          </Button>\r\n        </PopoverTrigger>\r\n        <PopoverContent bg=\"none\" w=\"auto\">\r\n          <Button\r\n            onClick={() => {\r\n              disconnect();\r\n            }}\r\n            colorScheme=\"red\"\r\n            fontWeight=\"normal\"\r\n            fontFamily=\"mono\"\r\n            textTransform=\"uppercase\"\r\n          >\r\n            Disconnect\r\n          </Button>\r\n        </PopoverContent>\r\n      </Popover>\r\n    </Flex>\r\n  );\r\n};\r\n","import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Image,\r\n  Link as ChakraLink,\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n  Tag,\r\n  Text,\r\n  useBreakpointValue,\r\n} from '@chakra-ui/react';\r\nimport styled from '@emotion/styled';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\n\r\nimport LogoText from '../assets/logo.svg';\r\nimport Logo from '../assets/sharingan.png';\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { HamburgerIcon } from '../icons/HamburgerIcon';\r\nimport { theme } from '../theme';\r\nimport { getProfile } from '../utils/3box';\r\nimport { getAccountString, getNetworkLabel } from '../utils/helpers';\r\nimport { Footer } from './Footer';\r\nimport { ProfileButton } from './ProfileButton';\r\n\r\nconst StyledButton = styled(Button)`\r\n  &::after {\r\n    box-sizing: inherit;\r\n    transition: all ease-in-out 0.2s;\r\n    background: none repeat scroll 0 0 ${theme.colors.red[500]};\r\n    content: '';\r\n    display: block;\r\n    height: 2px;\r\n    width: 0;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n    ::after {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NavButton = ({ onClick, children }) => (\r\n  <StyledButton\r\n    onClick={onClick}\r\n    transition=\"all 0.5s ease 0.4s\"\r\n    my=\"1rem\"\r\n    variant=\"link\"\r\n    color=\"red.500\"\r\n    fontWeight=\"normal\"\r\n    fontSize=\"1.5rem\"\r\n  >\r\n    {children}\r\n  </StyledButton>\r\n);\r\n\r\nexport const Header = () => {\r\n  const { account, disconnect, chainId } = useContext(Web3Context);\r\n  const [isOpen, onOpen] = useState(false);\r\n  const history = useHistory();\r\n  const [profile, setProfile] = useState();\r\n  useEffect(() => {\r\n    if (account) {\r\n      getProfile(account).then(p => setProfile(p));\r\n    }\r\n  }, [account]);\r\n  const buttonVariant = useBreakpointValue({\r\n    base: isOpen ? 'ghost' : 'link',\r\n    md: 'ghost',\r\n  });\r\n  return (\r\n    <Flex\r\n      w=\"100%\"\r\n      h=\"8rem\"\r\n      color=\"white\"\r\n      fontFamily=\"mono\"\r\n      position=\"absolute\"\r\n      top={0}\r\n      left={0}\r\n      justify=\"space-between\"\r\n      align=\"center\"\r\n    >\r\n      <Box zIndex={5}>\r\n        <RouterLink to=\"/\">\r\n          <Flex align=\"center\" p=\"1rem\" m=\"1rem\">\r\n            <Image\r\n              src={Logo}\r\n              alt=\"Lyght Code\"\r\n              w={{ base: '3rem', sm: '4rem', md: '5rem' }}\r\n            />\r\n            <Image\r\n              src={LogoText}\r\n              alt=\"Smart Invoice\"\r\n              h={{ base: '2rem', sm: '3rem', md: 'auto' }}\r\n            />\r\n          </Flex>\r\n        </RouterLink>\r\n      </Box>\r\n      <Flex\r\n        mx={{ base: '2rem', sm: '3rem' }}\r\n        align=\"center\"\r\n        height=\"8rem\"\r\n        transition=\"width 1s ease-out\"\r\n      >\r\n        {account && (\r\n          <Flex justify=\"center\" align=\"center\" zIndex={5}>\r\n            <Popover>\r\n              <PopoverTrigger>\r\n                <Button\r\n                  h=\"auto\"\r\n                  fontWeight=\"normal\"\r\n                  borderRadius=\"full\"\r\n                  variant={buttonVariant}\r\n                  colorScheme=\"red\"\r\n                  fontFamily=\"mono\"\r\n                  p={{ base: 0, md: 2 }}\r\n                >\r\n                  <Flex\r\n                    borderRadius=\"50%\"\r\n                    w=\"2.5rem\"\r\n                    h=\"2.5rem\"\r\n                    overflow=\"hidden\"\r\n                    justify=\"center\"\r\n                    align=\"center\"\r\n                    bgColor=\"black\"\r\n                    bgImage={profile && `url(${profile.imageUrl})`}\r\n                    border={`1px solid ${theme.colors.white20}`}\r\n                    bgSize=\"cover\"\r\n                    bgRepeat=\"no-repeat\"\r\n                    bgPosition=\"center center\"\r\n                  />\r\n                  <Text\r\n                    px={2}\r\n                    display={{ base: 'none', md: 'flex' }}\r\n                    fontFamily=\"'Roboto Mono', monospace;\"\r\n                    color=\"red.500\"\r\n                  >\r\n                    {profile && profile.name\r\n                      ? profile.name\r\n                      : getAccountString(account)}\r\n                  </Text>\r\n                  <Tag\r\n                    colorScheme=\"red\"\r\n                    display={{ base: 'none', md: 'flex' }}\r\n                    size=\"sm\"\r\n                  >\r\n                    {getNetworkLabel(chainId)}\r\n                  </Tag>\r\n                </Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent bg=\"none\" w=\"auto\" mx=\"4rem\">\r\n                <Button\r\n                  onClick={() => {\r\n                    disconnect();\r\n                  }}\r\n                  colorScheme=\"red\"\r\n                  fontWeight=\"normal\"\r\n                  fontFamily=\"mono\"\r\n                  textTransform=\"uppercase\"\r\n                >\r\n                  Disconnect\r\n                </Button>\r\n              </PopoverContent>\r\n            </Popover>\r\n          </Flex>\r\n        )}\r\n        <Button\r\n          onClick={() => onOpen(o => !o)}\r\n          variant=\"link\"\r\n          ml={{ base: '0.5rem', sm: '1rem' }}\r\n          zIndex={7}\r\n        >\r\n          <HamburgerIcon\r\n            boxSize={{ base: '2rem', sm: '2.75rem' }}\r\n            transition=\"all 1s ease-out\"\r\n            _hover={{\r\n              transition: 'all 1s ease-out',\r\n              transform: 'rotateZ(90deg)',\r\n            }}\r\n            color=\"red.500\"\r\n          />\r\n        </Button>\r\n      </Flex>\r\n      <Flex\r\n        zIndex={6}\r\n        position=\"fixed\"\r\n        left=\"0\"\r\n        top=\"0\"\r\n        bg=\"black\"\r\n        h=\"100%\"\r\n        w=\"100%\"\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        align=\"center\"\r\n        transition=\"all 2s ease-out\"\r\n        pointerEvents={isOpen ? 'all' : 'none'}\r\n        css={{\r\n          clipPath: isOpen\r\n            ? 'circle(calc(100vw + 100vh) at 90% -10%)'\r\n            : 'circle(100px at 90% -20%)',\r\n        }}\r\n      >\r\n        {account && profile && chainId && (\r\n          <ProfileButton\r\n            account={account}\r\n            chainId={chainId}\r\n            profile={profile}\r\n            disconnect={disconnect}\r\n          />\r\n        )}\r\n        <StyledButton\r\n          onClick={() => {\r\n            history.push('/');\r\n            onOpen(false);\r\n          }}\r\n          transition=\"all 0.5s ease 0.4s\"\r\n          my=\"1rem\"\r\n          variant=\"link\"\r\n          color=\"red.500\"\r\n          fontWeight=\"normal\"\r\n          fontSize=\"1.5rem\"\r\n        >\r\n          HOME\r\n        </StyledButton>\r\n        <ChakraLink href=\"https://docs.smartinvoice.xyz\" isExternal _hover={{}}>\r\n          <StyledButton\r\n            as=\"span\"\r\n            transition=\"all 0.5s ease 0.4s\"\r\n            my=\"1rem\"\r\n            variant=\"link\"\r\n            color=\"red.500\"\r\n            fontWeight=\"normal\"\r\n            fontSize=\"1.5rem\"\r\n          >\r\n            FAQ\r\n          </StyledButton>\r\n        </ChakraLink>\r\n        <ChakraLink href=\"https://discord.gg/CanD2WcK7W\" isExternal _hover={{}}>\r\n          <StyledButton\r\n            as=\"span\"\r\n            transition=\"all 0.5s ease 0.4s\"\r\n            my=\"1rem\"\r\n            variant=\"link\"\r\n            color=\"red.500\"\r\n            fontWeight=\"normal\"\r\n            fontSize=\"1.5rem\"\r\n          >\r\n            SUPPORT\r\n          </StyledButton>\r\n        </ChakraLink>\r\n        <Footer center />\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n","import { Flex } from '@chakra-ui/react';\r\nimport React, { useContext } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport BackgroundImage from '../assets/space.png';\r\nimport { Web3Context } from '../context/Web3Context';\r\nimport { SUPPORTED_NETWORKS } from '../utils/constants';\r\nimport { ConnectWeb3 } from './ConnectWeb3';\r\nimport { Footer } from './Footer';\r\nimport { Header } from './Header';\r\n\r\nexport const Layout = ({ children }) => {\r\n  const { chainId } = useContext(Web3Context);\r\n  const location = useLocation();\r\n  const isOpenPath =\r\n    location.pathname === '/' || location.pathname === '/contracts';\r\n  const isValid = SUPPORTED_NETWORKS.indexOf(chainId) !== -1 || isOpenPath;\r\n  return (\r\n    <Flex\r\n      position=\"relative\"\r\n      w=\"100%\"\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      align=\"center\"\r\n      bg=\"black\"\r\n      h=\"100%\"\r\n      minH=\"100vh\"\r\n      overflowX=\"hidden\"\r\n      bgImage={`url(${BackgroundImage})`}\r\n      bgSize=\"cover\"\r\n      color=\"red.500\"\r\n    >\r\n      <Header /> {isValid ? children : <ConnectWeb3 />} <Footer />\r\n    </Flex>\r\n  );\r\n};\r\n","import 'focus-visible/dist/focus-visible';\r\n\r\nimport { ChakraProvider, ColorModeScript, CSSReset } from '@chakra-ui/react';\r\nimport { Global } from '@emotion/react';\r\nimport React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport { ErrorBoundary } from './components/ErrorBoundary';\r\nimport { Web3ContextProvider } from './context/Web3Context';\r\nimport { Contracts } from './pages/Contracts';\r\nimport { CreateInvoice } from './pages/CreateInvoice';\r\nimport { Home } from './pages/Home';\r\nimport { Invoices } from './pages/Invoices';\r\nimport { LockedInvoice } from './pages/LockedInvoice';\r\nimport { ViewInvoice } from './pages/ViewInvoice';\r\nimport { Layout } from './shared/Layout';\r\nimport { globalStyles, theme } from './theme';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\r\n      <CSSReset />\r\n      <Global styles={globalStyles} />\r\n      <ErrorBoundary>\r\n        <Web3ContextProvider>\r\n          <Router>\r\n            <Layout>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/contracts\" component={Contracts} />\r\n                <Route exact path=\"/create\" component={CreateInvoice} />\r\n                <Route exact path=\"/invoices\" component={Invoices} />\r\n                <Route\r\n                  exact\r\n                  path=\"/invoice/:hexChainId/:invoiceId\"\r\n                  component={ViewInvoice}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/invoice/:hexChainId/:invoiceId/locked\"\r\n                  component={LockedInvoice}\r\n                />\r\n                <Redirect to=\"/\" />\r\n              </Switch>\r\n            </Layout>\r\n          </Router>\r\n        </Web3ContextProvider>\r\n      </ErrorBoundary>\r\n    </ChakraProvider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","export default __webpack_public_path__ + \"static/media/lex-dao.2a10df8e.png\";","import LexDAOLogo from './assets/lex-dao.png';\r\n\r\nexport const CONFIG = {\r\n  INFURA_ID: '078f86fe104b4d3fb0838405549b34ce',\r\n  IPFS_ENDPOINT: 'https://ipfs.infura.io',\r\n  BOX_ENDPOINT: 'https://ipfs.3box.io',\r\n  NETWORK_CONFIG: {\r\n    1: {\r\n      SUBGRAPH: 'dan13ram/mainnet-smart-invoices',\r\n      WRAPPED_NATIVE_TOKEN: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'.toLowerCase(),\r\n      INVOICE_FACTORY: '0xb7019c3670f5d4dd99166727a7d29f8a16f4f20a'.toLowerCase(),\r\n      TOKENS: {\r\n        ['0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'.toLowerCase()]: {\r\n          decimals: 18,\r\n          symbol: 'WETH',\r\n        },\r\n      },\r\n      RESOLVERS: {\r\n        ['0x01b92e2c0d06325089c6fd53c98a214f5c75b2ac'.toLowerCase()]: {\r\n          name: 'LexDAO',\r\n          logoUrl: LexDAOLogo,\r\n          termsUrl:\r\n            'https://github.com/lexDAO/Arbitration/blob/master/rules/ToU.md#lexdao-resolver',\r\n        },\r\n      },\r\n    },\r\n    100: {\r\n      SUBGRAPH: 'dan13ram/xdai-smart-invoices',\r\n      WRAPPED_NATIVE_TOKEN: '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d'.toLowerCase(),\r\n      INVOICE_FACTORY: '0x26832d296Be653C1A818B7AaF3D4e5e16A0C314d'.toLowerCase(),\r\n      TOKENS: {\r\n        ['0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d'.toLowerCase()]: {\r\n          decimals: 18,\r\n          symbol: 'WXDAI',\r\n        },\r\n        ['0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1'.toLowerCase()]: {\r\n          decimals: 18,\r\n          symbol: 'WETH',\r\n        },\r\n      },\r\n      RESOLVERS: {\r\n        ['0x034CfED494EdCff96f0D7160dC2B55Cae5Ee69E1'.toLowerCase()]: {\r\n          name: 'LexDAO',\r\n          logoUrl: LexDAOLogo,\r\n          termsUrl:\r\n            'https://github.com/lexDAO/Arbitration/blob/master/rules/ToU.md#lexdao-resolver',\r\n        },\r\n      },\r\n    },\r\n    4: {\r\n      SUBGRAPH: 'dan13ram/rinkeby-smart-invoices',\r\n      WRAPPED_NATIVE_TOKEN: '0xc778417E063141139Fce010982780140Aa0cD5Ab'.toLowerCase(),\r\n      INVOICE_FACTORY: '0x9c94f17C4B7A8E2a75A83466c9F9745a0D9F7e1c'.toLowerCase(),\r\n      TOKENS: {\r\n        ['0xc778417E063141139Fce010982780140Aa0cD5Ab'.toLowerCase()]: {\r\n          decimals: 18,\r\n          symbol: 'WETH',\r\n        },\r\n        ['0x3af6b2f907f0c55f279e0ed65751984e6cdc4a42'.toLowerCase()]: {\r\n          decimals: 18,\r\n          symbol: 'DAI',\r\n        },\r\n        ['0x982e00B16c313E979C0947b85230907Fce45d50e'.toLowerCase()]: {\r\n          decimals: 18,\r\n          symbol: 'TEST',\r\n        },\r\n      },\r\n      RESOLVERS: {\r\n        ['0x1206b51217271FC3ffCa57d0678121983ce0390E'.toLowerCase()]: {\r\n          name: 'LexDAO',\r\n          logoUrl: LexDAOLogo,\r\n          termsUrl:\r\n            'https://github.com/lexDAO/Arbitration/blob/master/rules/ToU.md#lexdao-resolver',\r\n        },\r\n      },\r\n    },\r\n    80001: {\r\n      SUBGRAPH: 'lyghtcode/mumbai-smart-invoice-three',\r\n      WRAPPED_NATIVE_TOKEN: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270'.toLowerCase(),\r\n      INVOICE_FACTORY: '0xfc4E786076C8821c7039d4a4aE03e2341d55e785'.toLowerCase(),\r\n      TOKENS: {\r\n        ['0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270'.toLowerCase()]: {\r\n          decimals: 18,\r\n          symbol: 'WMATIC',\r\n        },\r\n      },\r\n      RESOLVERS: {\r\n        ['0x034CfED494EdCff96f0D7160dC2B55Cae5Ee69E1'.toLowerCase()]: {\r\n          name: 'LexDAO',\r\n          logoUrl: LexDAOLogo,\r\n          termsUrl:\r\n            'https://github.com/lexDAO/Arbitration/blob/master/rules/ToU.md#lexdao-resolver',\r\n        },\r\n      },\r\n    },\r\n    137: {\r\n      SUBGRAPH: 'lyghtcode/mumbai-smart-invoices',\r\n      WRAPPED_NATIVE_TOKEN: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270'.toLowerCase(),\r\n      INVOICE_FACTORY: '0xfc4E786076C8821c7039d4a4aE03e2341d55e785'.toLowerCase(),\r\n      TOKENS: {\r\n        ['0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270'.toLowerCase()]: {\r\n          decimals: 18,\r\n          symbol: 'WMATIC',\r\n        },\r\n      },\r\n      RESOLVERS: {\r\n        ['0x034CfED494EdCff96f0D7160dC2B55Cae5Ee69E1'.toLowerCase()]: {\r\n          name: 'LexDAO',\r\n          logoUrl: LexDAOLogo,\r\n          termsUrl:\r\n            'https://github.com/lexDAO/Arbitration/blob/master/rules/ToU.md#lexdao-resolver',\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n","import Base58 from 'base-58';\r\nimport IPFSClient from 'ipfs-http-client';\r\n\r\nimport { INVOICE_VERSION } from './constants';\r\n\r\nconst ipfsTheGraph = new IPFSClient({\r\n  protocol: 'https',\r\n  host: 'api.thegraph.com',\r\n  port: 443,\r\n  'api-path': '/ipfs/api/v0/',\r\n});\r\n\r\nconst ipfsInfura = new IPFSClient({\r\n  host: 'ipfs.infura.io',\r\n  port: '5001',\r\n  protocol: 'https',\r\n});\r\n\r\n// type Metadata = {\r\n//   projectName: string;\r\n//   projectDescription: string;\r\n//   projectAgreement: string;\r\n//   startDate: number; // seconds since epoch\r\n//   endDate: number; // seconds since epoch\r\n//   version: string; // to differentiating versions of smart-invoice contract/json structure\r\n// }\r\n\r\nexport const uploadMetadata = async meta => {\r\n  const metadata = { ...meta, version: INVOICE_VERSION };\r\n  const objectString = JSON.stringify(metadata);\r\n  const bufferedString = Buffer.from(objectString);\r\n  const [node] = await Promise.all([\r\n    ipfsTheGraph.add(bufferedString),\r\n    ipfsInfura.add(bufferedString), // automatically pinned\r\n  ]);\r\n  const { hash } = node[0];\r\n  await ipfsTheGraph.pin.add(hash);\r\n  const bytes = Buffer.from(Base58.decode(hash));\r\n  return `0x${bytes.slice(2).toString('hex')}`;\r\n};\r\n\r\nexport const uploadDisputeDetails = async meta => {\r\n  const metadata = { ...meta, version: INVOICE_VERSION };\r\n  const objectString = JSON.stringify(metadata);\r\n  const bufferedString = Buffer.from(objectString);\r\n  const [node] = await Promise.all([\r\n    ipfsTheGraph.add(bufferedString),\r\n    ipfsInfura.add(bufferedString), // automatically pinned\r\n  ]);\r\n  const { hash } = node[0];\r\n  await ipfsTheGraph.pin.add(hash);\r\n  const bytes = Buffer.from(Base58.decode(hash));\r\n  return `0x${bytes.slice(2).toString('hex')}`;\r\n};\r\n","import { CONFIG } from '../config';\r\n\r\nconst { INFURA_ID, IPFS_ENDPOINT, BOX_ENDPOINT, NETWORK_CONFIG } = CONFIG;\r\n\r\nexport { INFURA_ID, IPFS_ENDPOINT, BOX_ENDPOINT };\r\n\r\nexport const chainIds = {\r\n  matic: 137,\r\n  mumbai: 80001,\r\n  xdai: 100,\r\n  mainnet: 1,\r\n  rinkeby: 4,\r\n  kovan: 42,\r\n};\r\n\r\nexport const hexChainIds = {\r\n  matic: '0x89',\r\n  mumbai: '0x13881',\r\n  xdai: '0x64',\r\n  mainnet: '0x01',\r\n  rinkeby: '0x04',\r\n  kovan: '0x2a',\r\n};\r\n\r\nexport const networkLabels = {\r\n  80001: 'Mumbai',\r\n  100: 'xDai',\r\n  1: 'Ethereum',\r\n  3: 'Ropsten',\r\n  4: 'Rinkeby',\r\n  5: 'Görli',\r\n  42: 'Kovan',\r\n  56: 'BSC',\r\n  77: 'Sokol',\r\n  137: 'Matic',\r\n};\r\n\r\nexport const networkNames = {\r\n  1: 'ETH Mainnet',\r\n  4: 'Rinkeby Testnet',\r\n  42: 'Kovan Testnet',\r\n  100: 'xDai Chain',\r\n  137: 'Polygon Mainnet',\r\n  80001: 'Mumbai Testnet'\r\n};\r\n\r\nexport const rpcUrls = {\r\n  1: `https://mainnet.infura.io/v3/${INFURA_ID}`,\r\n  4: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\r\n  42: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n  100: 'https://rpc.xdaichain.com',\r\n  137: 'https://rpc-mainnet.matic.network',\r\n  80001:'https://rpc-mumbai.maticvigil.com'\r\n};\r\n\r\nexport const explorerUrls = {\r\n  1: 'https://etherscan.io',\r\n  4: 'https://rinkeby.etherscan.io',\r\n  42: 'https://kovan.etherscan.io',\r\n  100: 'https://blockscout.com/poa/xdai',\r\n  137: 'https://polygonscan.com/',\r\n  80001:'https://mumbai.polygonscan.com/'\r\n};\r\n\r\nexport const nativeSymbols = {\r\n  1: 'ETH',\r\n  4: 'ETH',\r\n  42: 'ETH',\r\n  100: 'XDAI',\r\n  137: 'MATIC',\r\n  80001: 'MATIC'\r\n};\r\n\r\nexport const graphUrls = {\r\n  1: `https://api.thegraph.com/subgraphs/name/${NETWORK_CONFIG[1].SUBGRAPH}`,\r\n  4: `https://api.thegraph.com/subgraphs/name/${NETWORK_CONFIG[4].SUBGRAPH}`,\r\n  100: `https://api.thegraph.com/subgraphs/name/${NETWORK_CONFIG[100].SUBGRAPH}`,\r\n  137: `https://api.thegraph.com/subgraphs/name/${NETWORK_CONFIG[137].SUBGRAPH}`,\r\n  80001: `https://api.thegraph.com/subgraphs/name/${NETWORK_CONFIG[80001].SUBGRAPH}`,\r\n};\r\n\r\nexport const tokens = {\r\n  1: Object.keys(NETWORK_CONFIG[1].TOKENS),\r\n  4: Object.keys(NETWORK_CONFIG[4].TOKENS),\r\n  100: Object.keys(NETWORK_CONFIG[100].TOKENS),\r\n  137: Object.keys(NETWORK_CONFIG[137].TOKENS),\r\n  80001: Object.keys(NETWORK_CONFIG[80001].TOKENS),\r\n};\r\n\r\nexport const tokenInfo = {\r\n  1: NETWORK_CONFIG[1].TOKENS,\r\n  4: NETWORK_CONFIG[4].TOKENS,\r\n  100: NETWORK_CONFIG[100].TOKENS,\r\n  137: NETWORK_CONFIG[137].TOKENS,\r\n  80001: NETWORK_CONFIG[80001].TOKENS,\r\n};\r\n\r\nexport const resolvers = {\r\n  1: Object.keys(NETWORK_CONFIG[1].RESOLVERS),\r\n  4: Object.keys(NETWORK_CONFIG[4].RESOLVERS),\r\n  100: Object.keys(NETWORK_CONFIG[100].RESOLVERS),\r\n  137: Object.keys(NETWORK_CONFIG[137].RESOLVERS),\r\n  80001: Object.keys(NETWORK_CONFIG[80001].RESOLVERS),\r\n};\r\n\r\nexport const resolverInfo = {\r\n  1: NETWORK_CONFIG[1].RESOLVERS,\r\n  4: NETWORK_CONFIG[4].RESOLVERS,\r\n  100: NETWORK_CONFIG[100].RESOLVERS,\r\n  137: NETWORK_CONFIG[137].RESOLVERS,\r\n  80001: NETWORK_CONFIG[80001].RESOLVERS,\r\n};\r\n\r\nexport const wrappedNativeToken = {\r\n  1: NETWORK_CONFIG[1].WRAPPED_NATIVE_TOKEN,\r\n  4: NETWORK_CONFIG[4].WRAPPED_NATIVE_TOKEN,\r\n  100: NETWORK_CONFIG[100].WRAPPED_NATIVE_TOKEN,\r\n  137: NETWORK_CONFIG[137].WRAPPED_NATIVE_TOKEN,\r\n  80001: NETWORK_CONFIG[80001].WRAPPED_NATIVE_TOKEN,\r\n};\r\n\r\nexport const invoiceFactory = {\r\n  1: NETWORK_CONFIG[1].INVOICE_FACTORY,\r\n  4: NETWORK_CONFIG[4].INVOICE_FACTORY,\r\n  100: NETWORK_CONFIG[100].INVOICE_FACTORY,\r\n  137: NETWORK_CONFIG[137].INVOICE_FACTORY,\r\n  80001: NETWORK_CONFIG[80001].INVOICE_FACTORY,\r\n};\r\n\r\nexport const SUPPORTED_NETWORKS = Object.keys(NETWORK_CONFIG).map(n =>\r\n  Number(n),\r\n);\r\n\r\nexport const INVOICE_VERSION = 'smart-invoice-v0';\r\n\r\nexport const ADDRESS_ZERO = '0x0000000000000000000000000000000000000000';\r\n\r\nexport const STEPS = {\r\n  1: {\r\n    step_title: 'Project Details',\r\n    step_details: [\r\n      'Note: All invoice data will be stored publicly on IPFS and can be viewed by anyone.',\r\n      'If you have privacy concerns, we recommend taking care to add permissions to your project agreement document.',\r\n    ],\r\n    next: 'payment details',\r\n  },\r\n  2: {\r\n    step_title: 'Payment Details',\r\n    step_details: [],\r\n    next: 'set payment amounts',\r\n  },\r\n  3: {\r\n    step_title: 'Payment Chunks',\r\n    step_details: [],\r\n    next: 'confirmation',\r\n  },\r\n  4: {\r\n    step_title: 'Confirmation',\r\n    step_details: [],\r\n    next: 'create invoice',\r\n  },\r\n};\r\n"],"sourceRoot":""}